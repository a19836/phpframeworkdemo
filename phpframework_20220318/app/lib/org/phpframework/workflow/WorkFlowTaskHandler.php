<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.xmlfile.XMLFileParser"); include_once get_lib("org.phpframework.workflow.exception.WorkFlowTaskException"); include_once get_lib("org.phpframework.workflow.WorkFlowTaskCache"); include_once get_lib("org.phpframework.phpscript.PHPScriptHandler"); class WorkFlowTaskHandler { const TASKS_WEBROOT_FOLDER_PREFIX = "workflow/tasks/"; private $v6af3467fea; private $pe6097224; private $v103484e461; private $v65746bac17; private $v5b45e18120; private $v24d94846dc; private $v85ea3272a0; private $v58bdbebd81; private $v5a81f4a4ef; private $pfa380b87; public function __construct($v946b7ab5fe, $pe6097224 = "/") { $v946b7ab5fe = trim($v946b7ab5fe); $pe6097224 = trim($pe6097224); if (empty($v946b7ab5fe)) { launch_exception(new WorkFlowTaskException(7)); } if (empty($pe6097224)) { launch_exception(new WorkFlowTaskException(13)); } $this->v6af3467fea = $v946b7ab5fe . self::TASKS_WEBROOT_FOLDER_PREFIX; $this->pe6097224 = $pe6097224 . self::TASKS_WEBROOT_FOLDER_PREFIX; $this->v103484e461 = array( self::getDefaultTasksFolderPath() ); $this->v65746bac17 = array(); $this->v5b45e18120 = array(); $this->v24d94846dc = array(); $this->v85ea3272a0 = array(); $this->v58bdbebd81 = array(); $this->WorkFlowTaskCache = new WorkFlowTaskCache(); } public function initWorkFlowTasks() { $this->f1cb9526bd6(); $this->f60d3e86e46(); } private function f1cb9526bd6() { $this->pfa380b87 = $this->WorkFlowTaskCache->getCachedId( array($this->v103484e461, $this->v65746bac17, $this->v5b45e18120, $this->pe6097224) ); if ($this->WorkFlowTaskCache->isActive() && $this->WorkFlowTaskCache->cachedLoadedTasksIncludesExists($this->pfa380b87) && $this->WorkFlowTaskCache->cachedLoadedTasksExists($this->pfa380b87)) { $pc06f1034 = $this->WorkFlowTaskCache->getCachedLoadedTasksIncludes($this->pfa380b87); $v16ac35fd79 = $pc06f1034 ? count($pc06f1034) : 0; for ($v43dd7d0051 = 0; $v43dd7d0051 < $v16ac35fd79; $v43dd7d0051++) include_once $pc06f1034[$v43dd7d0051]; $v29dfbeade3 = $this->WorkFlowTaskCache->getCachedLoadedTasks($this->pfa380b87); } if (empty($v29dfbeade3)) { $pc06f1034 = array(); $v29dfbeade3 = array(); $this->mc5bd485b7d0a($pc06f1034, $v29dfbeade3); if ($this->WorkFlowTaskCache->isActive()) { $this->WorkFlowTaskCache->setCachedLoadedTasksIncludes($this->pfa380b87, array_keys($pc06f1034) ); $this->WorkFlowTaskCache->setCachedLoadedTasks($this->pfa380b87, $v29dfbeade3); } } $this->v58bdbebd81 = $v29dfbeade3; return $v29dfbeade3; } private function f60d3e86e46() { $v415f088e65 = $this->WorkFlowTaskCache->getCachedId( array($this->pfa380b87, $this->v85ea3272a0) ); if ($this->WorkFlowTaskCache->isActive() && $this->WorkFlowTaskCache->cachedTasksContainersExists($v415f088e65)) { $v8d69cf76d5 = $this->WorkFlowTaskCache->getCachedTasksContainers($v415f088e65); } if (empty($v8d69cf76d5)) { $v8d69cf76d5 = array(); if (is_array($this->v85ea3272a0)) { foreach ($this->v85ea3272a0 as $v0a9aceebca => $v39bb312b8e) { $v8d69cf76d5[$v0a9aceebca] = array(); $v16ac35fd79 = $v39bb312b8e ? count($v39bb312b8e) : 0; for ($v43dd7d0051 = 0; $v43dd7d0051 < $v16ac35fd79; $v43dd7d0051++) { $pf9a72ed6 = $v39bb312b8e[$v43dd7d0051]; $v1d696dbd12 = $this->getTasksByPrefix($pf9a72ed6); $pc37695cb = count($v1d696dbd12); for ($v9d27441e80 = 0; $v9d27441e80 < $pc37695cb; $v9d27441e80++) { $v8d69cf76d5[$v0a9aceebca][] = $v1d696dbd12[$v9d27441e80]["type"]; } } } } if ($this->WorkFlowTaskCache->isActive()) { $this->WorkFlowTaskCache->setCachedTasksContainers($v415f088e65, $v8d69cf76d5); } } $this->v5a81f4a4ef = $v8d69cf76d5; return $v8d69cf76d5; } private function mc5bd485b7d0a(&$pc06f1034, &$v29dfbeade3) { $v58bdbebd81 = self::f3d419e1993($this->v103484e461); foreach ($v58bdbebd81 as $v6b3fa373ec => $v0ad7416965) { $v29dfbeade3[$v6b3fa373ec] = array(); foreach ($v0ad7416965 as $pf9a72ed6 => $v7f5911d32d) { include_once $v7f5911d32d["path"]; $v3ae55a9a2e = $v7f5911d32d["namespace"] . "\\" . $v7f5911d32d["class"]; if (class_exists($v3ae55a9a2e)) { $v7f5911d32d["prefix"] = $v6b3fa373ec . "/" . $pf9a72ed6; if (!is_subclass_of($v3ae55a9a2e, "WorkFlowTask")) launch_exception(new WorkFlowTaskException(3, $v3ae55a9a2e)); else if ($this->isTaskAllowed($v7f5911d32d["prefix"])) { eval('$v1bc2bb1094 = new ' . $v3ae55a9a2e . '();'); $v7f5911d32d["class"] = get_class($v1bc2bb1094); $v7f5911d32d["type"] = hash("crc32b", $v7f5911d32d["prefix"]); $v7f5911d32d["webroot_url"] = $this->pe6097224 . $v7f5911d32d["prefix"] . "/"; if (is_object($v1bc2bb1094)) { unset($v7f5911d32d["obj"]); $v1bc2bb1094->setTaskClassInfo($v7f5911d32d); $v7f5911d32d["obj"] = $v1bc2bb1094; } else { launch_exception(new WorkFlowTaskException(4, $v3ae55a9a2e)); } $pc06f1034[ $v7f5911d32d["path"] ] = 0; $v29dfbeade3[$v6b3fa373ec][ $v7f5911d32d["type"] ] = $v7f5911d32d; } } else { launch_exception(new WorkFlowTaskException(12, $v3ae55a9a2e)); } } } } private function f3d419e1993($v103484e461) { $v1d696dbd12 = array(); $this->v6af3467fea = str_replace("//", "/", $this->v6af3467fea); if (!is_dir($this->v6af3467fea)) if (!mkdir($this->v6af3467fea, 0775, true)) launch_exception(new WorkFlowTaskException(8, $this->v6af3467fea)); $v5edfd6754d = self::prepareFolderPath(self::getDefaultTasksFolderPath()); $v16ac35fd79 = $v103484e461 ? count($v103484e461) : 0; for ($v43dd7d0051 = 0; $v43dd7d0051 < $v16ac35fd79; $v43dd7d0051++) { $pdd397f0a = $v103484e461[$v43dd7d0051]; self::prepareFolderPath($pdd397f0a); if (strpos($pdd397f0a, $v5edfd6754d) === 0) { $v9a84a79e2e = str_replace($v5edfd6754d, "", $pdd397f0a); $pdd397f0a = $v5edfd6754d; if ($v9a84a79e2e) { $v69d408283e = false; for ($v9d27441e80 = 0; $v9d27441e80 < $v16ac35fd79; $v9d27441e80++) { if ($v9d27441e80 != $v43dd7d0051) { $v390faec410 = self::prepareFolderPath($v103484e461[$v9d27441e80]); if (strpos($pdd397f0a, $v390faec410) === 0) { $v69d408283e = true; break; } } } if (!$v69d408283e) $this->addAllowedTaskFolder($v9a84a79e2e); } } $v6b3fa373ec = self::getFolderId($pdd397f0a); $v6af3467fea = $this->v6af3467fea . $v6b3fa373ec . "/"; if (!is_dir($v6af3467fea)) if (!mkdir($v6af3467fea, 0775, true)) launch_exception(new WorkFlowTaskException(8, $v6af3467fea)); $v0ad7416965 = self::f766707153c($pdd397f0a, $v6af3467fea); $v1d696dbd12[ $v6b3fa373ec ] = $v0ad7416965; } return $v1d696dbd12; } private static function f766707153c($v92dcc541a8, $pa5b0817e, $pc89d9674 = false) { $v1d696dbd12 = array(); if (is_dir($v92dcc541a8) && ($v89d33f4133 = opendir($v92dcc541a8)) ) { $pc89d9674 = empty($pc89d9674) ? $v92dcc541a8 : $pc89d9674; $pbeb0dcc1 = self::getFolderId($pc89d9674); while( ($v7dffdb5a5b = readdir($v89d33f4133)) !== false) { if (substr($v7dffdb5a5b, 0, 1) != ".") { if(is_dir($v92dcc541a8 . $v7dffdb5a5b)) { if ($v7dffdb5a5b == "webroot") if (!self::me1bfc9cf0775($v92dcc541a8 . $v7dffdb5a5b, $pa5b0817e)) launch_exception(new WorkFlowTaskException(9, array($v92dcc541a8 . $v7dffdb5a5b, $pa5b0817e))); $v0ad7416965 = self::f766707153c($v92dcc541a8 . $v7dffdb5a5b . "/", $pa5b0817e . $v7dffdb5a5b . "/", $pc89d9674); $v1d696dbd12 = array_merge($v1d696dbd12, $v0ad7416965); } else if ($v7dffdb5a5b == "WorkFlowTaskImpl.php") { $v1335217393 = basename($v7dffdb5a5b, ".php"); $pf9a72ed6 = substr($v92dcc541a8, strlen($pc89d9674), ( strlen($v92dcc541a8) - strlen($pc89d9674) ) - 1); $pae77d38c = file_get_contents($v92dcc541a8 . $v7dffdb5a5b); preg_match_all("/([\n\t ;]+)namespace ([^;]+);/u", $pae77d38c, $pbae7526c, PREG_PATTERN_ORDER); $v1efaf06c58 = trim($pbae7526c[2][0]); if ($v1efaf06c58) { if (is_dir($v92dcc541a8 . "webroot")) if (!self::me1bfc9cf0775($v92dcc541a8 . "webroot", $pa5b0817e)) launch_exception(new WorkFlowTaskException(9, array($v92dcc541a8 . "webroot", $pa5b0817e))); $v1d696dbd12[$pf9a72ed6] = array( "path" => $v92dcc541a8 . $v7dffdb5a5b, "webroot_path" => $pa5b0817e, "class" => "WorkFlowTaskImpl", "namespace" => $v1efaf06c58, ); } else launch_exception(new WorkFlowTaskException(10, $v92dcc541a8 . $v7dffdb5a5b)); } } } closedir($v89d33f4133); } return $v1d696dbd12; } private static function me1bfc9cf0775($v92dcc541a8, $pa5b0817e) { if ($v92dcc541a8 && $pa5b0817e && is_dir($v92dcc541a8)) { if (!is_dir($pa5b0817e)) @mkdir($pa5b0817e, 0755, true); if (is_dir($pa5b0817e)) { $v5c1c342594 = true; $v6ee393d9fb = scandir($v92dcc541a8); if ($v6ee393d9fb) foreach ($v6ee393d9fb as $v7dffdb5a5b) if ($v7dffdb5a5b != '.' && $v7dffdb5a5b != '..') { if (is_dir("$v92dcc541a8/$v7dffdb5a5b")) { if (!self::me1bfc9cf0775("$v92dcc541a8/$v7dffdb5a5b", "$pa5b0817e/$v7dffdb5a5b")) $v5c1c342594 = false; } else if (!copy("$v92dcc541a8/$v7dffdb5a5b", "$pa5b0817e/$v7dffdb5a5b")) $v5c1c342594 = false; } return $v5c1c342594; } } } public function parseFile($pf3dc0762, $v8a08cc45ec = null, $v5d3813882f = null) { $pb35f0325 = $v5d3813882f ? $v5d3813882f["return_obj"] : false; $pfb662071 = XMLFileParser::parseXMLFileToArray($pf3dc0762, false, false, false); $v1d696dbd12 = array(); $padcfd46e = array(); if (is_array($pfb662071["tasks"][0]["childs"]["task"])) { if (!is_array($v8a08cc45ec)) $v8a08cc45ec = $this->f36630e5f0f($pfb662071); $this->md1810470e45c($pfb662071, $v8a08cc45ec); $v3455d8ee90 = array(); foreach ($pfb662071["tasks"][0]["childs"]["task"] as $v2c1228f003) { $v7f5911d32d = $this->mbb0b58fb706c($v2c1228f003); if ($v7f5911d32d) { $v1d696dbd12[ $v7f5911d32d->data["id"] ] = $v7f5911d32d; if (isset($v7f5911d32d->data["start"]) && $v7f5911d32d->data["start"]) { if (is_numeric($v7f5911d32d->data["start"])) $padcfd46e[ $v7f5911d32d->data["start"] ] = $v7f5911d32d->data["id"]; else $v3455d8ee90[] = $v7f5911d32d->data["id"]; } } else launch_exception(new WorkFlowTaskException(1, $v2c1228f003["childs"]["id"][0]["value"])); } if (empty($padcfd46e)) $padcfd46e = $this->mc57135602132($pfb662071); ksort($padcfd46e); $padcfd46e = array_merge($padcfd46e, $v3455d8ee90); } $pba23d78c = $pb35f0325 ? array() : ""; $v16ac35fd79 = count($padcfd46e); for ($v43dd7d0051 = 0; $v43dd7d0051 < $v16ac35fd79; $v43dd7d0051++) { $v8282c7dd58 = $padcfd46e[$v43dd7d0051]; $v9ad1385268 = WorkFlowTask::printTask($v1d696dbd12, $v8282c7dd58, null, "", $v5d3813882f); if ($pb35f0325) $pba23d78c[] = $v9ad1385268[0]; else $pba23d78c .= $v9ad1385268; } return $pba23d78c; } private function mc57135602132($pfb662071) { $v53ac33562d = array(); $pf8ff20e3 = array(); $v206db02342 = array(); if (is_array($pfb662071["tasks"][0]["childs"]["task"])) { foreach ($pfb662071["tasks"][0]["childs"]["task"] as $v99cc73907d => $v2c1228f003) { $pf8ff20e3[] = WorkFlowTask::getTaskId($v2c1228f003); $v6939304e91 = WorkFlowTask::getTaskExists($v2c1228f003); if ($v6939304e91) foreach ($v6939304e91 as $v7aba950727 => $v1d98ab02ab) { $pc37695cb = $v1d98ab02ab ? count($v1d98ab02ab) : 0; for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) $v206db02342[] = $v1d98ab02ab[$v43dd7d0051]; } } $v53ac33562d = array_diff($pf8ff20e3, $v206db02342); } return $v53ac33562d; } private function md1810470e45c(&$pfb662071, $v8a08cc45ec) { if (is_array($pfb662071["tasks"][0]["childs"]["task"]) && !empty($v8a08cc45ec)) { $pc37695cb = count($v8a08cc45ec); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v8f51b9ab8b = $v8a08cc45ec[$v43dd7d0051]; $v17f2828895 = $v8f51b9ab8b[0]; $pf6db3176 = $v8f51b9ab8b[1]; $pe71fae33 = $v8f51b9ab8b[2]; if (!$pe71fae33) { foreach ($pfb662071["tasks"][0]["childs"]["task"] as $v99cc73907d => $v2c1228f003) { $v8282c7dd58 = WorkFlowTask::getTaskId($v2c1228f003); if ($v8282c7dd58 == $v17f2828895) { if (is_array($v2c1228f003["childs"]["exits"][0]["childs"])) { $pd66b575f = array(); foreach ($v2c1228f003["childs"]["exits"][0]["childs"] as $v7aba950727 => $v40b113f5d9) { $v16ac35fd79 = $v40b113f5d9 ? count($v40b113f5d9) : 0; for ($v9d27441e80 = 0; $v9d27441e80 < $v16ac35fd79; $v9d27441e80++) { if ($v40b113f5d9[$v9d27441e80]["childs"]["task_id"][0]["value"] != $pf6db3176) { $pd66b575f[$v7aba950727][] = $v40b113f5d9[$v9d27441e80]; } } } $v2c1228f003["childs"]["exits"][0]["childs"] = $pd66b575f; $pfb662071["tasks"][0]["childs"]["task"][$v99cc73907d] = $v2c1228f003; } } } } } } return $pfb662071; } public function getLoopsTasksFromFile($pf3dc0762) { $pfb662071 = XMLFileParser::parseXMLFileToArray($pf3dc0762, false, false, false); return $this->f36630e5f0f($pfb662071); } private function f36630e5f0f($pfb662071) { $pa2604782 = array(); if (is_array($pfb662071["tasks"][0]["childs"]["task"])) { $v57a9807e67 = array(); foreach ($pfb662071["tasks"][0]["childs"]["task"] as $v99cc73907d => $v2c1228f003) { $v8282c7dd58 = WorkFlowTask::getTaskId($v2c1228f003); $v6939304e91 = WorkFlowTask::getTaskExists($v2c1228f003); $v47eff2e9c7 = array(); $pc37695cb = count($v57a9807e67); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $pa32be502 = $v57a9807e67[$v43dd7d0051]; if (in_array($v8282c7dd58, $pa32be502)) { $v47eff2e9c7[] = $v43dd7d0051; } } if (empty($v47eff2e9c7)) { $v47eff2e9c7 = array(count($v57a9807e67)); $v57a9807e67[] = array($v8282c7dd58); } $pfe947a0a = array(); $pc37695cb = count($v57a9807e67); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $pa32be502 = $v57a9807e67[$v43dd7d0051]; if (in_array($v43dd7d0051, $v47eff2e9c7)) { $v7204272378 = false; foreach ($v6939304e91 as $v7aba950727 => $v1d98ab02ab) { $pd28479e5 = $v1d98ab02ab ? count($v1d98ab02ab) : 0; for ($v9d27441e80 = 0; $v9d27441e80 < $pd28479e5; $v9d27441e80++) { $v0b70a1f3bc = $v1d98ab02ab[$v9d27441e80]; if (in_array($v0b70a1f3bc, $pa32be502)) { $v3fb9f41470 = WorkFlowTask::getTaskType($v2c1228f003); $v7f5911d32d = $this->getTaskByType($v3fb9f41470); $pe71fae33 = false; if ($v7f5911d32d && isset($v7f5911d32d["obj"]) && is_object($v7f5911d32d["obj"])) { $pe71fae33 = $v7f5911d32d["obj"]->isLoopTask(); } $pa2604782[ hash("crc32b", "$v8282c7dd58/$v0b70a1f3bc") ] = array($v8282c7dd58, $v0b70a1f3bc, $pe71fae33); } else { $pfe947a0a[] = array_merge($pa32be502, array($v0b70a1f3bc)); $v7204272378 = true; } } } if (!$v7204272378) { $pfe947a0a[] = $pa32be502; } } else { $pfe947a0a[] = $pa32be502; } } $v57a9807e67 = $pfe947a0a; } } return array_values($pa2604782); } private function mbb0b58fb706c($v2c1228f003) { $v3fb9f41470 = WorkFlowTask::getTaskType($v2c1228f003); $v7f5911d32d = $this->getTaskByType($v3fb9f41470); if ($v7f5911d32d && isset($v7f5911d32d["obj"]) && is_object($v7f5911d32d["obj"]) && get_class($v7f5911d32d["obj"]) == $v7f5911d32d["class"]) { $v1bc2bb1094 = $v7f5911d32d["obj"]; if (isset($v1bc2bb1094)) { $pa1327e3e = $v1bc2bb1094->cloneTask(); if (!empty($pa1327e3e)) { $pa1327e3e->parse($v2c1228f003); return $pa1327e3e; } else { launch_exception(new WorkFlowTaskException(6, array($v7f5911d32d["class"], $pa1327e3e) )); } } else { launch_exception(new WorkFlowTaskException(5, array($v7f5911d32d["class"], $v7f5911d32d["obj"]) )); } } else { launch_exception(new WorkFlowTaskException(5, array($v7f5911d32d["class"], $v7f5911d32d["obj"]) )); } return false; } public function getLoadedTasksSettingsCacheId($v9b391a5b1f = false) { return $this->WorkFlowTaskCache->getCachedId( array($this->pfa380b87, $this->v24d94846dc, $v9b391a5b1f) ); } public function getCachedLoadedTasksSettings($pcc09eb12) { return $this->WorkFlowTaskCache->getCachedLoadedTasksSettings($pcc09eb12); } public function getLoadedTasksSettings($v9b391a5b1f = false) { $v524bbc0f84 = array(); $v09dbac2928 = $this->getLoadedTasksSettingsCacheId($v9b391a5b1f); if ($this->WorkFlowTaskCache->isActive() && $this->WorkFlowTaskCache->cachedLoadedTasksSettingsExists($v09dbac2928)) $v524bbc0f84 = $this->WorkFlowTaskCache->getCachedLoadedTasksSettings($v09dbac2928); if (empty($v524bbc0f84) && is_array($this->v58bdbebd81)) { foreach ($this->v58bdbebd81 as $v6b3fa373ec => $v0ad7416965) { $v524bbc0f84[$v6b3fa373ec] = array(); foreach ($v0ad7416965 as $pc8421459 => $v7f5911d32d) { $pb56e7272 = dirname($v7f5911d32d["path"]) . "/"; $v5cfc371e58 = $v7f5911d32d["webroot_path"] . "/"; $v9392affeb3 = $pb56e7272 . "settings.xml"; if (!file_exists($v9392affeb3)) { $pae77d38c = $this->f715f882b27($pb56e7272 . "WorkFlowTaskHtml.php", $v7f5911d32d, $pb56e7272); $v524bbc0f84[$v6b3fa373ec][$pc8421459]["task_properties_html"] = $pae77d38c ? $pae77d38c : null; $pae77d38c = $this->f715f882b27($pb56e7272 . "WorkFlowConnectionHtml.php", $v7f5911d32d, $pb56e7272); $v524bbc0f84[$v6b3fa373ec][$pc8421459]["connection_properties_html"] = $pae77d38c ? $pae77d38c : null; } else { $pfb662071 = XMLFileParser::parseXMLFileToArray($v9392affeb3, $v9b391a5b1f); $pfb662071 = MyXML::complexArrayToBasicArray($pfb662071, array("lower_case_keys" => true, "trim" => true)); $pfb662071 = $pfb662071["task"]; if ($this->isTaskAllowedByTag($pfb662071["tag"])) { if (empty($pfb662071["label"])) $pfb662071["label"] = substr($v7f5911d32d["prefix"], strpos($v7f5911d32d["prefix"], "/") + 1); if (isset($pfb662071["files"])) { $pae77d38c = $this->f715f882b27($pfb662071["files"]["task_properties_html"], $v7f5911d32d, $pb56e7272); if (isset($pae77d38c)) $pfb662071["task_properties_html"] = $pae77d38c; unset($pfb662071["files"]["task_properties_html"]); $pae77d38c = $this->f715f882b27($pfb662071["files"]["connection_properties_html"], $v7f5911d32d, $pb56e7272); if (isset($pae77d38c)) $pfb662071["connection_properties_html"] = $pae77d38c; unset($pfb662071["files"]["connection_properties_html"]); if (!empty($pfb662071["files"]["css"])) { if (!is_array($pfb662071["files"]["css"])) $pfb662071["files"]["css"] = array($pfb662071["files"]["css"]); $v95f2faaab2 = array(); $pc37695cb = count($pfb662071["files"]["css"]); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v3f7a88fc27 = $v5cfc371e58 . $pfb662071["files"]["css"][$v43dd7d0051]; if (is_file($v3f7a88fc27)) $v95f2faaab2[$v3f7a88fc27] = $v7f5911d32d["webroot_url"] . $pfb662071["files"]["css"][$v43dd7d0051]; } $pfb662071["files"]["css"] = $v95f2faaab2; } if (!empty($pfb662071["files"]["js"])) { if (!is_array($pfb662071["files"]["js"])) $pfb662071["files"]["js"] = array($pfb662071["files"]["js"]); $v95f2faaab2 = array(); $pc37695cb = count($pfb662071["files"]["js"]); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v3f7a88fc27 = $v5cfc371e58 . $pfb662071["files"]["js"][$v43dd7d0051]; if (is_file($v3f7a88fc27)) $v95f2faaab2[$v3f7a88fc27] = $v7f5911d32d["webroot_url"] . $pfb662071["files"]["js"][$v43dd7d0051]; } $pfb662071["files"]["js"] = $v95f2faaab2; } } $v4159504aa3 = array("statements", "reserved_function_names", "reserved_object_method_names"); $pc37695cb = count($v4159504aa3); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v3fb9f41470 = $v4159504aa3[$v43dd7d0051]; if (isset($pfb662071["code_parser"][$v3fb9f41470])) { $pf72c1d58 = array(); $v9cd205cadb = explode(",", $pfb662071["code_parser"][$v3fb9f41470]); $pd28479e5 = count($v9cd205cadb); for ($v9d27441e80 = 0; $v9d27441e80 < $pd28479e5; $v9d27441e80++) { $v1d2d80ed32 = trim($v9cd205cadb[$v9d27441e80]); if ($v1d2d80ed32) $pf72c1d58[] = $v1d2d80ed32; } $pfb662071["code_parser"][$v3fb9f41470] = $pf72c1d58; } } $v524bbc0f84[$v6b3fa373ec][$pc8421459] = $pfb662071; } } } } if ($this->WorkFlowTaskCache->isActive()) $this->WorkFlowTaskCache->setCachedLoadedTasksSettings($v09dbac2928, $v524bbc0f84); } return $v524bbc0f84; } private function f715f882b27($v47d0830f67, $v7f5911d32d, $pb56e7272) { if (!empty($v47d0830f67)) { if (is_array($v47d0830f67)) $v47d0830f67 = $v47d0830f67[0]; if (file_exists($pb56e7272 . $v47d0830f67)) { $pae77d38c = file_get_contents($pb56e7272 . $v47d0830f67); $v91158153da = pathinfo($pb56e7272 . $v47d0830f67, PATHINFO_EXTENSION); if (strtolower($v91158153da) == "php") { $pc5a892eb = array("task" => $v7f5911d32d, "file_path" => $pb56e7272 . $v47d0830f67); return PHPScriptHandler::parseContent($pae77d38c, $pc5a892eb); } else return $pae77d38c; } } return null; } private function mbca7ae303a56(&$pf9a72ed6) { if (substr($pf9a72ed6, 0, 1) == "/") $pf9a72ed6 = substr($pf9a72ed6, 1); if (substr($pf9a72ed6, strlen($pf9a72ed6) - 1) == "/") $pf9a72ed6 = substr($pf9a72ed6, 0, strlen($pf9a72ed6) - 1); $pf9a72ed6 = str_replace("//", "/", $pf9a72ed6); return $pf9a72ed6; } public function getTaskTypeByPrefix($pf9a72ed6) { $v7f5911d32d = $this->getTasksByPrefix($pf9a72ed6, 1); return !empty($v7f5911d32d) ? $v7f5911d32d[0]["type"] : false; } public function getTasksByPrefix($pf9a72ed6, $pd67d6631 = 0) { $pbad23bf6 = array(); if (is_array($this->v58bdbebd81)) { $this->mbca7ae303a56($pf9a72ed6); foreach ($this->v58bdbebd81 as $v6b3fa373ec => $v0ad7416965) { foreach ($v0ad7416965 as $pc8421459 => $v7f5911d32d) { if ($v7f5911d32d["prefix"] == $pf9a72ed6) { $pbad23bf6[] = $v7f5911d32d; break; } else { $v682b022fda = $v7f5911d32d["prefix"]; while ( ($pbd1bc7b0 = strpos($v682b022fda, "/")) !== false ) { $v682b022fda = substr($v682b022fda, $pbd1bc7b0 + 1); if ($v682b022fda == $pf9a72ed6) { $pbad23bf6[] = $v7f5911d32d; break; } } } if ($pa1c530a6 > 0 && count($pbad23bf6) == $pd67d6631) { break; } } } } return $pbad23bf6; } public function getTasksByTag($pfbb6ee46, $pd67d6631 = 0) { $pbad23bf6 = array(); $pfbb6ee46 = strtolower($pfbb6ee46); $v524bbc0f84 = $this->getLoadedTasksSettings(); if (is_array($v524bbc0f84)) { foreach ($v524bbc0f84 as $v6b3fa373ec => $v0ad7416965) { foreach ($v0ad7416965 as $pc8421459 => $v003bc751fd) { if (strtolower($v003bc751fd["tag"]) == $pfbb6ee46) { $v7f5911d32d = $this->getTaskByType($pc8421459); if ($v7f5911d32d) { $pbad23bf6[] = $v7f5911d32d; if ($pa1c530a6 > 0 && count($pbad23bf6) == $pd67d6631) { break; } } } } } } return $pbad23bf6; } public function getTaskByType($pc8421459) { if (is_array($this->v58bdbebd81)) foreach ($this->v58bdbebd81 as $v6b3fa373ec => $v0ad7416965) foreach ($v0ad7416965 as $v7f5911d32d) if ($v7f5911d32d["type"] == $pc8421459) return $v7f5911d32d; return null; } public static function prepareFolderPath(&$pdd397f0a) { $pdd397f0a = file_exists($pdd397f0a) ? realpath($pdd397f0a) : $pdd397f0a; $pdd397f0a = str_replace("//", "/", trim($pdd397f0a)); $pdd397f0a .= substr($pdd397f0a, strlen($pdd397f0a) - 1) == "/" ? "" : "/"; return $pdd397f0a; } public static function getFolderId($pdd397f0a) { $pdd397f0a = self::prepareFolderPath($pdd397f0a); $pbcdea353 = self::prepareFolderPath(self::getDefaultTasksFolderPath()); return $pdd397f0a == $pbcdea353 ? "default" : hash("crc32b", $pdd397f0a); } public static function getDefaultTasksFolderPath() { return normalize_windows_path_to_linux(__DIR__) . "/task"; } public function addTasksFolderPath($pd016d02f) { $this->v103484e461[] = $pd016d02f; } public function addTasksFoldersPath($v8f31bfcb8e) { if ($v8f31bfcb8e) foreach ($v8f31bfcb8e as $pd016d02f) $this->addTasksFolderPath($pd016d02f); } public function setTasksFolderPaths($v103484e461) { $this->v103484e461 = is_array($v103484e461) ? $v103484e461 : array($v103484e461); } public function getTasksFolderPaths() { return $this->v103484e461; } public function addAllowedTaskType($v2eb7ca2bbe) { $this->v65746bac17[] = $this->mbca7ae303a56($v2eb7ca2bbe); } public function setAllowedTaskTypes($v65746bac17) { $this->v65746bac17 = array(); if ($v65746bac17) { $v16ac35fd79 = count($v65746bac17); for ($v43dd7d0051 = 0; $v43dd7d0051 < $v16ac35fd79; $v43dd7d0051++) $this->v65746bac17[$v43dd7d0051] = $this->mbca7ae303a56($v65746bac17[$v43dd7d0051]); } } public function getAllowedTaskTypes() { return $this->v65746bac17; } public function addAllowedTaskFolder($pa9ee19bc) { $this->v5b45e18120[] = $this->mbca7ae303a56($pa9ee19bc); } public function setAllowedTaskFolders($v5b45e18120) { $this->v5b45e18120 = array(); if ($v5b45e18120) { $v16ac35fd79 = count($v5b45e18120); for ($v43dd7d0051 = 0; $v43dd7d0051 < $v16ac35fd79; $v43dd7d0051++) $this->v5b45e18120[$v43dd7d0051] = $this->mbca7ae303a56($v5b45e18120[$v43dd7d0051]); } } public function getAllowedTaskFolders() { return $this->v5b45e18120; } public function addAllowedTaskTagsFromFolders($pa10f8988) { if ($pa10f8988) foreach ($pa10f8988 as $v9a630a856f) $this->addAllowedTaskTagsFromFolder($v9a630a856f); } public function addAllowedTaskTagsFromFolder($v9a630a856f) { $v8a9674a7c9 = $this->f2011bfd81f($v9a630a856f); foreach ($v8a9674a7c9 as $v1b1c6a10a2) $this->v24d94846dc[] = $v1b1c6a10a2; } public function addAllowedTaskTag($v23d6a1dc75) { $this->v24d94846dc[] = $v23d6a1dc75; } public function setAllowedTaskTags($v24d94846dc) { $this->v24d94846dc = $v24d94846dc; } public function getAllowedTaskTags() { return $this->v24d94846dc; } public function isTaskAllowed($pf9a72ed6) { if (empty($this->v65746bac17) && empty($this->v5b45e18120)) return true; return $this->isTaskAllowedByPrefix($pf9a72ed6) && $this->isTaskAllowedByFolder($pf9a72ed6); } public function isTaskAllowedByPrefix($pf9a72ed6) { if (empty($this->v65746bac17) || in_array($pf9a72ed6, $this->v65746bac17)) return true; while ( ($pbd1bc7b0 = strpos($pf9a72ed6, "/")) !== false ) { $pf9a72ed6 = substr($pf9a72ed6, $pbd1bc7b0 + 1); if (in_array($pf9a72ed6, $this->v65746bac17)) return true; } return false; } public function isTaskAllowedByFolder($v9a630a856f) { if (empty($this->v5b45e18120) || in_array($v9a630a856f, $this->v5b45e18120)) return true; $v16ac35fd79 = count($this->v5b45e18120); for ($v43dd7d0051 = 0; $v43dd7d0051 < $v16ac35fd79; $v43dd7d0051++) { $pa9ee19bc = $this->v5b45e18120[$v43dd7d0051]; $pbd1bc7b0 = strpos($v9a630a856f, $pa9ee19bc); if ($pbd1bc7b0 === 0 && substr($v9a630a856f, strlen($pa9ee19bc), 1) == "/") return true; else { $pbd1bc7b0 = strpos($v9a630a856f, "default/" . $pa9ee19bc); if ($pbd1bc7b0 === 0 && substr($v9a630a856f, strlen("default/" . $pa9ee19bc), 1) == "/") return true; } } return false; } public function isTaskAllowedByTag($pfbb6ee46) { if (empty($this->v24d94846dc) || in_array($pfbb6ee46, $this->v24d94846dc)) return true; if (!isset($pfbb6ee46) && in_array("", $this->v24d94846dc)) return true; return false; } public function addTasksContainer($v0a9aceebca, $v9e130ca1a8) { $this->v85ea3272a0[ $v0a9aceebca ] = $v9e130ca1a8; } public function setTasksContainers($v85ea3272a0) { $this->v85ea3272a0 = $v85ea3272a0; } public function getTasksContainers() { return $this->v85ea3272a0; } public function getParsedTasksContainers() { return $this->v5a81f4a4ef; } public function getLoadedTasks() { return $this->v58bdbebd81; } public function setCacheRootPath($v17be587282) { $this->WorkFlowTaskCache->initCacheDirPath($v17be587282); } public function flushCache() { $v5c1c342594 = $this->WorkFlowTaskCache->flushCache(); return $v5c1c342594 && CacheHandlerUtil::deleteFolder($this->v6af3467fea); } private static function f2011bfd81f($pdd397f0a) { $v8a9674a7c9 = array(); if (is_dir($pdd397f0a) && ($v89d33f4133 = opendir($pdd397f0a)) ) { while( ($v7dffdb5a5b = readdir($v89d33f4133)) !== false) { if (substr($v7dffdb5a5b, 0, 1) != ".") { if(is_dir($pdd397f0a . $v7dffdb5a5b)) { $v82dcaf84ad = self::f2011bfd81f($pdd397f0a . $v7dffdb5a5b . "/"); $v8a9674a7c9 = array_merge($v8a9674a7c9, $v82dcaf84ad); } else if ($v7dffdb5a5b == "WorkFlowTaskImpl.php") { if (file_exists($pdd397f0a . "settings.xml")) { $pfb662071 = XMLFileParser::parseXMLFileToArray($pdd397f0a . "settings.xml"); $pfb662071 = MyXML::complexArrayToBasicArray($pfb662071, array("lower_case_keys" => true, "trim" => true)); $pfb662071 = $pfb662071["task"]; $v1b1c6a10a2 = $pfb662071["tag"]; if ($v1b1c6a10a2) $v8a9674a7c9[] = $v1b1c6a10a2; break; } } } } closedir($v89d33f4133); } return $v8a9674a7c9; } } ?>
