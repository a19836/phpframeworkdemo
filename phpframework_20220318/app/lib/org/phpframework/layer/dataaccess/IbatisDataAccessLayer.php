<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.layer.dataaccess.DataAccessLayer"); include_once get_lib("org.phpframework.sqlmap.SQLMapIncludesHandler"); class IbatisDataAccessLayer extends DataAccessLayer { public function callQuerySQL($pcd8c70bc, $pf9445ab0, $v20b8676a9f, $v9367d5be85 = false, $v5d3813882f = false) { debug_log_function("IbatisDataAccessLayer->callQuerySQL", array($pcd8c70bc, $pf9445ab0, $v20b8676a9f, $v9367d5be85)); $v5d3813882f["call_query_sql"] = true; $this->initModuleServices($pcd8c70bc); if($this->getErrorHandler()->ok()) { return $this->md8cd08bf5303($pcd8c70bc, $pf9445ab0, $v20b8676a9f, $v9367d5be85, $v5d3813882f); } return false; } public function callQuery($pcd8c70bc, $pf9445ab0, $v20b8676a9f, $v9367d5be85 = false, $v5d3813882f = false) { debug_log_function("IbatisDataAccessLayer->callQuery(", array($pcd8c70bc, $pf9445ab0, $v20b8676a9f, $v9367d5be85, $v5d3813882f)); $v18521bca9a = $this->isCacheActive(); $v5d3813882f = $v5d3813882f ? $v5d3813882f : array(); $pe7197351 = array_merge($v5d3813882f, array("key_suffix" => "_includes")); if($v18521bca9a && !$v5d3813882f["no_cache"] && $this->getCacheLayer()->isValid($pcd8c70bc, $v20b8676a9f, $v9367d5be85, $v5d3813882f)) { $pc06f1034 = $this->getCacheLayer()->get($pcd8c70bc, $v20b8676a9f, $v9367d5be85, $pe7197351); SQLMapIncludesHandler::includeLibsOfResultClassAndMap($pc06f1034); return $this->getCacheLayer()->get($pcd8c70bc, $v20b8676a9f, $v9367d5be85, $v5d3813882f); } $this->initModuleServices($pcd8c70bc); if($this->getErrorHandler()->ok()) { $v9ad1385268 = $this->md8cd08bf5303($pcd8c70bc, $pf9445ab0, $v20b8676a9f, $v9367d5be85, $v5d3813882f, $pc06f1034); if($this->getErrorHandler()->ok()) { if($v18521bca9a) { $this->getCacheLayer()->check($pcd8c70bc, $v20b8676a9f, $v9367d5be85, $pc06f1034, $pe7197351); $this->getCacheLayer()->check($pcd8c70bc, $v20b8676a9f, $v9367d5be85, $v9ad1385268, $v5d3813882f); } return $v9ad1385268; } } return false; } public function callSelectSQL($pc8b88eb4, $v95eeadc9e9, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuerySQL($pc8b88eb4, "select", $v95eeadc9e9, $v9367d5be85, $v5d3813882f); } public function callSelect($pc8b88eb4, $v95eeadc9e9, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuery($pc8b88eb4, "select", $v95eeadc9e9, $v9367d5be85, $v5d3813882f); } public function callInsertSQL($pc8b88eb4, $v95eeadc9e9, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuerySQL($pc8b88eb4, "insert", $v95eeadc9e9, $v9367d5be85, $v5d3813882f); } public function callInsert($pc8b88eb4, $v95eeadc9e9, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuery($pc8b88eb4, "insert", $v95eeadc9e9, $v9367d5be85, $v5d3813882f); } public function callUpdateSQL($pc8b88eb4, $v95eeadc9e9, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuerySQL($pc8b88eb4, "update", $v95eeadc9e9, $v9367d5be85, $v5d3813882f); } public function callUpdate($pc8b88eb4, $v95eeadc9e9, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuery($pc8b88eb4, "update", $v95eeadc9e9, $v9367d5be85, $v5d3813882f); } public function callDeleteSQL($pc8b88eb4, $v95eeadc9e9, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuerySQL($pc8b88eb4, "delete", $v95eeadc9e9, $v9367d5be85, $v5d3813882f); } public function callDelete($pc8b88eb4, $v95eeadc9e9, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuery($pc8b88eb4, "delete", $v95eeadc9e9, $v9367d5be85, $v5d3813882f); } public function callProcedureSQL($pc8b88eb4, $v95eeadc9e9, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuerySQL($pc8b88eb4, "procedure", $v95eeadc9e9, $v9367d5be85, $v5d3813882f); } public function callProcedure($pc8b88eb4, $v95eeadc9e9, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuery($pc8b88eb4, "procedure", $v95eeadc9e9, $v9367d5be85, $v5d3813882f); } private function md8cd08bf5303($pcd8c70bc, $pf9445ab0, $v20b8676a9f, $v9367d5be85, $v5d3813882f, &$pc06f1034 = false) { $pc8b88eb4 = $this->modules[$pcd8c70bc]; $v11506aed93 = $this->modules_path[$pcd8c70bc]; if(isset($pc8b88eb4[$v20b8676a9f])) { $v95eeadc9e9 = $pc8b88eb4[$v20b8676a9f]; $v269e64f6b5 = $v11506aed93 . ($v95eeadc9e9[2] != "file" ? "/" . $v95eeadc9e9[0] : ""); $v71571534b0 = $v95eeadc9e9[1]; if($v269e64f6b5 && file_exists($v269e64f6b5)) { $v43972b7818 = $this->getSQLClient($v5d3813882f); if($this->isCacheActive()) { $v43972b7818->setCacheRootPath( $this->getCacheLayer()->getCachedDirPath() ); } else { $v43972b7818->setCacheRootPath(false); } $v43972b7818->loadXML($v269e64f6b5); $v9d1744e29c = $v43972b7818->getQuery($pf9445ab0, $v71571534b0); if($v9d1744e29c) { if($v5d3813882f["call_query_sql"]) { return $v43972b7818->getQuerySQL($v9d1744e29c, $v9367d5be85, $v5d3813882f); } else { $pc06f1034 = $v43972b7818->getLibsOfResultClassAndMap($v9d1744e29c); return $v43972b7818->execQuery($v9d1744e29c, $v9367d5be85, $v5d3813882f); } } return false; } launch_exception(new DataAccessLayerException(1, $v269e64f6b5)); return false; } launch_exception(new DataAccessLayerException(2, $pcd8c70bc . "::" . $pf9445ab0 . "::" . $v20b8676a9f)); return false; } protected function getRegexToGrepDataAccessFilesAndGetNodeIds() { return "/<(insert|update|delete|select|procedure)([^>]*)([ ]+)id=([\"]?)([\w\-\+&#;\s\.]+)([\"]?)/iu"; } } ?>
