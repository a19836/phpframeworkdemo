<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.sqlmap.SQLMap"); include_once get_lib("org.phpframework.xmlfile.XMLFileParser"); include get_lib("org.phpframework.sqlmap.exception.SQLMapClientException"); class SQLMapClient extends SQLMap { private $pcdca0571; private $pdb735a1c; private $v3ce41b7e81; public function __construct() { parent::__construct(); } public function setNodesData($pcdca0571) {$this->pcdca0571 = $pcdca0571;} public function getNodesData() {return $this->pcdca0571;} public function setRDBBroker($pdb735a1c) {$this->pdb735a1c = $pdb735a1c;} public function getRDBBroker() {return $this->pdb735a1c;} public function setSQLMapClientCache($v3ce41b7e81) {$this->v3ce41b7e81 = $v3ce41b7e81;} public function getSQLMapClientCache() {return $this->v3ce41b7e81;} public function setCacheRootPath($v17be587282) { $this->v3ce41b7e81->initCacheDirPath($v17be587282); } public static function getDataAccessNodesConfigured($v50d32a6fc4) { $pc28d161b = array("insert", "update", "delete", "select", "procedure"); if(is_array($v50d32a6fc4)) { $pd29b0c43 = array(); foreach($v50d32a6fc4 as $v9c4bf49720 => $v6694236c2c) { if ($v9c4bf49720 != "import" && $v6694236c2c) { $pc37695cb = count($v6694236c2c); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $pc2ca4e10 = $v6694236c2c[$v43dd7d0051]; $v1cbfbb49c5 = XMLFileParser::getAttribute($pc2ca4e10, "id"); $v8ea9f91476 = array(); if(in_array($v9c4bf49720, $pc28d161b)) { $v8ea9f91476["name"] = $pc2ca4e10["name"]; $v8ea9f91476["@"] = XMLFileParser::getAttributes($pc2ca4e10, array("id", "parameter_class", "parameter_map", "result_class", "result_map", "hard_coded_ai_pk")); $v8ea9f91476["value"] = XMLFileParser::getValue($pc2ca4e10); if ($v8ea9f91476["@"]["hard_coded_ai_pk"]) $v8ea9f91476["@"]["hard_coded_ai_pk"] = $v8ea9f91476["@"]["hard_coded_ai_pk"] == 1 || in_array(strtolower($v8ea9f91476["@"]["hard_coded_ai_pk"]), array("true", "yes", "on")); } elseif($v9c4bf49720 == "parameter_map" || $v9c4bf49720 == "result_map") { $v8ea9f91476 = $pc2ca4e10; self::configureMap($v8ea9f91476, $v9c4bf49720); } else { launch_exception(new SQLMapClientException(1, $v9c4bf49720)); } if($v1cbfbb49c5) { if(!isset($pd29b0c43[$v9c4bf49720][$v1cbfbb49c5])) { $pd29b0c43[$v9c4bf49720][$v1cbfbb49c5] = $v8ea9f91476; } else { launch_exception(new SQLMapClientException(3, array($v9c4bf49720, $v1cbfbb49c5))); } } else { launch_exception(new SQLMapClientException(2, $v9c4bf49720)); } } } } $v50d32a6fc4 = $pd29b0c43; } return $v50d32a6fc4; } public static function configureMap(&$v0df63e1235, $v87f853c4d2) { $v640692bf77 = ""; switch(strtolower($v87f853c4d2)) { case "parameter_map": $v640692bf77 = "parameter"; break; default: $v640692bf77 = "result"; } $pd0157690 = array(); $pd0157690["attrib"] = XMLFileParser::getAttributes($v0df63e1235, array("id", "class")); $pee4c7870 = $v0df63e1235["childs"][$v640692bf77]; $pc37695cb = $pee4c7870 ? count($pee4c7870) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) $pd0157690[$v640692bf77][] = XMLFileParser::getAttributes($pee4c7870[$v43dd7d0051], array("input_name", "input_type", "output_name", "output_type", "mandatory")); $v0df63e1235 = $pd0157690; } public function getFunction($v9d33ecaf56, $v9367d5be85 = false, $v5d3813882f = false) { return $this->getRDBBroker()->getFunction($v9d33ecaf56, $v9367d5be85, $v5d3813882f); } public function getData($v3c76382d93, $v5d3813882f = false) { return $this->getRDBBroker()->getData($v3c76382d93, $v5d3813882f); } public function setData($v3c76382d93, $v5d3813882f = false) { return $this->getRDBBroker()->setData($v3c76382d93, $v5d3813882f); } public function getSQL($v3c76382d93, $v5d3813882f = false) { return $this->getRDBBroker()->getSQL($v3c76382d93, $v5d3813882f); } public function setSQL($v3c76382d93, $v5d3813882f = false) { return $this->getRDBBroker()->setSQL($v3c76382d93, $v5d3813882f); } public function getInsertedId($v5d3813882f = false) { return $this->getRDBBroker()->getInsertedId($v5d3813882f); } public function insertObject($v8c5df8072b, $pfdbbc383, $v5d3813882f = false) { return $this->getRDBBroker()->insertObject($v8c5df8072b, $pfdbbc383, $v5d3813882f); } public function updateObject($v8c5df8072b, $pfdbbc383, $paf1bc6f6 = false, $v5d3813882f = false) { return $this->getRDBBroker()->updateObject($v8c5df8072b, $pfdbbc383, $paf1bc6f6, $v5d3813882f); } public function deleteObject($v8c5df8072b, $paf1bc6f6 = false, $v5d3813882f = false) { return $this->getRDBBroker()->deleteObject($v8c5df8072b, $paf1bc6f6, $v5d3813882f); } public function findObjects($v8c5df8072b, $pfdbbc383 = false, $paf1bc6f6 = false, $v5d3813882f = false) { return $this->getRDBBroker()->findObjects($v8c5df8072b, $pfdbbc383, $paf1bc6f6, $v5d3813882f); } public function countObjects($v8c5df8072b, $paf1bc6f6 = false, $v5d3813882f = false) { return $this->getRDBBroker()->countObjects($v8c5df8072b, $paf1bc6f6, $v5d3813882f); } public function findRelationshipObjects($v8c5df8072b, $v10c59e20bd, $v4ec0135323 = false, $v5d3813882f = false) { return $this->getRDBBroker()->findRelationshipObjects($v8c5df8072b, $v10c59e20bd, $v4ec0135323, $v5d3813882f); } public function countRelationshipObjects($v8c5df8072b, $v10c59e20bd, $v4ec0135323 = false, $v5d3813882f = false) { return $this->getRDBBroker()->countRelationshipObjects($v8c5df8072b, $v10c59e20bd, $v4ec0135323, $v5d3813882f); } public function findObjectsColumnMax($v8c5df8072b, $v7162e23723, $v5d3813882f = false) { return $this->getRDBBroker()->findObjectsColumnMax($v8c5df8072b, $v7162e23723, $v5d3813882f); } } ?>
