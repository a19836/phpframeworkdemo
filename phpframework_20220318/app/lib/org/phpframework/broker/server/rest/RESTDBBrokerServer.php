<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.broker.server.rest.RESTBrokerServer"); include_once get_lib("org.phpframework.broker.server.local.LocalDBBrokerServer"); class RESTDBBrokerServer extends RESTBrokerServer { protected function setLocalBrokerServer() { $this->LocalBrokerServer = new LocalDBBrokerServer($this->Layer); } protected function executeWebServiceResponse() { $v9cd205cadb = explode("/", $this->url); $v6cd9d4006f = strtolower($v9cd205cadb[0]); $v603bd47baf = strtolower($v9cd205cadb[1]); $v722ff4a9c8 = true; switch($v6cd9d4006f) { case "getdbdriversname": $pa051dc1c = "getDBDriversName"; $pc0481df4 = array(); $v9ad1385268 = $this->LocalBrokerServer->getDBDriversName(); break; case "getfunction": $pa051dc1c = "getFunction"; $pc0481df4 = array("func_name" => $v603bd47baf, "parameters" => $this->parameters, "options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->getFunction($v603bd47baf, $this->parameters, $this->options); break; case "getdata": $pa051dc1c = "getData"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->getData($this->parameters, $this->options); break; case "setdata": $pa051dc1c = "setData"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->setData($this->parameters, $this->options); if ($v9ad1385268 && strtolower($v603bd47baf) == "getinsertedid") $v9ad1385268 = $this->LocalBrokerServer->getInsertedId($this->options); break; case "getsql": $pa051dc1c = "getSQL"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->getSQL($this->parameters, $this->options); break; case "setsql": $pa051dc1c = "setSQL"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->setSQL($this->parameters, $this->options); if ($v9ad1385268 && strtolower($v603bd47baf) == "getinsertedid") $v9ad1385268 = $this->LocalBrokerServer->getInsertedId($this->options); break; case "getinsertedid": $pa051dc1c = "getInsertedId"; $pc0481df4 = array("options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->getInsertedId($this->options); break; case "insertobject": $pa051dc1c = "insertObject"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->insertObject($this->parameters["table_name"], $this->parameters["attributes"], $this->options); break; case "updateobject": $pa051dc1c = "updateObject"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->updateObject($this->parameters["table_name"], $this->parameters["attributes"], $this->parameters["conditions"], $this->options); break; case "deleteobject": $pa051dc1c = "deleteObject"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->deleteObject($this->parameters["table_name"], $this->parameters["conditions"], $this->options); break; case "findobjects": $pa051dc1c = "findObjects"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->findObjects($this->parameters["table_name"], $this->parameters["attributes"], $this->parameters["conditions"], $this->options); break; case "countobjects": $pa051dc1c = "countObjects"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->countObjects($this->parameters["table_name"], $this->parameters["conditions"], $this->options); break; case "findrelationshipobjects": $pa051dc1c = "findRelationshipObjects"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->findRelationshipObjects($this->parameters["table_name"], $this->parameters["rel_elm"], $this->parameters["parent_conditions"], $this->options); break; case "countrelationshipobjects": $pa051dc1c = "countRelationshipObjects"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->countRelationshipObjects($this->parameters["table_name"], $this->parameters["rel_elm"], $this->parameters["parent_conditions"], $this->options); break; case "findObjectsColumnMax": $pa051dc1c = "findObjectsColumnMax"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->findObjectsColumnMax($this->parameters["table_name"], $this->parameters["attribute_name"], $this->options); break; default: $v722ff4a9c8 = false; } if ($v722ff4a9c8) return $this->getWebServiceResponse($pa051dc1c, $pc0481df4, $v9ad1385268, $this->response_type); } } ?>
