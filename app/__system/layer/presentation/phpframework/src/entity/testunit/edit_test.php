<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.workflow.WorkFlowTaskHandler"); include_once $EVC->getUtilPath("WorkFlowTestUnitHandler"); $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "access"); UserAuthenticationHandler::checkUsersMaxNum($UserAuthenticationHandler); $path = $_GET["path"]; $file_name = $_GET["file_name"]; $path = str_replace("../", "", $path); $file_path = TEST_UNIT_PATH . $path; if ($path && file_exists($file_path)) { $file_modified_time = filemtime($file_path); $class_name = pathinfo($path, PATHINFO_FILENAME); $obj_data = PHPCodePrintingHandler::getFunctionFromFile($file_path, "execute", $class_name); if ($obj_data) { $obj_data["code"] = PHPCodePrintingHandler::getFunctionCodeFromFile($file_path, "execute", $class_name); $obj_data["code"] = str_replace(chr(194) . chr(160), ' ', $obj_data["code"]); } $layer_brokers_settings = WorkFlowTestUnitHandler::getAllLayersBrokersSettings($user_global_variables_file_path, $user_beans_folder_path); $db_driver_brokers = $layer_brokers_settings["db_driver_brokers"]; $db_driver_brokers_obj = $layer_brokers_settings["db_driver_brokers_obj"]; $db_brokers = $layer_brokers_settings["db_brokers"]; $db_brokers_obj = $layer_brokers_settings["db_brokers_obj"]; $data_access_brokers = $layer_brokers_settings["data_access_brokers"]; $data_access_brokers_obj = $layer_brokers_settings["data_access_brokers_obj"]; $ibatis_brokers = $layer_brokers_settings["ibatis_brokers"]; $ibatis_brokers_obj = $layer_brokers_settings["ibatis_brokers_obj"]; $hibernate_brokers = $layer_brokers_settings["hibernate_brokers"]; $hibernate_brokers_obj = $layer_brokers_settings["hibernate_brokers_obj"]; $business_logic_brokers = $layer_brokers_settings["business_logic_brokers"]; $business_logic_brokers_obj = $layer_brokers_settings["business_logic_brokers_obj"]; $presentation_brokers = $layer_brokers_settings["presentation_brokers"]; $presentation_brokers_obj = $layer_brokers_settings["presentation_brokers_obj"]; $presentation_evc_brokers = $layer_brokers_settings["presentation_evc_brokers"]; $presentation_evc_brokers_obj = $layer_brokers_settings["presentation_evc_brokers_obj"]; $presentation_evc_template_brokers = $layer_brokers_settings["presentation_evc_brokers"]; $presentation_evc_template_brokers_obj = $layer_brokers_settings["presentation_evc_brokers_obj"]; $available_projects = $layer_brokers_settings["available_projects"]; $phpframeworks_options = array("default" => '$GLOBALS["PHPFrameWork"]'); $bean_names_options = array_keys($GLOBALS["PHPFrameWork"]->getObjects()); $db_drivers_options = array_keys($db_driver_brokers_obj); $layers_projects_urls = getLayerProjectsUrls($user_global_variables_file_path, $user_beans_folder_path, $presentation_brokers); $allowed_tasks_tag = array( "definevar", "setvar", "setarray", "setdate", "setobjectproperty", "createclassobject", "callobjectmethod", "callfunction", "if", "switch", "loop", "foreach", "includefile", "echo", "code", "break", "return", "exit", "validator", "upload", "geturlcontents", "restconnector", "soapconnector", "getbeanobject", "sendemail", "debuglog", "trycatchexception", "throwexception", "printexception" ); if ($db_brokers_obj || $data_access_brokers_obj) { $allowed_tasks_tag[] = "setquerydata"; $allowed_tasks_tag[] = "getquerydata"; $allowed_tasks_tag[] = "dbdaoaction"; } if ($db_brokers_obj) $allowed_tasks_tag[] = "getdbdriver"; if ($ibatis_brokers_obj) $allowed_tasks_tag[] = "callibatisquery"; if ($hibernate_brokers_obj) { $allowed_tasks_tag[] = "callhibernateobject"; $allowed_tasks_tag[] = "callhibernatemethod"; } if ($business_logic_brokers_obj) $allowed_tasks_tag[] = "callbusinesslogic"; if ($presentation_brokers_obj) { $aux = array( "addheader", "setpresentationview", "addpresentationview", "setpresentationtemplate", "inlinehtml", "createform" ); $allowed_tasks_tag = array_merge($allowed_tasks_tag, $aux); } if ($presentation_evc_brokers_obj) { $aux = array( "setblockparams", "settemplateregionblockparam", "includeblock", "addtemplateregionblock", "rendertemplateregion", "settemplateparam", "gettemplateparam", ); $allowed_tasks_tag = array_merge($allowed_tasks_tag, $aux); } $WorkFlowTaskHandler = new WorkFlowTaskHandler($webroot_cache_folder_path, $webroot_cache_folder_url); $WorkFlowTaskHandler->setCacheRootPath(LAYER_CACHE_PATH); $WorkFlowTaskHandler->setAllowedTaskTags($allowed_tasks_tag); $WorkFlowTaskHandler->addTasksFoldersPath($code_workflow_editor_user_tasks_folders_path); $WorkFlowTaskHandler->addAllowedTaskTagsFromFolders($code_workflow_editor_user_tasks_folders_path); $comments = $obj_data["doc_comments"] ? implode("\n", $obj_data["doc_comments"]) : ""; $DocBlockParser = new DocBlockParser(); $DocBlockParser->ofComment($comments); $objects = $DocBlockParser->getObjects(); $method_comments = $DocBlockParser->getDescription(); $enabled = !empty($objects["enabled"][0]); $global_variables_files_path = $objects["global_variables_files_path"]; $depends = $objects["depends"]; } else { launch_exception(new Exception("File Not Found: " . $path)); die(); } function getLayerProjectsUrls($v3d55458bcd, $v5039a77f9d, $pb0e92e25) { $v81fdefd1fd = array(); if ($pb0e92e25) foreach ($pb0e92e25 as $pd76c5c06) { $pa0462a8e = $pd76c5c06[1]; $v8ffce2a791 = $pd76c5c06[2]; $pb512d021 = new WorkFlowBeansFileHandler($v5039a77f9d . $pa0462a8e, $v3d55458bcd); $v188b4f5fa6 = $pb512d021->getEVCBeanObject($v8ffce2a791); $v90b50cf52d = $v188b4f5fa6->getProjectsId(); if ($v90b50cf52d) foreach ($v90b50cf52d as $v93756c94b3) { $v188b4f5fa6 = $pb512d021->getEVCBeanObject($v8ffce2a791, $v93756c94b3); $pfaf08f23 = new PHPVariablesFileHandler(array($v3d55458bcd, $v188b4f5fa6->getConfigPath("pre_init_config"))); $pfaf08f23->startUserGlobalVariables(); $v81fdefd1fd[$v8ffce2a791][$v93756c94b3] = mf774c99d0ef1($v188b4f5fa6, $v93756c94b3); $pfaf08f23->endUserGlobalVariables(); } } return $v81fdefd1fd; } function mf774c99d0ef1($EVC, $selected_project_id) { @include $EVC->getConfigPath("config", $selected_project_id); return $project_url_prefix; } ?>
