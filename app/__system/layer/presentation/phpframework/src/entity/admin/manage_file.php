<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.layer.presentation.cms.module.CMSModuleUtil"); include_once $EVC->getUtilPath("WorkFlowBeansFileHandler"); include_once $EVC->getUtilPath("LayoutTypeProjectHandler"); $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "access"); UserAuthenticationHandler::checkUsersMaxNum($UserAuthenticationHandler); $bean_name = $_GET["bean_name"]; $bean_file_name = $_GET["bean_file_name"]; $item_type = $_GET["item_type"]; $path = $_GET["path"]; $action = $_GET["action"]; $extra = trim($_GET["extra"]); $folder_type = $_GET["folder_type"]; $filter_by_layout = $_GET["filter_by_layout"]; $path = str_replace("../", "", $path);$filter_by_layout = str_replace("../", "", $filter_by_layout); $root_path = me0b302d2a1b1($bean_name, $bean_file_name, $item_type, $path, $user_beans_folder_path, $user_global_variables_file_path, $obj); $status = false; if ($root_path) { $orig_path = $path; $path = $root_path . $path; $layer_object_id = $item_type == "dao" ? "vendor/dao/$orig_path" : ($item_type == "vendor" || $item_type == "other" ? "$item_type/$orig_path" : ($item_type == "test_unit" ? "vendor/testunit/$orig_path" : $path)); if ($path && (file_exists($path) || $action == "create_folder" || $action == "create_file" || $action == "remove" || $action == "paste_and_remove") ) { $UserAuthenticationHandler->checkInnerFilePermissionAuthentication($layer_object_id, "layer", "access"); $LayoutTypeProjectHandler = new LayoutTypeProjectHandler($UserAuthenticationHandler, $user_global_variables_file_path, $user_beans_folder_path, $bean_file_name, $bean_name); switch($action) { case "create_folder": $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "write"); if ($extra) { $UserAuthenticationHandler->checkInnerFilePermissionAuthentication("$layer_object_id/$extra", "layer", "access"); if (!file_exists($path)) mkdir($path, 0755, true); if (file_exists($path)) { $dest = "$path/$extra"; if ($item_type == "presentation" && $folder_type == "project") { if (f2c470a6552($EVC, $user_global_variables_file_path, $user_beans_folder_path)) { $status = CMSModuleUtil::copyFolder($EVC->getPresentationLayer()->getLayerPathSetting() . "empty/", $dest); if ($status) { $status = prepareProjectsInitFiles($root_path, "", $dest, $user_beans_folder_path, $user_global_variables_file_path, $bean_file_name, $bean_name, $LayoutTypeProjectHandler); if ($status && is_dir($dest) && $LayoutTypeProjectHandler->isPathAPresentationProjectPath($dest)) $status = prepareProjectCreationIfApply($LayoutTypeProjectHandler, $dest); } } else { $enc_msg = "50726f6a65637473206372656174696f6e206e6f7420616c6c6f7765642120596f752065786365656420746865206d6178696d756d206e756d626572206f662070726f6a65637473207468617420796f7572206c6963656e636520616c6c6f77732e"; $status = ""; for ($i = 0; $i < strlen($enc_msg) - 1; $i += 2) $status .= chr( hexdec($enc_msg[$i] . $enc_msg[$i+1]) ); } } else if (!file_exists($dest)) { $status = mkdir($dest, 0755, true); if (is_dir($dest) && $filter_by_layout && ($item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate" || ($item_type == "presentation" && $folder_type == "project_folder"))) $status = $LayoutTypeProjectHandler->createLayoutTypePermissionsForFilePathAndLayoutTypeName($filter_by_layout, $dest); } } } break; case "create_file": $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "write"); if ($extra) { $UserAuthenticationHandler->checkInnerFilePermissionAuthentication("$layer_object_id/$extra", "layer", "access"); $path_info = pathinfo($extra); if (!$path_info["extension"]) { if ($item_type == "ibatis" || $item_type == "hibernate") $extra .= ".xml"; else if ($item_type == "businesslogic" || $item_type == "presentation") $extra .= ".php"; } $allowed = true; if ($filter_by_layout && ($item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate")) { $UserAuthenticationHandler->loadLayoutPermissions($filter_by_layout, UserAuthenticationHandler::$LAYOUTS_TYPE_FROM_PROJECT_ID); if (!$UserAuthenticationHandler->isLayoutInnerFilePermissionAllowed($path, $filter_by_layout, "layer", UserAuthenticationHandler::$PERMISSION_BELONG_NAME, false, false)) $allowed = false; } if ($allowed) { if (!file_exists($path)) mkdir($path, 0755, true); if (file_exists($path)) $status = file_put_contents("$path/$extra", "") !== false; } else { header($_SERVER["SERVER_PROTOCOL"] . " 405 Not Allowed"); $status = "You are not allowed to create a file inside of this folder, because it does NOT belong to the selected project!"; } } break; case "rename": $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "write"); if ($extra) { $UserAuthenticationHandler->checkInnerFilePermissionAuthentication(dirname($layer_object_id) . "/$extra", "layer", "access"); $is_obj_class = $item_type == "businesslogic" || $item_type == "test_unit" || $item_type == "dao" || ($item_type == "presentation" && strpos($path, "/util/") !== false); if ($is_obj_class && !is_dir($path)) $extra = preg_replace("/\s+/", "", $extra); if (basename($path) == $extra) $status = true; else { if (isPresentationProjectCommon($obj, $item_type, $root_path, $path)) $status = "You cannot rename the Common project!"; else if (isLayerDefaultFolder($obj, $item_type, $root_path, $path)) $status = "You cannot rename this folder because is a default folder!"; else { $dst = dirname($path) . "/$extra"; $is_class_rename = $is_obj_class && !is_dir($path) && basename($path) != basename($dst); $class_data = $is_class_rename ? PHPCodePrintingHandler::getClassOfFile($path) : null; $dst_folder = dirname($dst); $allowed = true; if ($filter_by_layout && ($item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate")) { $UserAuthenticationHandler->loadLayoutPermissions($filter_by_layout, UserAuthenticationHandler::$LAYOUTS_TYPE_FROM_PROJECT_ID); if (!$UserAuthenticationHandler->isLayoutInnerFilePermissionAllowed($dst_folder != dirname($path) ? $dst_folder : $path, $filter_by_layout, "layer", UserAuthenticationHandler::$PERMISSION_BELONG_NAME, false, false)) $allowed = false; } if ($allowed) { if (!is_dir($dst_folder)) mkdir($dst_folder, 0755, true); $status = !file_exists($dst) && is_dir($dst_folder) ? rename($path, $dst) : $dst == $path; if ($status) { if ($is_class_rename && $class_data) { $src_class_name = PHPCodePrintingHandler::prepareClassNameWithNameSpace($class_data["name"], $class_data["namespace"]); $dst_class_name = PHPCodePrintingHandler::prepareClassNameWithNameSpace(pathinfo($dst, PATHINFO_FILENAME), $class_data["namespace"]); $status = PHPCodePrintingHandler::renameClassFromFile($dst, $src_class_name, $dst_class_name); } if ($item_type == "presentation") { if (is_dir($dst)) $status = prepareProjectsInitFiles($root_path, $path, $dst, $user_beans_folder_path, $user_global_variables_file_path, $bean_file_name, $bean_name, $LayoutTypeProjectHandler); updateDiagramWorkflowFile($action, $bean_name, $workflow_paths_id, $root_path, $path, $dst); if (is_dir($dst)) { if ($LayoutTypeProjectHandler->isPathAPresentationProjectPath($dst)) $LayoutTypeProjectHandler->renameLayoutFromProjectPath($path, $dst); else if ($LayoutTypeProjectHandler->isPathAPresentationProjectFolderPath($dst)) $LayoutTypeProjectHandler->renameLayoutFromProjectFolderPath($path, $dst); } } if ($item_type == "presentation" || $item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate") $LayoutTypeProjectHandler->renameLayoutTypePermissionsForFilePath($path, $dst); } } else { header($_SERVER["SERVER_PROTOCOL"] . " 405 Not Allowed"); $status = "You are not allowed to rename a file inside of this folder, because it does NOT belong to the selected project!"; } } } } break; case "remove": $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "delete"); if ($path != $root_path) { $allowed = true; $UserAuthenticationHandler->checkInnerFilePermissionAuthentication($path, "layer", "access"); if ($filter_by_layout && ($item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate")) { $UserAuthenticationHandler->loadLayoutPermissions($filter_by_layout, UserAuthenticationHandler::$LAYOUTS_TYPE_FROM_PROJECT_ID); if (!$UserAuthenticationHandler->isLayoutInnerFilePermissionAllowed($path, $filter_by_layout, "layer", UserAuthenticationHandler::$PERMISSION_BELONG_NAME, false, false)) $allowed = false; } if ($allowed) { if (is_dir($path)) { if (isPresentationProjectCommon($obj, $item_type, $root_path, $path)) $status = "You cannot remove the Common project!"; else if (isLayerDefaultFolder($obj, $item_type, $root_path, $path)) $status = "You cannot remove this folder because is a default folder!"; else { if ($item_type == "presentation") { removeDiagramWorkflowFile($action, $bean_name, $workflow_paths_id, $root_path, $path); if ($LayoutTypeProjectHandler->isPathAPresentationProjectPath($path)) $LayoutTypeProjectHandler->removeLayoutFromProjectPath($path); else if ($LayoutTypeProjectHandler->isPathAPresentationProjectFolderPath($path)) $LayoutTypeProjectHandler->removeLayoutFromProjectFolderPath($path); } if ($item_type == "presentation" || $item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate") $LayoutTypeProjectHandler->removeLayoutTypePermissionsForFilePath($path); $status = CMSModuleUtil::deleteFolder($path); } } else $status = !file_exists($path) || unlink($path); } else { header($_SERVER["SERVER_PROTOCOL"] . " 405 Not Allowed"); $status = "You are not allowed to remove a file inside of this folder, because it does NOT belong to the selected project!"; } } break; case "zip": $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "write"); $dest = $extra ? "$root_path/$extra/" : dirname($path); if ($dest) { $file_name = basename($path); $allowed = true; $UserAuthenticationHandler->checkInnerFilePermissionAuthentication("$dest/$file_name.zip", "layer", "access"); if ($filter_by_layout && ($item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate")) { $UserAuthenticationHandler->loadLayoutPermissions($filter_by_layout, UserAuthenticationHandler::$LAYOUTS_TYPE_FROM_PROJECT_ID); if (!$UserAuthenticationHandler->isLayoutInnerFilePermissionAllowed($dest, $filter_by_layout, "layer", UserAuthenticationHandler::$PERMISSION_BELONG_NAME, false, false)) $allowed = false; } if ($allowed) { if (!is_dir($dest)) mkdir($dest, 0755, true); include_once get_lib("org.phpframework.compression.ZipHandler"); $dest = "$dest/$file_name.zip"; $status = ZipHandler::zip($path, $dest); } else { header($_SERVER["SERVER_PROTOCOL"] . " 405 Not Allowed"); $status = "You are not allowed to zip a file inside of this folder, because it does NOT belong to the selected project!"; } } break; case "unzip": $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "write"); UserAuthenticationHandler::checkActionsMaxNum($UserAuthenticationHandler); $dest = $extra ? "$root_path/$extra/" : dirname($path); if ($dest && strtolower(pathinfo($path, PATHINFO_EXTENSION)) == "zip") { $allowed = true; $UserAuthenticationHandler->checkInnerFilePermissionAuthentication($dest, "layer", "access"); if ($filter_by_layout && ($item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate")) { $UserAuthenticationHandler->loadLayoutPermissions($filter_by_layout, UserAuthenticationHandler::$LAYOUTS_TYPE_FROM_PROJECT_ID); if (!$UserAuthenticationHandler->isLayoutInnerFilePermissionAllowed($dest, $filter_by_layout, "layer", UserAuthenticationHandler::$PERMISSION_BELONG_NAME, false, false)) $allowed = false; } if ($allowed) { if (!is_dir($dest)) mkdir($dest, 0755, true); $old_sub_files = is_dir($dest) ? array_diff(scandir($dest), array('..', '.')) : array(); include_once get_lib("org.phpframework.compression.ZipHandler"); $status = ZipHandler::unzip($path, $dest); if ($status) { $UserAuthenticationHandler->incrementUsedActionsTotal(); if ($item_type == "presentation" && is_dir($dest)) { $new_sub_files = array_diff(scandir($dest), array('..', '.')); $diff_sub_files = array_diff($new_sub_files, $old_sub_files); foreach ($diff_sub_files as $sub_file) { $sub_file_dest = "$dest/$sub_file"; if ($LayoutTypeProjectHandler->isPathAPresentationProjectPath($sub_file_dest)) prepareProjectCreationIfApply($LayoutTypeProjectHandler, $sub_file_dest); else if ($LayoutTypeProjectHandler->isPathAPresentationProjectFolderPath($sub_file_dest)) prepareProjectFolderCreationIfApply($LayoutTypeProjectHandler, $sub_file_dest); } } } } else { header($_SERVER["SERVER_PROTOCOL"] . " 405 Not Allowed"); $status = "You are not allowed to unzip a file inside of this folder, because it does NOT belong to the selected project!"; } } break; case "upload": $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "write"); UserAuthenticationHandler::checkActionsMaxNum($UserAuthenticationHandler); if (is_dir($path) && $_FILES["file"]) { $file_name = basename($_FILES['file']['name']); $allowed = true; $UserAuthenticationHandler->checkInnerFilePermissionAuthentication("$layer_object_id/$file_name", "layer", "access"); if ($filter_by_layout && ($item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate")) { $UserAuthenticationHandler->loadLayoutPermissions($filter_by_layout, UserAuthenticationHandler::$LAYOUTS_TYPE_FROM_PROJECT_ID); if (!$UserAuthenticationHandler->isLayoutInnerFilePermissionAllowed($path, $filter_by_layout, "layer", UserAuthenticationHandler::$PERMISSION_BELONG_NAME, false, false)) $allowed = false; } if ($allowed) { $status = move_uploaded_file( $_FILES['file']['tmp_name'], $path . "/" . $file_name); if (!$status) { header($_SERVER["SERVER_PROTOCOL"] . " 500 Internal Server Error"); $status = "Internal Server Error"; } else $UserAuthenticationHandler->incrementUsedActionsTotal(); } else { header($_SERVER["SERVER_PROTOCOL"] . " 405 Not Allowed"); $status = "You are not allowed to upload a file inside of this folder, because it does NOT belong to the selected project!"; } } break; case "paste": case "paste_and_remove": $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "write"); if ($action == "paste_and_remove") $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "delete"); $extra = explode(",", str_replace(array("[", "]"), "", $extra)); if (count($extra) >= 4) { $bn = $extra[0]; $bfn = $extra[1]; $fp = $extra[2]; $it = $extra[3]; $fp = str_replace("../", "", $fp); $rp = me0b302d2a1b1($bn, $bfn, $it, $fp, $user_beans_folder_path, $user_global_variables_file_path); $src = $rp . $fp; $dst = $path . "/" . basename($src); $dst_folder = dirname($dst) . "/"; $allowed = true; $UserAuthenticationHandler->checkInnerFilePermissionAuthentication($dst_folder, "layer", "access"); if ($filter_by_layout && ($item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate")) { $UserAuthenticationHandler->loadLayoutPermissions($filter_by_layout, UserAuthenticationHandler::$LAYOUTS_TYPE_FROM_PROJECT_ID); if (!$UserAuthenticationHandler->isLayoutInnerFilePermissionAllowed($dst_folder, $filter_by_layout, "layer", UserAuthenticationHandler::$PERMISSION_BELONG_NAME, false, false)) $allowed = false; } if ($allowed) { if (!is_dir($dst_folder)) mkdir($dst_folder, 0755, true); if (is_dir($dst_folder)) { if ($action == "paste_and_remove" && isPresentationProjectCommon($obj, $item_type, $root_path, $src)) $status = "You cannot cut the Common project!"; else if ($action == "paste_and_remove" && isLayerDefaultFolder($obj, $item_type, $root_path, $src)) $status = "You cannot cut this folder because is a default folder!"; else { $path_info = pathinfo($src); $idx = 1; while (file_exists($dst)) { $dst = $path . "/" . $path_info["filename"] . "_" . $idx . ($path_info["extension"] ? "." . $path_info["extension"] : ""); $idx++; } if ($action == "paste_and_remove") $status = rename($src, $dst); else $status = is_dir($src) ? WorkFlowBeansFolderHandler::copyFolder($src . "/", $dst . "/") : copy($src, $dst); if ($status) { $is_obj_class = $item_type == "businesslogic" || $item_type == "test_unit" || $item_type == "dao" || ($item_type == "presentation" && strpos($path, "/util/") !== false); if ($is_obj_class && !is_dir($src) && basename($src) != basename($dst)) { $src_classes = PHPCodePrintingHandler::getPHPClassesFromFile($action == "paste_and_remove" ? $dst : $src); unset($src_classes[0]); if ($src_classes) { $idx--; foreach ($src_classes as $cn => $c) { $src_class_name = PHPCodePrintingHandler::prepareClassNameWithNameSpace($c["name"], $c["namespace"]); $dst_class_name = PHPCodePrintingHandler::prepareClassNameWithNameSpace($c["name"] . "_$idx", $c["namespace"]); if (!PHPCodePrintingHandler::renameClassFromFile($dst, $src_class_name, $dst_class_name)) $status = false; } } } if ($item_type == "presentation") { if (is_dir($dst)) $status = prepareProjectsInitFiles($root_path, $src, $dst, $user_beans_folder_path, $user_global_variables_file_path, $bean_file_name, $bean_name, $LayoutTypeProjectHandler); updateDiagramWorkflowFile($action, $bean_name, $workflow_paths_id, $root_path, $src, $dst); if (is_dir($dst)) { if ($LayoutTypeProjectHandler->isPathAPresentationProjectPath($dst)) { if ($action == "paste_and_remove") $LayoutTypeProjectHandler->renameLayoutFromProjectPath($src, $dst); else prepareProjectCreationIfApply($LayoutTypeProjectHandler, $dst); } else if ($LayoutTypeProjectHandler->isPathAPresentationProjectFolderPath($dst)) { if ($action == "paste_and_remove") $LayoutTypeProjectHandler->renameLayoutFromProjectFolderPath($src, $dst); else prepareProjectFolderCreationIfApply($LayoutTypeProjectHandler, $dst); } } } if ($action == "paste_and_remove" && ($item_type == "presentation" || $item_type == "businesslogic" || $item_type == "ibatis" || $item_type == "hibernate")) $LayoutTypeProjectHandler->renameLayoutTypePermissionsForFilePath($src, $dst); if ($action == "paste_and_remove" && $src != $root_path) $status = is_dir($src) ? CMSModuleUtil::deleteFolder($src) : !file_exists($src) || unlink($src); } } } } else { header($_SERVER["SERVER_PROTOCOL"] . " 405 Not Allowed"); $status = "You are not allowed to copy a file inside of this folder, because it does NOT belong to the selected project!"; } } break; } debug_log("[Execute action '$action' for path '$path' and extra '" . (is_array($extra) ? print_r($extra, 1) : $extra) . "'] status: " . (is_array($status) ? print_r($status, 1) : $status), "info"); } } function me0b302d2a1b1($v8ffce2a791, $pa0462a8e, $v8773b3a63a, $pa32be502, $v5039a77f9d, $v3d55458bcd, &$v972f1a5c2b = false) { $v4ab372da3a = null; if ($v8773b3a63a == "dao") $v4ab372da3a = DAO_PATH; else if ($v8773b3a63a == "vendor") $v4ab372da3a = VENDOR_PATH; else if ($v8773b3a63a == "test_unit") $v4ab372da3a = TEST_UNIT_PATH; else if ($v8773b3a63a == "other") $v4ab372da3a = OTHER_PATH; else { $pb512d021 = new WorkFlowBeansFileHandler($v5039a77f9d . $pa0462a8e, $v3d55458bcd); if ($v8773b3a63a != "presentation") $v972f1a5c2b = $pb512d021->getBeanObject($v8ffce2a791); else { $v188b4f5fa6 = $pb512d021->getEVCBeanObject($v8ffce2a791, $pa32be502); $v972f1a5c2b = $v188b4f5fa6 ? $v188b4f5fa6->getPresentationLayer() : null; } if ($v972f1a5c2b) $v4ab372da3a = $v972f1a5c2b->getLayerPathSetting(); } return $v4ab372da3a; } function isPresentationProjectCommon($v972f1a5c2b, $v8773b3a63a, $v4ab372da3a, $pa32be502) { if ($pa32be502 && $v8773b3a63a == "presentation") { $pa32be502 = preg_replace("/\/+$/", "", $pa32be502); return $v4ab372da3a . $v972f1a5c2b->getCommonProjectName() == $pa32be502; } return false; } function isLayerDefaultFolder($v972f1a5c2b, $v8773b3a63a, $v4ab372da3a, $pa32be502) { if ($pa32be502 && ($v8773b3a63a == "businesslogic" || $v8773b3a63a == "ibatis" || $v8773b3a63a == "hibernate")) { $pa32be502 = preg_replace("/\/+$/", "", $pa32be502); $pa32be502 = substr($pa32be502, strlen($v4ab372da3a)); $pce434ca7 = $v8773b3a63a == "businesslogic" && $v972f1a5c2b->settings["business_logic_modules_common_name"] ? $v972f1a5c2b->settings["business_logic_modules_common_name"] : "common"; return in_array($pa32be502, array($pce434ca7, "module", "program", "resource")); } return false; } function f2c470a6552($EVC, $user_global_variables_file_path, $user_beans_folder_path) { $pb9be6168 = substr(LA_REGEX, strpos(LA_REGEX, "]") + 1); if (!is_numeric($pb9be6168)) return false; else if ($pb9be6168 == -1) return true; include_once $EVC->getUtilPath("CMSPresentationLayerHandler"); $v6ee393d9fb = CMSPresentationLayerHandler::getPresentationLayersProjectsFiles($user_global_variables_file_path, $user_beans_folder_path, "webroot", false, 0); $v03f4b4ed53 = 0; if ($v6ee393d9fb) foreach ($v6ee393d9fb as $v7dffdb5a5b) if ($v7dffdb5a5b["projects"]) { $v03f4b4ed53 += count($v7dffdb5a5b["projects"]); if (array_key_exists("common", $v7dffdb5a5b["projects"])) $v03f4b4ed53--; } return $v03f4b4ed53 <= $pb9be6168; } function updateDiagramWorkflowFile($v1b5ae9c139, $v8ffce2a791, $pdb9e96e6, $pa2bba2ac, $v6b146f3e75, $v1a74c80ef8) { $v5c1c342594 = true; $v6b146f3e75 = trim($v6b146f3e75); $v1a74c80ef8 = trim($v1a74c80ef8); if ($v6b146f3e75 && $v1a74c80ef8 && $v1a74c80ef8 != $v6b146f3e75 && is_dir($v1a74c80ef8)) { $v6b146f3e75 = preg_replace("/[\/]+/", "/", $v6b146f3e75); $v1a74c80ef8 .= substr($v1a74c80ef8, -1) == "/" ? "" : "/"; $v1a74c80ef8 = preg_replace("/[\/]+/", "/", $v1a74c80ef8); if (substr($v6b146f3e75, 0, strlen($pa2bba2ac)) == $pa2bba2ac && strpos($v6b146f3e75, "/src/entity/") !== false) { $v6b146f3e75 .= substr($v6b146f3e75, -1) == "/" ? "" : "/"; $v12babd294b = str_replace($pa2bba2ac, "", $v6b146f3e75); $v7a48d7585a = WorkFlowTasksFileHandler::getTaskFilePathByPath($pdb9e96e6, "presentation_ui", "_{$v8ffce2a791}_" . md5($v12babd294b)); if (file_exists($v7a48d7585a)) { $v74fc3dc928 = str_replace($pa2bba2ac, "", $v1a74c80ef8); $pe56fd0f9 = WorkFlowTasksFileHandler::getTaskFilePathByPath($pdb9e96e6, "presentation_ui", "_{$v8ffce2a791}_" . md5($v74fc3dc928)); if ($pe56fd0f9) { if (($v1b5ae9c139 == "rename" || $v1b5ae9c139 == "paste_and_remove")) { if (file_exists($pe56fd0f9)) unlink($pe56fd0f9); if (!rename($v7a48d7585a, $pe56fd0f9)) $v5c1c342594 = false; } else if ($v1b5ae9c139 == "paste" && !copy($v7a48d7585a, $pe56fd0f9)) $v5c1c342594 = false; } } $v2cd5d67337 = scandir($v1a74c80ef8); if ($v2cd5d67337) foreach ($v2cd5d67337 as $v3a3060fe4b) if ($v3a3060fe4b != "." && $v3a3060fe4b != ".." && is_dir("$v1a74c80ef8$v3a3060fe4b") && !updateDiagramWorkflowFile($v1b5ae9c139, $v8ffce2a791, $pdb9e96e6, $pa2bba2ac, "$v6b146f3e75$v3a3060fe4b/", "$v1a74c80ef8$v3a3060fe4b/")) $v5c1c342594 = false; } } return $v5c1c342594; } function removeDiagramWorkflowFile($v1b5ae9c139, $v8ffce2a791, $pdb9e96e6, $pa2bba2ac, $pdd397f0a) { $v5c1c342594 = true; $pdd397f0a = trim($pdd397f0a); if ($pdd397f0a && is_dir($pdd397f0a)) { $pdd397f0a = preg_replace("/[\/]+/", "/", $pdd397f0a); if (substr($pdd397f0a, 0, strlen($pa2bba2ac)) == $pa2bba2ac && strpos($pdd397f0a, "/src/entity/") !== false) { $pdd397f0a .= substr($pdd397f0a, -1) == "/" ? "" : "/"; $v12babd294b = str_replace($pa2bba2ac, "", $pdd397f0a); $v7a48d7585a = WorkFlowTasksFileHandler::getTaskFilePathByPath($pdb9e96e6, "presentation_ui", "_{$v8ffce2a791}_" . md5($v12babd294b)); if (file_exists($v7a48d7585a) && !unlink($v7a48d7585a)) $v5c1c342594 = false; $v2cd5d67337 = scandir($pdd397f0a); if ($v2cd5d67337) foreach ($v2cd5d67337 as $v3a3060fe4b) if ($v3a3060fe4b != "." && $v3a3060fe4b != ".." && is_dir("$pdd397f0a$v3a3060fe4b") && !removeDiagramWorkflowFile($v1b5ae9c139, $v8ffce2a791, $pdb9e96e6, $pa2bba2ac, "$pdd397f0a$v3a3060fe4b/")) $v5c1c342594 = false; } } return $v5c1c342594; } function prepareProjectCreationIfApply($v1eb9193558, $v7e136b813a, $v830c8335f6 = true) { return $v1eb9193558->isPathAPresentationProjectPath($v7e136b813a) && $v1eb9193558->createNewLayoutFromProjectPath($v7e136b813a, $v830c8335f6); } function prepareProjectFolderCreationIfApply($v1eb9193558, $v7e136b813a, $v830c8335f6 = true) { return $v1eb9193558->isPathAPresentationProjectFolderPath($v7e136b813a) && $v1eb9193558->createNewLayoutFromProjectFolderPath($v7e136b813a, $v830c8335f6); } function prepareProjectsInitFiles($v4ab372da3a, $v92dcc541a8, $pa5b0817e, $v5039a77f9d, $v3d55458bcd, $pa0462a8e, $v8ffce2a791, $v1eb9193558) { $v5c1c342594 = true; if ($pa5b0817e && is_dir($pa5b0817e)) { $v92dcc541a8 = "/" . preg_replace("/^\//", "", preg_replace("/\/$/", "", str_replace("//", "/", $v92dcc541a8) )) . "/"; $pa5b0817e = "/" . preg_replace("/^\//", "", preg_replace("/\/$/", "", str_replace("//", "/", $pa5b0817e) )) . "/"; if ($v92dcc541a8 != $pa5b0817e) { $v4ab372da3a = "/" . preg_replace("/^\//", "", preg_replace("/\/$/", "", str_replace("//", "/", $v4ab372da3a) )) . "/"; $v7f973c9589 = $v92dcc541a8 ? substr($v92dcc541a8, strlen($v4ab372da3a)) : ""; $pbf5408a3 = dirname($v7f973c9589); $pbf5408a3 = preg_replace("/^\//", "", $pbf5408a3); $pbf5408a3 = $pbf5408a3 == "." ? "" : $pbf5408a3; $pe4967693 = explode("/", $pbf5408a3); $pd35f9404 = substr($pa5b0817e, strlen($v4ab372da3a)); $v41a4ab45e3 = dirname($pd35f9404); $v41a4ab45e3 = preg_replace("/^\//", "", $v41a4ab45e3); $v41a4ab45e3 = $v41a4ab45e3 == "." ? "" : $v41a4ab45e3; $v04cde4235f = explode("/", $v41a4ab45e3); $v134faf52df = (!$pbf5408a3 && $v41a4ab45e3) || ($pbf5408a3 && !$v41a4ab45e3) || count($pe4967693) != count($v04cde4235f); if ($v134faf52df) { $pb512d021 = new WorkFlowBeansFileHandler($v5039a77f9d . $pa0462a8e, $v3d55458bcd); $v972f1a5c2b = $pb512d021->getEVCBeanObject($v8ffce2a791); if ($v972f1a5c2b) { $v9ab35f1f0d = $v972f1a5c2b->getPresentationLayer(); $v0c98cda30e = $v1eb9193558->isPathAPresentationProjectPath($pa5b0817e) ? "project" : ($v1eb9193558->isPathAPresentationProjectFolderPath($pa5b0817e) ? "project_folder" : null); if ($v0c98cda30e == "project") { $pdcf670f6 = ""; $v77cb07b555 = ""; for ($v43dd7d0051 = 0; $v43dd7d0051 < count($v04cde4235f); $v43dd7d0051++) { $pdcf670f6 .= "dirname("; $v77cb07b555 .= ")"; } $v42f582c71a = $pa5b0817e . $v9ab35f1f0d->settings["presentation_configs_path"] . "init.php"; $v6490ea3a15 = file_get_contents($v42f582c71a); $v6490ea3a15 = preg_replace('/include\s*(dirname\()+__DIR__(\))+\s*\.\s*"\/init\.php";/', 'include ' . $pdcf670f6 . 'dirname(dirname(dirname(__DIR__)))' . $v77cb07b555 . ' . "/init.php";', $v6490ea3a15); $v52bbae45d0 = file_put_contents($v42f582c71a, $v6490ea3a15) !== false; $v97417c4539 = $pa5b0817e . $v9ab35f1f0d->settings["presentation_configs_path"] . "pre_init_config.php"; $v6490ea3a15 = file_get_contents($v97417c4539); $v6490ea3a15 = preg_replace('/\$layer_path\s*=\s*(dirname\()+\$project_path(\))+/', '$layer_path = ' . $pdcf670f6 . 'dirname($project_path)' . $v77cb07b555, $v6490ea3a15); $v6fab62fd20 = file_put_contents($v97417c4539, $v6490ea3a15) !== false; $pd404f95c = $pa5b0817e . $v9ab35f1f0d->settings["presentation_webroot_path"] . "script.php"; $v6490ea3a15 = file_get_contents($pd404f95c); $v6490ea3a15 = preg_replace('/include\s*(dirname\()+__DIR__(\))+/', 'include ' . $pdcf670f6 . 'dirname(dirname(__DIR__))' . $v77cb07b555, $v6490ea3a15); $v2f57186ba5 = file_put_contents($pd404f95c, $v6490ea3a15) !== false; $v5c1c342594 = $v52bbae45d0 && $v6fab62fd20 && $v2f57186ba5; } else if ($v0c98cda30e == "project_folder") { $pf9b48cd3 = array(); $v90b50cf52d = $v972f1a5c2b->getProjectsId($pd35f9404); foreach ($v90b50cf52d as $v93756c94b3) { $v8b5f506ade = $v4ab372da3a . str_replace($pd35f9404, $v7f973c9589, $v93756c94b3); $v700c7b4399 = $v4ab372da3a . $v93756c94b3; if (!prepareProjectsInitFiles($v4ab372da3a, $v8b5f506ade, $v700c7b4399, $v5039a77f9d, $v3d55458bcd, $pa0462a8e, $v8ffce2a791, $v1eb9193558)) $v5c1c342594 = false; } } } } } } return $v5c1c342594; } ?>
