<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once $EVC->getUtilPath("WorkFlowBeansFileHandler"); include_once get_lib("org.phpframework.workflow.WorkFlowTaskHandler"); $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "access"); UserAuthenticationHandler::checkUsersMaxNum($UserAuthenticationHandler); $bean_name = $_GET["bean_name"]; $bean_file_name = $_GET["bean_file_name"]; $path = $_GET["path"]; $item_type = $_GET["item_type"]; $scroll_top = $_GET["scroll_top"]; $create_dependencies = $_GET["create_dependencies"]; $file_modified_time = $_GET["file_modified_time"]; $path = str_replace("../", "", $path); $WorkFlowBeansFileHandler = new WorkFlowBeansFileHandler($user_beans_folder_path . $bean_file_name, $user_global_variables_file_path); if ($item_type == "dao") $layer_path = DAO_PATH; else if ($item_type == "vendor") $layer_path = VENDOR_PATH; else if ($item_type == "test_unit") $layer_path = TEST_UNIT_PATH; else if ($item_type == "other") $layer_path = OTHER_PATH; else { if ($item_type != "presentation") $obj = $WorkFlowBeansFileHandler->getBeanObject($bean_name); else { $PEVC = $WorkFlowBeansFileHandler->getEVCBeanObject($bean_name, $path); $obj = $PEVC ? $PEVC->getPresentationLayer() : null; } $layer_path = null; if ($obj) $layer_path = $obj->getLayerPathSetting(); } if ($layer_path) { $file_path = $layer_path . $path; $path_info = pathinfo($file_path); $available_extensions = array("xml" => "xml", "php" => "php", "js" => "javascript", "css" => "css", "" => "text", "txt" => "text", "html" => "html", "htm" => "html"); $editor_code_type = $available_extensions[ strtolower($path_info["extension"]) ]; $code = ""; $file_exists = file_exists($file_path); if ($path && ($file_exists || $create_dependencies)) { $layer_object_id = $item_type == "dao" ? "vendor/dao/$path" : ($item_type == "vendor" || $item_type == "other" ? "$item_type/$path" : ($item_type == "test_unit" ? "vendor/testunit/$path" : $file_path)); $UserAuthenticationHandler->checkInnerFilePermissionAuthentication($layer_object_id, "layer", "access"); $code = $file_exists ? file_get_contents($file_path) : ""; if ($_POST && !$readonly) { $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "write"); UserAuthenticationHandler::checkActionsMaxNum($UserAuthenticationHandler); $new_code = $_POST["code"]; $code_id = $_POST["code_id"]; $force = $_POST["force"]; $file_was_changed = $file_exists && $file_modified_time && $code_id != md5($code) && $file_modified_time < filemtime($file_path); if (!$force && ($code_id != md5($code) || $file_was_changed)) $ret = array( "status" => "CHANGED", "old_code" => $code, "new_code" => $new_code, ); else { $continue = true; if (!$file_exists && $create_dependencies && is_dir($layer_path)) { $folder_path = dirname($file_path) . "/"; if ($layer_path != $folder_path && !file_exists($folder_path)) $continue = mkdir($folder_path, 0755, true); } $status = $continue ? file_put_contents($file_path, $new_code) !== false : false; clearstatcache(true, $file_path); if ($status) $UserAuthenticationHandler->incrementUsedActionsTotal(); $ret = array( "status" => $status, "code_id" => md5($new_code), "modified_time" => filemtime($file_path), ); } if (!$do_not_die_on_save) { echo json_encode($ret); die(); } } else if ($file_exists) $file_modified_time = filemtime($file_path); } } ?>
