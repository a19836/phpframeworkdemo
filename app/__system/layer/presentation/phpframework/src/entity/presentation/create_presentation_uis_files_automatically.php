<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include $EVC->getUtilPath("CMSPresentationUIDiagramFilesHandler"); $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "access"); UserAuthenticationHandler::checkUsersMaxNum($UserAuthenticationHandler); UserAuthenticationHandler::checkActionsMaxNum($UserAuthenticationHandler); $bean_name = $_GET["bean_name"]; $bean_file_name = $_GET["bean_file_name"]; $path = $_GET["path"]; $db_layer_file = $_GET["db_layer_file"]; $db_driver = $_GET["db_driver"]; $include_db_driver = $_GET["include_db_driver"]; $type = $_GET["type"]; $authenticated_template = $_GET["authenticated_template"]; $non_authenticated_template = $_GET["non_authenticated_template"]; $overwrite = $_GET["overwrite"]; $tables_alias = $_POST["sta"] ? $_POST["sta"] : $_GET["sta"]; $users_perms = $_POST["users_perms"] ? $_POST["users_perms"] : $_GET["users_perms"]; $users_perms_folder = $_POST["users_perms_folder"] ? $_POST["users_perms_folder"] : $_GET["users_perms_folder"]; $list_and_edit_users = $_POST["list_and_edit_users"] ? $_POST["list_and_edit_users"] : $_GET["list_and_edit_users"]; $form_type = $_GET["form_type"] ? $_GET["form_type"] : "settings"; $files_creation_type = 1; $path = str_replace("../", "", $path); if ($path) { $WorkFlowBeansFileHandler = new WorkFlowBeansFileHandler($user_beans_folder_path . $bean_file_name, $user_global_variables_file_path); $PEVC = $WorkFlowBeansFileHandler->getEVCBeanObject($bean_name, $path); if ($PEVC) { $UserCacheHandler = $PHPFrameWork->getObject("UserCacheHandler"); $P = $PEVC->getPresentationLayer(); $PHPVariablesFileHandler = new PHPVariablesFileHandler(array($user_global_variables_file_path, $PEVC->getConfigPath("pre_init_config"))); $PHPVariablesFileHandler->startUserGlobalVariables(); $layer_path = $P->getLayerPathSetting(); $selected_project_id = $P->getSelectedPresentationId(); $folder_path = $layer_path . $path; if (is_dir($folder_path)) { $UserAuthenticationHandler->checkInnerFilePermissionAuthentication($folder_path, "layer", "access"); $db_drivers = WorkFlowBeansFileHandler::getLayerDBDrivers($user_global_variables_file_path, $user_beans_folder_path, $P, true); $db_driver_props = $db_drivers[$db_driver]; $db_driver_bean_file_name = $db_driver_props[1] ? $db_driver_props[1] : $db_layer_file; $db_driver_bean_name = $db_driver_props[2] ? $db_driver_props[2] : $db_driver; $WorkFlowDataAccessHandler = new WorkFlowDataAccessHandler(); $relative_path = str_replace($PEVC->getEntitiesPath(), "", $folder_path); $absolute_path = $folder_path; if ($type == "diagram") { $tasks_file_path = WorkFlowTasksFileHandler::getDBDiagramTaskFilePath($workflow_paths_id, "db_diagram", $db_driver); $WorkFlowDataAccessHandler->setTasksFilePath($tasks_file_path); } else { $WorkFlowDBHandler = new WorkFlowDBHandler($user_beans_folder_path, $user_global_variables_file_path); $tasks = $WorkFlowDBHandler->getUpdateTaskDBDiagram($db_driver_bean_file_name, $db_driver_bean_name); $WorkFlowDataAccessHandler->setTasks($tasks); } $tables = $WorkFlowDataAccessHandler->getTasksAsTables(); if ($tables_alias) foreach ($tables_alias as $table_name => $table_alias) $tables_alias[$table_name] = strtolower(str_replace(array("-", " "), "_", $table_alias)); $statuses = array(); $settings = htmlspecialchars_decode( file_get_contents("php://input") ); $settings = json_decode($settings, true); if (strtoupper($_SERVER['REQUEST_METHOD']) === "POST" && is_array($settings) && $settings) { $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "write"); $UserAuthenticationHandler->incrementUsedActionsTotal(); $DBDriverWorkFlowBeansFileHandler = new WorkFlowBeansFileHandler($user_beans_folder_path . $db_driver_bean_file_name, $user_global_variables_file_path); $DBDriverObj = $DBDriverWorkFlowBeansFileHandler->getBeanObject($db_driver_bean_name); $boolean_available_values = $DBDriverObj->getDBBooleanTypeAvailableValues(); $boolean_available_options = array(); if ($boolean_available_values) foreach ($boolean_available_values as $k => $v) $boolean_available_options[] = array("value" => $k, "label" => strtoupper($v) . "."); if (array_key_exists("sta", $settings)) { $tables_alias = $settings["sta"]; unset($settings["sta"]); } if (array_key_exists("users_perms", $settings)) { $users_perms = $settings["users_perms"]; unset($settings["users_perms"]); } if (array_key_exists("list_and_edit_users", $settings)) { $list_and_edit_users = $settings["list_and_edit_users"]; unset($settings["list_and_edit_users"]); } $allowed_tasks = array("callbusinesslogic", "callibatisquery", "callhibernatemethod", "getquerydata", "setquerydata"); $WorkFlowTaskHandler = new WorkFlowTaskHandler($webroot_cache_folder_path, $webroot_cache_folder_url); $WorkFlowTaskHandler->setCacheRootPath(LAYER_CACHE_PATH); $WorkFlowTaskHandler->setAllowedTaskTags($allowed_tasks); $WorkFlowTaskHandler->initWorkFlowTasks(); $statuses["*"] = array(); $extra_head_id = "{$relative_path}extra_head"; $extra_head_code = getExtraHeadCode(); CMSPresentationUIAutomaticFilesHandler::saveBlockCode($PEVC, $extra_head_id, $extra_head_code, $overwrite, $statuses["*"]); $menu_id = "{$relative_path}menu"; $menus_code = getMenusCode($settings, $tables, $absolute_path, $relative_path, $overwrite, $tables_alias); CMSPresentationUIAutomaticFilesHandler::saveBlockCode($PEVC, $menu_id, $menus_code, $overwrite, $statuses["*"]); $vars_file_id = "{$relative_path}vars"; $vars_file_include_code = '$EVC->getConfigPath("' . $vars_file_id . '")'; $width = 150; $height = 200; $page_task_type_id = "d7975b77"; $listing_task_type_id = "c79d127a"; $view_task_type_id = "3d6046d9"; $form_task_type_id = "91151018"; $generic_page_settings = array( "regions_blocks" => array( array("region" => "Head", "block" => $extra_head_id), array("region" => "Menu", "block" => $menu_id), ), "template_params" => array(), ); $generic_authentication_type = $generic_authentication_users = $generic_users_perms = null; if ($users_perms) { $generic_authentication_type = "authenticated"; $generic_authentication_users = $generic_users_perms = array(); foreach ($users_perms as $user_type_id => $activities) foreach ($activities as $activity_id => $active) if ($active) { if ($activity_id == UserUtil::ACCESS_ACTIVITY_ID) $generic_authentication_users[] = array("user_type_id" => $user_type_id); else $generic_users_perms[] = array("user_type_id" => $user_type_id, "activity_id" => $activity_id); } } $authentication_files_relative_folder_path = $users_perms_folder == "project_current_folder" ? $relative_path : ""; $table_menu_items = getHomePageMenusItems($settings, $relative_path, $tables_alias); $index_block_id = "{$relative_path}index"; $index_block_code = getIndexPageCode("dashboard", $table_menu_items); CMSPresentationUIAutomaticFilesHandler::saveBlockCode($PEVC, $index_block_id, $index_block_code, $overwrite, $statuses["*"]); $task_page_settings = $generic_page_settings; $task_page_settings["regions_blocks"][] = array("region" => "Content", "block" => $index_block_id); $task_page_settings["template_params"][] = array("name" => "Page Title", "value" => "Admin Panel - Dashboard"); $task_id = getTaskId($task_absolute_path, $overwrite, "page", null, "index"); $task_file_name = getTaskPageId($task_absolute_path, $overwrite, "index"); $tasks_details = array( $task_id => array( "label" => $task_file_name, "id" => $task_id, "type" => $page_task_type_id, "tag" => "page", "offset_top" => 20, "offset_left" => 20, "width" => $width, "height" => $height, "properties" => array( "exits" => array( "default_exit" => array("color" => "#eab34f"), ), "file_name" => $task_file_name, "template" => $authenticated_template, "join_type" => "list", "authentication_type" => $generic_authentication_type, "authentication_users" => $generic_authentication_users, "page_settings" => $task_page_settings, "files_to_create" => array( "$selected_project_id/src/block/$index_block_id" => false, ), ), "exits" => array(), ) ); $table_statuses = array(); foreach ($tasks_details as $task_id => $task) if ($task["tag"] == "page") { CMSPresentationUIDiagramFilesHandler::createPageFile($PEVC, $UserCacheHandler, $cms_page_cache_path_prefix, $user_global_variables_file_path, $user_beans_folder_path, $workflow_paths_id, $webroot_cache_folder_path, $webroot_cache_folder_url, $bean_name, $bean_file_name, $path, $relative_path, $overwrite, $files_creation_type, $vars_file_include_code, $authentication_files_relative_folder_path, $list_and_edit_users, $authenticated_template, $non_authenticated_template, $authenticated_template, $table_statuses, $js_funcs = array(), $js_code = "", $tasks_details, $task); foreach ($table_statuses as $t_id => $task_statuses) { foreach ($task_statuses as $file_path => $file_data) $statuses["*"][$file_path] = $file_data["modified_time"] ? true : false; $tasks_details = addCreatedFilesToTaskDetails($tasks_details, $t_id, $task_statuses); } $tasks_details[$task_id] = getTaskWithUpdatedFilePageSettings($PEVC, $task, $statuses["*"], $absolute_path); } saveTasksDetailsToDiagamXML($workflow_paths_id, $bean_name, $path, $tasks_details); $tables_tasks_details = array(); foreach ($settings as $table_name => $brokers_settings) { $table_alias = $tables_alias[$table_name]; $tn = $table_alias ? $table_alias : $table_name; $tn_plural = CMSPresentationFormSettingsUIHandler::getPlural($tn); $tn_label = CMSPresentationFormSettingsUIHandler::getName($tn); $attrs = WorkFlowDataAccessHandler::getTableFromTables($tables, $table_name); $statuses[$table_name] = array(); $tasks_details = array(); $task_relative_path = $relative_path . CMSPresentationUIDiagramFilesHandler::getLabelFileName($tn) . "/"; $task_absolute_path = $absolute_path . CMSPresentationUIDiagramFilesHandler::getLabelFileName($tn) . "/"; $default_task_properties_ui_attributes = array(); if ($attrs) foreach ($attrs as $attr_name => $attr) { $default_task_properties_ui_attributes[$attr_name] = array("active" => 1); if ($attr["type"] == "boolean" || (in_array($attr["type"], array("tinyint", "bit")) && $attr["length"] == 1)) { $default_task_properties_ui_attributes[$attr_name]["list_type"] = "manual"; $default_task_properties_ui_attributes[$attr_name]["manual_list"] = $attr["type"] == "boolean" ? $boolean_available_options : array( array("value" => 0, "label" => "NO"), array("value" => 1, "label" => "YES"), ); } } $sub_menu_id = "{$task_relative_path}sub_menu"; $sub_menus_code = getTableSubMenusCode($settings, $tables, $absolute_path, $relative_path, $overwrite, $tables_alias, $table_name); CMSPresentationUIAutomaticFilesHandler::saveBlockCode($PEVC, $sub_menu_id, $sub_menus_code, $overwrite, $statuses[$table_name]); $table_menu_items = getTableMenusItems($settings, $tables, $absolute_path, $relative_path, $overwrite, $tables_alias, $table_name); $index_block_id = "{$task_relative_path}index"; $index_block_code = getIndexPageCode($tn_plural, $table_menu_items); CMSPresentationUIAutomaticFilesHandler::saveBlockCode($PEVC, $index_block_id, $index_block_code, $overwrite, $statuses[$table_name]); $task_page_settings = $generic_page_settings; $task_page_settings["regions_blocks"][] = array("region" => "Sub Menu", "block" => $sub_menu_id); $task_page_settings["regions_blocks"][] = array("region" => "Content", "block" => $index_block_id); $task_page_settings["template_params"][] = array("name" => "Page Title", "value" => CMSPresentationFormSettingsUIHandler::getName($tn_plural)); $task_id = getTaskId($task_absolute_path, $overwrite, "page", $table_name, "index"); $task_file_name = getTaskPageId($task_absolute_path, $overwrite, "index"); $tasks_details[$task_id] = array( "label" => $task_file_name, "id" => $task_id, "type" => $page_task_type_id, "tag" => "page", "offset_top" => 20, "offset_left" => 580, "width" => $width, "height" => $height, "properties" => array( "exits" => array( "default_exit" => array("color" => "#eab34f"), ), "file_name" => $task_file_name, "template" => $authenticated_template, "join_type" => "list", "authentication_type" => $generic_authentication_type, "authentication_users" => $generic_authentication_users, "page_settings" => $task_page_settings, "files_to_create" => array( "$selected_project_id/src/block/$index_block_id" => false, ), ), "exits" => array(), ); foreach ($brokers_settings as $broker_key => $broker_settings) { switch ($broker_key) { case "get_all": $task_exits = array(); $links = array(); if ($brokers_settings["get"]) $task_exits[] = array( "task_id" => getTaskId($task_absolute_path, $overwrite, "page", $table_name, "view"), "label" => "View", "type" => "Straight", "overlay" => "Forward Arrow", "color" => "a554a5", "properties" => array( "connection_type" => "link", "connection_title" => "View $tn", "connection_class" => "view", ), ); if ($brokers_settings["update"] || $brokers_settings["delete"]) $task_exits[] = array( "task_id" => getTaskId($task_absolute_path, $overwrite, "page", $table_name, "edit"), "label" => "Edit", "type" => "Straight", "overlay" => "Forward Arrow", "color" => "a554a5", "properties" => array( "connection_type" => "link", "connection_title" => "Edit $tn", "connection_class" => "edit", ), ); if ($brokers_settings["insert"]) $links[] = array( "url" => getTaskPageUrl($task_absolute_path, $task_relative_path, $overwrite, "add"), "value" => "Add new $tn", "class" => "add", "title" => "Add new $tn", ); prepareRelationshipsTaskExits($table_name, $tables_alias, $brokers_settings, $tn, $tn_label, $absolute_path, $relative_path, $overwrite, $task_exits); $task_properties_ui_attributes = $default_task_properties_ui_attributes; prepareFKsActionsAndAttributesSettings($settings, $tables, $table_name, $tables_alias, $tn, $db_driver, $include_db_driver, $type, $absolute_path, $relative_path, $overwrite, $task_properties_ui_attributes, $form_type, $brokers_settings["insert"] || $brokers_settings["update"]); $brokers_services_and_rules = $brokers_settings; unset($brokers_services_and_rules["get"]); unset($brokers_services_and_rules["relationships"]); unset($brokers_services_and_rules["relationships_count"]); $offset_top = 20; $offset_left = 300; $task_id = getTaskId($task_absolute_path, $overwrite, "page", $table_name, "list"); $inner_task_id = getTaskId($task_absolute_path, $overwrite, "listing", $table_name, "list"); $task_file_name = getTaskPageId($task_absolute_path, $overwrite, "list"); $task_page_settings = $generic_page_settings; $task_page_settings["regions_blocks"][] = array("region" => "Sub Menu", "block" => $sub_menu_id); $task_page_settings["regions_blocks"][] = array("region" => "Content", "block" => "$task_relative_path$task_file_name"); $task_page_settings["template_params"][] = array("name" => "Page Title", "value" => getPageTitle($tn, "get_all")); $tasks_details[$task_id] = array( "label" => $task_file_name, "id" => $task_id, "type" => $page_task_type_id, "tag" => "page", "offset_top" => $offset_top, "offset_left" => $offset_left, "width" => $width, "height" => $height, "properties" => array( "exits" => array( "default_exit" => array("color" => "#eab34f"), ), "file_name" => $task_file_name, "template" => $authenticated_template, "join_type" => "list", "links" => $links, "authentication_type" => $generic_authentication_type, "authentication_users" => $generic_authentication_users, "page_settings" => $task_page_settings, ), "exits" => array(), "tasks" => array( $inner_task_id => array( "label" => CMSPresentationFormSettingsUIHandler::getName($tn_plural) . " List", "id" => $inner_task_id, "type" => $listing_task_type_id, "tag" => "listing", "offset_top" => $offset_top + 50, "offset_left" => $offset_left + 10, "properties" => array( "exits" => array( "default_exit" => array("color" => "#a554a5"), ), "listing_type" => "", "choose_db_table" => array( "db_driver" => $db_driver, "include_db_driver" => $include_db_driver, "db_type" => $type, "db_table" => $table_name, "db_table_alias" => $table_alias, ), "action" => array( "single_insert" => $brokers_settings["insert"] ? 1 : 0, "single_update" => $brokers_settings["update"] ? 1 : 0, "single_delete" => $brokers_settings["delete"] ? 1 : 0, "multiple_delete" => $brokers_settings["delete"] ? 1 : 0, "single_delete_confirmation_message" => null, "multiple_delete_confirmation_message" => null, "single_delete_ok_redirect_url" => null, "multiple_delete_ok_redirect_url" => null, ), "links" => array(), "pagination" => array( "active" => 1, "rows_per_page" => 500, ), "attributes" => $task_properties_ui_attributes, "brokers_services_and_rules" => $brokers_services_and_rules, "users_perms" => $generic_users_perms, ), "exits" => array( "default_exit" => $task_exits, ), ) ), ); break; case "get": $task_exits = array(); if ($brokers_settings["get_all"]) $task_exits[] = array( "task_id" => getTaskId($task_absolute_path, $overwrite, "page", $table_name, "list"), "label" => "View all " . CMSPresentationFormSettingsUIHandler::getName($tn_plural), "type" => "Straight", "overlay" => "Forward Arrow", "color" => "0e1dfb", "properties" => array( "connection_type" => "link", "connection_title" => CMSPresentationFormSettingsUIHandler::getName($tn_plural) . " List", "connection_class" => "view-all", ), ); if ($brokers_settings["update"] || $brokers_settings["delete"]) $task_exits[] = array( "task_id" => getTaskId($task_absolute_path, $overwrite, "page", $table_name, "edit"), "label" => "Edit", "type" => "Straight", "overlay" => "Forward Arrow", "color" => "0e1dfb", "properties" => array( "connection_type" => "link", "connection_title" => "Edit $tn", "connection_class" => "edit", ), ); prepareRelationshipsTaskExits($table_name, $tables_alias, $brokers_settings, $tn, $tn_label, $absolute_path, $relative_path, $overwrite, $task_exits); $task_properties_ui_attributes = $default_task_properties_ui_attributes; prepareFKsActionsAndAttributesSettings($settings, $tables, $table_name, $tables_alias, $tn, $db_driver, $include_db_driver, $type, $absolute_path, $relative_path, $overwrite, $task_properties_ui_attributes, $form_type); $brokers_services_and_rules = $brokers_settings; unset($brokers_services_and_rules["insert"]); unset($brokers_services_and_rules["update"]); unset($brokers_services_and_rules["update_pks"]); unset($brokers_services_and_rules["delete"]); $offset_top = 270; $offset_left = 40; $task_id = getTaskId($task_absolute_path, $overwrite, "page", $table_name, "view"); $inner_task_id = getTaskId($task_absolute_path, $overwrite, "view", $table_name, "view"); $task_file_name = getTaskPageId($task_absolute_path, $overwrite, "view"); $task_page_settings = $generic_page_settings; $task_page_settings["regions_blocks"][] = array("region" => "Sub Menu", "block" => $sub_menu_id); $task_page_settings["regions_blocks"][] = array("region" => "Content", "block" => "$task_relative_path$task_file_name"); $task_page_settings["template_params"][] = array("name" => "Page Title", "value" => getPageTitle($tn, "get")); $tasks_details[$task_id] = array( "label" => $task_file_name, "id" => $task_id, "type" => $page_task_type_id, "tag" => "page", "offset_top" => $offset_top, "offset_left" => $offset_left, "width" => $width, "height" => $height, "properties" => array( "exits" => array( "default_exit" => array("color" => "#eab34f"), ), "file_name" => $task_file_name, "template" => $authenticated_template, "join_type" => "list", "links" => array(), "authentication_type" => $generic_authentication_type, "authentication_users" => $generic_authentication_users, "page_settings" => $task_page_settings, ), "exits" => array(), "tasks" => array( $inner_task_id => array( "label" => "View " . $tn_label, "id" => $inner_task_id, "type" => $view_task_type_id, "tag" => "view", "offset_top" => $offset_top + 50, "offset_left" => $offset_left + 10, "properties" => array( "exits" => array( "default_exit" => array("color" => "#0e1dfb"), ), "choose_db_table" => array( "db_driver" => $db_driver, "include_db_driver" => $include_db_driver, "db_type" => $type, "db_table" => $table_name, "db_table_alias" => $table_alias, ), "links" => array(), "attributes" => $task_properties_ui_attributes, "brokers_services_and_rules" => $brokers_services_and_rules, "users_perms" => $generic_users_perms, ), "exits" => array( "default_exit" => $task_exits, ), ) ), ); break; case "insert": $task_exits = array(); $single_insert_ok_msg_redirect_url = null; if ($brokers_settings["get_all"]) { $task_exits[] = array( "task_id" => getTaskId($task_absolute_path, $overwrite, "page", $table_name, "list"), "label" => "View all " . CMSPresentationFormSettingsUIHandler::getName($tn_plural), "type" => "Straight", "overlay" => "Forward Arrow", "color" => "3c963c", "properties" => array( "connection_type" => "link", "connection_title" => CMSPresentationFormSettingsUIHandler::getName($tn_plural) . " List", "connection_class" => "view-all", ), ); $single_insert_ok_msg_redirect_url = getTaskPageUrl($task_absolute_path, $task_relative_path, $overwrite, "list"); } if ($brokers_settings["update"] || $brokers_settings["delete"]) { $single_insert_ok_msg_redirect_url = getTaskPageUrl($task_absolute_path, $task_relative_path, $overwrite, "edit"); } $task_properties_ui_attributes = $default_task_properties_ui_attributes; prepareFKsActionsAndAttributesSettings($settings, $tables, $table_name, $tables_alias, $tn, $db_driver, $include_db_driver, $type, $absolute_path, $relative_path, $overwrite, $task_properties_ui_attributes, $form_type, $brokers_settings["insert"]); $brokers_services_and_rules = $brokers_settings; unset($brokers_services_and_rules["get_all"]); unset($brokers_services_and_rules["count"]); unset($brokers_services_and_rules["get"]); unset($brokers_services_and_rules["update"]); unset($brokers_services_and_rules["update_pks"]); unset($brokers_services_and_rules["delete"]); unset($brokers_services_and_rules["relationships"]); unset($brokers_services_and_rules["relationships_count"]); $offset_top = 20; $offset_left = 20; $task_id = getTaskId($task_absolute_path, $overwrite, "page", $table_name, "add"); $inner_task_id = getTaskId($task_absolute_path, $overwrite, "form", $table_name, "add"); $task_file_name = getTaskPageId($task_absolute_path, $overwrite, "add"); $task_page_settings = $generic_page_settings; $task_page_settings["regions_blocks"][] = array("region" => "Sub Menu", "block" => $sub_menu_id); $task_page_settings["regions_blocks"][] = array("region" => "Content", "block" => "$task_relative_path$task_file_name"); $task_page_settings["template_params"][] = array("name" => "Page Title", "value" => getPageTitle($tn, "insert")); $tasks_details[$task_id] = array( "label" => $task_file_name, "id" => $task_id, "type" => $page_task_type_id, "tag" => "page", "offset_top" => $offset_top, "offset_left" => $offset_left, "width" => $width, "height" => $height, "properties" => array( "exits" => array( "default_exit" => array("color" => "#eab34f"), ), "file_name" => $task_file_name, "template" => $authenticated_template, "join_type" => "list", "links" => array(), "authentication_type" => $generic_authentication_type, "authentication_users" => $generic_authentication_users, "page_settings" => $task_page_settings, ), "exits" => array(), "tasks" => array( $inner_task_id => array( "label" => "Add " . $tn_label, "id" => $inner_task_id, "type" => $form_task_type_id, "tag" => "form", "offset_top" => $offset_top + 50, "offset_left" => $offset_left + 10, "properties" => array( "exits" => array( "default_exit" => array("color" => "#3c963c"), ), "choose_db_table" => array( "db_driver" => $db_driver, "include_db_driver" => $include_db_driver, "db_type" => $type, "db_table" => $table_name, "db_table_alias" => $table_alias, ), "action" => array( "single_insert" => 1, "single_insert_ok_msg_redirect_url" => $single_insert_ok_msg_redirect_url, ), "links" => array(), "attributes" => $task_properties_ui_attributes, "brokers_services_and_rules" => $brokers_services_and_rules, "users_perms" => $generic_users_perms, ), "exits" => array( "default_exit" => $task_exits, ), ) ), ); break; case "update": case "delete": $task_exits = array(); if ($brokers_settings["get_all"]) $task_exits[] = array( "task_id" => getTaskId($task_absolute_path, $overwrite, "page", $table_name, "list"), "label" => "View all " . CMSPresentationFormSettingsUIHandler::getName($tn_plural), "type" => "Straight", "overlay" => "Forward Arrow", "color" => "3c963c", "properties" => array( "connection_type" => "link", "connection_title" => CMSPresentationFormSettingsUIHandler::getName($tn_plural) . " List", "connection_class" => "view-all", ), ); if ($brokers_settings["get"]) $task_exits[] = array( "task_id" => getTaskId($task_absolute_path, $overwrite, "page", $table_name, "view"), "label" => "View", "type" => "Straight", "overlay" => "Forward Arrow", "color" => "3c963c", "properties" => array( "connection_type" => "link", "connection_title" => "View $tn", "connection_class" => "view", ), ); prepareRelationshipsTaskExits($table_name, $tables_alias, $brokers_settings, $tn, $tn_label, $absolute_path, $relative_path, $overwrite, $task_exits); $task_properties_ui_attributes = $default_task_properties_ui_attributes; prepareFKsActionsAndAttributesSettings($settings, $tables, $table_name, $tables_alias, $tn, $db_driver, $include_db_driver, $type, $absolute_path, $relative_path, $overwrite, $task_properties_ui_attributes, $form_type, $brokers_settings["update"]); $single_delete_ok_msg_redirect_url = $brokers_settings["delete"] && $brokers_settings["get_all"] ? getTaskPageUrl($task_absolute_path, $task_relative_path, $overwrite, "list") : ""; $brokers_services_and_rules = $brokers_settings; unset($brokers_services_and_rules["insert"]); $offset_top = 270; $offset_left = 520; $task_id = getTaskId($task_absolute_path, $overwrite, "page", $table_name, "edit"); $inner_task_id = getTaskId($task_absolute_path, $overwrite, "form", $table_name, "edit"); $task_file_name = getTaskPageId($task_absolute_path, $overwrite, "edit"); if ($tasks_details[$task_id]) continue 2; $task_page_settings = $generic_page_settings; $task_page_settings["regions_blocks"][] = array("region" => "Sub Menu", "block" => $sub_menu_id); $task_page_settings["regions_blocks"][] = array("region" => "Content", "block" => "$task_relative_path$task_file_name"); $task_page_settings["template_params"][] = array("name" => "Page Title", "value" => getPageTitle($tn, "update")); $tasks_details[$task_id] = array( "label" => $task_file_name, "id" => $task_id, "type" => $page_task_type_id, "tag" => "page", "offset_top" => $offset_top, "offset_left" => $offset_left, "width" => $width, "height" => $height, "properties" => array( "exits" => array( "default_exit" => array("color" => "#eab34f"), ), "file_name" => $task_file_name, "template" => $authenticated_template, "join_type" => "list", "links" => array(), "authentication_type" => $generic_authentication_type, "authentication_users" => $generic_authentication_users, "page_settings" => $task_page_settings, ), "exits" => array(), "tasks" => array( $inner_task_id => array( "label" => "Edit " . $tn_label, "id" => $inner_task_id, "type" => $form_task_type_id, "tag" => "form", "offset_top" => $offset_top + 50, "offset_left" => $offset_left + 10, "properties" => array( "exits" => array( "default_exit" => array("color" => "#3c963c"), ), "choose_db_table" => array( "db_driver" => $db_driver, "include_db_driver" => $include_db_driver, "db_type" => $type, "db_table" => $table_name, "db_table_alias" => $table_alias, ), "action" => array( "single_update" => $brokers_settings["update"] ? 1 : 0, "single_delete" => $brokers_settings["delete"] ? 1 : 0, "single_delete_confirmation_message" => null, "single_delete_ok_msg_redirect_url" => $single_delete_ok_msg_redirect_url, ), "links" => array(), "attributes" => $task_properties_ui_attributes, "brokers_services_and_rules" => $brokers_services_and_rules, "users_perms" => $generic_users_perms, ), "exits" => array( "default_exit" => $task_exits, ), ) ), ); break; case "relationships": $table_task_count = 0; $table_row_count = 1; $offset_top = 570; $offset_left = 100; if ($broker_settings) foreach ($broker_settings as $relationship_table => $relationship_table_settings) if ($relationship_table_settings) { $relationship_table_alias = $tables_alias[$relationship_table]; $rn = $relationship_table_alias ? $relationship_table_alias : $relationship_table; $rn_plural = CMSPresentationFormSettingsUIHandler::getPlural($rn); $rn_label = CMSPresentationFormSettingsUIHandler::getName($rn); $rn_relative_path = $relative_path . CMSPresentationUIDiagramFilesHandler::getLabelFileName($rn) . "/"; $rn_absolute_path = $absolute_path . CMSPresentationUIDiagramFilesHandler::getLabelFileName($rn) . "/"; $t = count($relationship_table_settings); for ($i = 0; $i < $t; $i++) { $relationship_table_broker_settings = $relationship_table_settings[$i]; if ($relationship_table_broker_settings) { $rn_attrs = WorkFlowDataAccessHandler::getTableFromTables($tables, $relationship_table); $relationship_task_properties_ui_attributes = array(); if ($rn_attrs) foreach ($rn_attrs as $attr_name => $attr) $relationship_task_properties_ui_attributes[$attr_name] = array("active" => 1); $relationship_table_count_broker_settings = $brokers_settings["relationships_count"][$relationship_table][$i]; $relationship_table_brokers_settings = $settings[$relationship_table]; $relationship_table_brokers_settings["get_all"] = $relationship_table_broker_settings; $relationship_table_brokers_settings["count"] = $relationship_table_count_broker_settings; $links = array(); if ($brokers_settings["get_all"]) $links[] = array( "url" => getTaskPageUrl($task_absolute_path, $task_relative_path, $overwrite, "list"), "value" => "View all " . CMSPresentationFormSettingsUIHandler::getName($tn_plural), "class" => "view-all", "title" => "View all " . CMSPresentationFormSettingsUIHandler::getName($tn_plural), ); if ($brokers_settings["get"]) { $pks_query_string = getTablePKsQueryStringFromCurrentURL($attrs, $form_type); if ($pks_query_string) $links[] = array( "url" => getTaskPageUrl($task_absolute_path, $task_relative_path, $overwrite, "view") . "?" . $pks_query_string, "value" => "View $tn_label", "class" => "view", "title" => "View $tn_label", ); } if ($relationship_table_brokers_settings["insert"]) { $rn_fks_query_string = getFKQueryStringFromCurrentURL($table_name, $rn_attrs, $form_type); $links[] = array( "url" => getTaskPageUrl($rn_absolute_path, $rn_relative_path, $overwrite, "add") . "?" . $rn_fks_query_string, "value" => "Add new $rn_label", "class" => "add", "title" => "Add new $rn_label", ); } $inner_links = array(); if ($relationship_table_brokers_settings["get"]) $inner_links[] = array( "url" => getTaskPageUrl($rn_absolute_path, $rn_relative_path, $overwrite, "view"), "value" => "View", "class" => "view", "title" => "View $rn_label", ); if ($relationship_table_brokers_settings["update"] || $relationship_table_brokers_settings["delete"]) $inner_links[] = array( "url" => getTaskPageUrl($rn_absolute_path, $rn_relative_path, $overwrite, "edit"), "value" => "Edit", "class" => "edit", "title" => "Edit $rn_label", ); prepareRelationshipsLinks($relationship_table, $tables_alias, $relationship_table_brokers_settings, $rn, $rn_label, $absolute_path, $relative_path, $overwrite, $rn_attrs, $inner_links, $form_type); prepareFKsActionsAndAttributesSettings($settings, $tables, $relationship_table, $tables_alias, $tn, $db_driver, $include_db_driver, $type, $absolute_path, $relative_path, $overwrite, $relationship_task_properties_ui_attributes, $form_type, $brokers_services_and_rules["insert"] || $brokers_services_and_rules["update"]); $brokers_services_and_rules = $relationship_table_brokers_settings; unset($brokers_services_and_rules["get"]); unset($brokers_services_and_rules["relationships"]); unset($brokers_services_and_rules["relationships_count"]); if ($relationship_table_brokers_settings["insert"]) unset($brokers_services_and_rules["insert"]); if ($relationship_table_brokers_settings["update"]) unset($brokers_services_and_rules["update"]); if ($relationship_table_brokers_settings["delete"]) unset($brokers_services_and_rules["delete"]); $suffix = $j > 0 ? "_" . ($j + 1) : ""; $relationship_page_id = "relationship_" . strtolower($rn) . $suffix; $task_id = getTaskId($task_absolute_path, $overwrite, "page", $table_name, $relationship_page_id); $inner_task_id = getTaskId($task_absolute_path, $overwrite, "listing", $table_name, $relationship_page_id); $task_file_name = getTaskPageId($task_absolute_path, $overwrite, $relationship_page_id); $task_page_settings = $generic_page_settings; $task_page_settings["regions_blocks"][] = array("region" => "Sub Menu", "block" => $sub_menu_id); $task_page_settings["regions_blocks"][] = array("region" => "Content", "block" => "$task_relative_path$task_file_name"); $task_page_settings["template_params"][] = array("name" => "Page Title", "value" => getPageTitle($rn, "get_all")); $tasks_details[$task_id] = array( "label" => $task_file_name, "id" => $task_id, "type" => $page_task_type_id, "tag" => "page", "offset_top" => $offset_top, "offset_left" => $offset_left, "width" => $width, "height" => $height, "properties" => array( "exits" => array( "default_exit" => array("color" => "#eab34f"), ), "file_name" => $task_file_name, "template" => $authenticated_template, "join_type" => "list", "links" => $links, "authentication_type" => $generic_authentication_type, "authentication_users" => $generic_authentication_users, "page_settings" => $task_page_settings, ), "exits" => array(), "tasks" => array( $inner_task_id => array( "label" => $tn_label . " " . CMSPresentationFormSettingsUIHandler::getName($rn_plural) . " List", "id" => $inner_task_id, "type" => $listing_task_type_id, "tag" => "listing", "offset_top" => $offset_top + 50, "offset_left" => $offset_left + 10, "properties" => array( "exits" => array( "default_exit" => array("color" => "#a554a5"), ), "listing_type" => "", "choose_db_table" => array( "db_driver" => $db_driver, "include_db_driver" => $include_db_driver, "db_type" => $type, "db_table" => $relationship_table, "db_table_alias" => $relationship_table_alias, "db_table_parent" => $table_name, "db_table_parent_alias" => $table_alias, ), "action" => array( "single_insert" => $brokers_services_and_rules["insert"] ? 1 : 0, "single_update" => $brokers_services_and_rules["update"] ? 1 : 0, "single_delete" => $brokers_services_and_rules["delete"] ? 1 : 0, "multiple_delete" => $brokers_services_and_rules["delete"] ? 1 : 0, "single_delete_confirmation_message" => null, "multiple_delete_confirmation_message" => null, "single_delete_ok_redirect_url" => null, "multiple_delete_ok_redirect_url" => null, ), "links" => $inner_links, "pagination" => array( "active" => 1, "rows_per_page" => 500, ), "attributes" => $relationship_task_properties_ui_attributes, "brokers_services_and_rules" => $brokers_services_and_rules, "users_perms" => $generic_users_perms, ), "exits" => array( "default_exit" => array(), ), ) ), ); if ($table_task_count != count($tasks_details)) { $table_task_count = count($tasks_details); $is_even = $table_task_count % 2 == 0; $table_row_count += $is_even ? 1 : 0; $offset_left = $is_even ? 100 * $table_row_count : $offset_left + $width + 100; $offset_top = $is_even ? $offset_top + $height + 50 : $offset_top; } } } } break; } } $tables_tasks_details[$table_name] = $tasks_details; } foreach ($tables_tasks_details as $table_name => $tasks_details) { $table_alias = $tables_alias[$table_name]; $tn = $table_alias ? $table_alias : $table_name; $task_relative_path = "$relative_path$tn/"; $table_statuses = array(); foreach ($tasks_details as $task_id => $task) if ($task["tag"] == "page") { CMSPresentationUIDiagramFilesHandler::createPageFile($PEVC, $UserCacheHandler, $cms_page_cache_path_prefix, $user_global_variables_file_path, $user_beans_folder_path, $workflow_paths_id, $webroot_cache_folder_path, $webroot_cache_folder_url, $bean_name, $bean_file_name, $path, $task_relative_path, $overwrite, $files_creation_type, $vars_file_include_code, $authentication_files_relative_folder_path, $list_and_edit_users, $authenticated_template, $non_authenticated_template, $authenticated_template, $table_statuses, $js_funcs = array(), $js_code = "", $tasks_details, $task); foreach ($table_statuses as $t_id => $task_statuses) { foreach ($task_statuses as $file_path => $file_data) $statuses[$table_name][$file_path] = $file_data["modified_time"] ? true : false; $tasks_details = addCreatedFilesToTaskDetails($tasks_details, $t_id, $task_statuses); } $tasks_details[$task_id] = getTaskWithUpdatedFilePageSettings($PEVC, $task, $statuses[$table_name], "$absolute_path$tn/"); } saveTasksDetailsToDiagamXML($workflow_paths_id, $bean_name, "$path$tn/", $tasks_details); } $auth_page_and_block_ids = CMSPresentationUIDiagramFilesHandler::getAuthPageAndBlockIds(); $vars = array( "admin_url" => "{\$project_url_prefix}$relative_path", "logout_url" => "{\$project_url_prefix}" . $auth_page_and_block_ids["logout_page_id"], "login_url" => "{\$project_url_prefix}" . $auth_page_and_block_ids["login_page_id"], "register_url" => "{\$project_url_prefix}" . $auth_page_and_block_ids["register_page_id"], "forgot_credentials_url" => "{\$project_url_prefix}" . $auth_page_and_block_ids["forgot_credentials_page_id"], "edit_profile_url" => "{\$project_url_prefix}" . $auth_page_and_block_ids["edit_profile_page_id"], "list_and_edit_users_url" => "{\$project_url_prefix}" . $auth_page_and_block_ids["list_and_edit_users_page_id"], "list_users_url" => "{\$project_url_prefix}" . $auth_page_and_block_ids["list_users_page_id"], "edit_user_url" => "{\$project_url_prefix}" . $auth_page_and_block_ids["edit_user_page_id"], "add_user_url" => "{\$project_url_prefix}" . $auth_page_and_block_ids["add_user_page_id"], ); CMSPresentationUIDiagramFilesHandler::addVarsFile($PEVC, $vars_file_id, $vars); CMSPresentationUIDiagramFilesHandler::addUserAccessControlToVarsFile($PEVC, $vars_file_id, $list_and_edit_users, array("list_and_edit_users_url", "list_users_url", "edit_user_url", "add_user_url")); foreach ($statuses as $table_name => $table_statuses) foreach ($table_statuses as $file_path => $status) { unset($statuses[$table_name][$file_path]); $fp = str_replace($layer_path, "", $file_path); $is_auth_reserved_file = false; if ($auth_page_and_block_ids) foreach ($auth_page_and_block_ids as $k => $v) if ($k != "access_id" && $k != "object_type_page_id") { $path = $selected_project_id . (strpos($k, "_page_id") > 0 ? "/src/entity/" : "/src/block/") . $v . ".php"; if ($fp == $path) { $is_auth_reserved_file = true; break; } } if ($is_auth_reserved_file) $statuses["*"][$fp] = $status; else $statuses[$table_name][$fp] = $status; if (strpos($fp, "$selected_project_id/src/entity/") === 0) CMSPresentationLayerHandler::cacheEntitySaveActionTime($PEVC, $UserCacheHandler, $cms_page_cache_path_prefix, $file_path); } } } $PHPVariablesFileHandler->endUserGlobalVariables(); } } function getTaskWithUpdatedFilePageSettings($v188b4f5fa6, $v7f5911d32d, $v2e8aa9d64e, $pf65eb38c) { $v9ab35f1f0d = $v188b4f5fa6->getPresentationLayer(); $v2508589a4c = $v9ab35f1f0d->getSelectedPresentationId(); $v6bfcc44e7b = $v9ab35f1f0d->getPresentationFileExtension(); $pf3dc0762 = $v7f5911d32d["properties"]["file_name"] ? $pf65eb38c . $v7f5911d32d["properties"]["file_name"] . "." . $v6bfcc44e7b : null; if (file_exists($pf3dc0762) && $v2e8aa9d64e[$pf3dc0762]) { $v067674f4e4 = file_get_contents($pf3dc0762); $pc06f1034 = CMSFileHandler::getIncludes($v067674f4e4, false); $pf2e4821f = CMSFileHandler::getRegionsBlocks($v067674f4e4); $v9e3513bc0e = CMSFileHandler::getParamsValues($v067674f4e4);; $v53a57f1353 = $v7f5911d32d["properties"]["page_settings"]; $v53a57f1353["includes"] = $v53a57f1353["regions_blocks"] = $v53a57f1353["template_params"] = array(); if ($pc06f1034) foreach ($pc06f1034 as $pc24afc88) $v53a57f1353["includes"][] = array( "path" => $pc24afc88["path"], "once" => $pc24afc88["once"], ); if ($pf2e4821f) foreach ($pf2e4821f as $pd06bdde3) $v53a57f1353["regions_blocks"][] = array( "region" => $pd06bdde3["region"], "block" => $pd06bdde3["block"], "project" => $pd06bdde3["block_project"] && $pd06bdde3["block_project"] != $v2508589a4c ? $pd06bdde3["block_project"] : "", ); if ($v9e3513bc0e) foreach ($v9e3513bc0e as $v58b61e02bc) $v53a57f1353["template_params"][] = array( "name" => $v58b61e02bc["param"], "value" => $v58b61e02bc["value"], ); $v7f5911d32d["properties"]["page_settings"] = $v53a57f1353; } return $v7f5911d32d; } function addCreatedFilesToTaskDetails($v3165774ec7, $v8282c7dd58, $pb025a7be) { foreach ($v3165774ec7 as $v154025f3f4 => $v12ca913ad6) { if ($v154025f3f4 == $v8282c7dd58) { foreach ($pb025a7be as $pf3dc0762 => $pd4e0b815) if ($pd4e0b815 && $pd4e0b815["modified_time"] && $pd4e0b815["file_id"] && file_exists($pf3dc0762)) { if (!$v3165774ec7[$v154025f3f4]["properties"]["created_files"]) $v3165774ec7[$v154025f3f4]["properties"]["created_files"] = array(); $v3165774ec7[$v154025f3f4]["properties"]["created_files"][ $pd4e0b815["file_id"] ] = $pd4e0b815["modified_time"]; } break; } else if ($v12ca913ad6["tasks"]) $v3165774ec7[$v154025f3f4]["tasks"] = addCreatedFilesToTaskDetails($v12ca913ad6["tasks"], $v8282c7dd58, $pb025a7be); } return $v3165774ec7; } function saveTasksDetailsToDiagamXML($pdb9e96e6, $v8ffce2a791, $v87be7baa15, $v3165774ec7) { prepareTasksDetailsForDiagramXMLFile($v3165774ec7); $v87be7baa15 .= substr($v87be7baa15, -1) == "/" ? "" : "/"; $pb4201a4b = WorkFlowTasksFileHandler::getTaskFilePathByPath($pdb9e96e6, "presentation_ui", "_{$v8ffce2a791}_" . md5($v87be7baa15)); if (!file_exists($pb4201a4b)) return WorkFlowTasksFileHandler::createTasksFile($pb4201a4b, array("tasks" => $v3165774ec7)); else { $v8cd3e3837d = new WorkFlowTasksFileHandler($pb4201a4b); $v8cd3e3837d->init(); $v1d696dbd12 = $v8cd3e3837d->getWorkflowData(); $pce317a6b = array("offset_top", "offset_left", "width", "height"); foreach ($v3165774ec7 as $v7f5911d32d) { $v8282c7dd58 = $v7f5911d32d["id"]; foreach ($v1d696dbd12["tasks"] as $pacd80e2b) if ($pacd80e2b["id"] == $v8282c7dd58) { foreach ($pce317a6b as $pd0d05c9c) if (strlen($pacd80e2b[$pd0d05c9c])) $v7f5911d32d[$pd0d05c9c] = $pacd80e2b[$pd0d05c9c]; break; } $v1d696dbd12["tasks"][$v8282c7dd58] = $v7f5911d32d; } return WorkFlowTasksFileHandler::createTasksFile($pb4201a4b, $v1d696dbd12); } } function prepareTasksDetailsForDiagramXMLFile(&$v3165774ec7) { foreach ($v3165774ec7 as $v8282c7dd58 => $v7f5911d32d) { unset($v3165774ec7[$v8282c7dd58]["properties"]["brokers_services_and_rules"]); unset($v3165774ec7[$v8282c7dd58]["properties"]["files_to_create"]); if ($v7f5911d32d["tasks"]) { prepareTasksDetailsForDiagramXMLFile($v7f5911d32d["tasks"]); $pf3904748 = array(); foreach ($v7f5911d32d["tasks"] as $v52ad7996a2 => $pe7f1e9cf) { $v3165774ec7[$v52ad7996a2] = $pe7f1e9cf; $pf3904748[$v52ad7996a2] = " > div:nth-child(8)"; } $v3165774ec7[$v8282c7dd58]["tasks"] = $pf3904748; } if ($v7f5911d32d["properties"]["attributes"]) { $pa3d4d908 = array(); foreach ($v7f5911d32d["properties"]["attributes"] as $v7162e23723 => $v97915b9670) { $v97915b9670["name"] = $v7162e23723; if (isset($v97915b9670["include_db_driver"])) $v97915b9670["include_db_driver"] = $v97915b9670["include_db_driver"] ? 1 : 0; $pa3d4d908[] = $v97915b9670; } $v3165774ec7[$v8282c7dd58]["properties"]["attributes"] = $pa3d4d908; } if (isset($v7f5911d32d["properties"]["choose_db_table"]["include_db_driver"])) $v3165774ec7[$v8282c7dd58]["properties"]["choose_db_table"]["include_db_driver"] = $v7f5911d32d["properties"]["choose_db_table"]["include_db_driver"] ? 1 : 0; } } function getTaskId($pf65eb38c, $pc4aa460d, $pc8421459, $v8c5df8072b, $v657ab10c9c) { $v657ab10c9c = getValidadedTaskPageId($pf65eb38c, $pc4aa460d, $v657ab10c9c); return "task_{$pc8421459}" . ($v8c5df8072b ? "_{$v8c5df8072b}" : "") . "_{$v657ab10c9c}"; } function getPageIdFromTaskId($pc8421459, $v8c5df8072b, $v8282c7dd58) { return substr($v8282c7dd58, strlen("task_{$pc8421459}" . ($v8c5df8072b ? "_{$v8c5df8072b}" : "") . "_")); } function getTaskPageUrl($pf65eb38c, $v5ee19a600e, $pc4aa460d, $v657ab10c9c) { $v657ab10c9c = getValidadedTaskPageId($pf65eb38c, $pc4aa460d, $v657ab10c9c); $v5ee19a600e .= substr($v5ee19a600e, -1) == "/" ? "" : "/"; return "{\$project_url_prefix}$v5ee19a600e$v657ab10c9c"; } function getTaskPageId($pf65eb38c, $pc4aa460d, $v657ab10c9c) { $v657ab10c9c = getValidadedTaskPageId($pf65eb38c, $pc4aa460d, $v657ab10c9c); return $v657ab10c9c; } function getValidadedTaskPageId($pf65eb38c, $pc4aa460d, $v657ab10c9c) { if ($pc4aa460d) return $v657ab10c9c; $pf65eb38c .= substr($pf65eb38c, -1) == "/" ? "" : "/"; CMSPresentationLayerHandler::configureUniqueFileId($v657ab10c9c, $pf65eb38c, ".php"); return $v657ab10c9c; } function prepareRelationshipsLinks($v8c5df8072b, $v9a4a47d31e, $pb7b19dbe, $pd98df87c, $v2f0e633d4c, $peae4fad0, $v98a8251725, $pc4aa460d, $ped0a6251, &$v5ed3bcae90, $pdd058476) { if ($pb7b19dbe && $pb7b19dbe["relationships"]) foreach ($pb7b19dbe["relationships"] as $pa512b698 => $v4b601c37cc) if ($v4b601c37cc) { $pb7553d24 = $v9a4a47d31e[$pa512b698]; $v0360fd2b00 = $pb7553d24 ? $pb7553d24 : $pa512b698; $pc37695cb = count($v4b601c37cc); for ($v9d27441e80 = 0; $v9d27441e80 < $pc37695cb; $v9d27441e80++) if ($v4b601c37cc[$v9d27441e80]) { $v657ab10c9c = "relationship_" . strtolower($v0360fd2b00) . ($v9d27441e80 > 0 ? "_" . ($v9d27441e80 + 1) : ""); $pe52f82d7 = CMSPresentationFormSettingsUIHandler::getPlural(CMSPresentationFormSettingsUIHandler::getName($v0360fd2b00)); $v4e37a8b018 = getFKQueryStringForTable($pa512b698, $ped0a6251, $pdd058476, $pd98df87c); $v2731445896 = $v98a8251725 . CMSPresentationUIDiagramFilesHandler::getLabelFileName($pd98df87c) . "/"; $pd8da0b06 = $peae4fad0 . CMSPresentationUIDiagramFilesHandler::getLabelFileName($pd98df87c) . "/"; $v5ed3bcae90[] = array( "url" => getTaskPageUrl($pd8da0b06, $v2731445896, $pc4aa460d, $v657ab10c9c) . "?$v4e37a8b018", "value" => $pe52f82d7, "class" => "relationship-table-item relationship-{$pd98df87c} relationship-{$pd98df87c}-" . strtolower($v0360fd2b00), "title" => "View $pe52f82d7 of this $v2f0e633d4c", ); } } } function prepareRelationshipsTaskExits($v8c5df8072b, $v9a4a47d31e, $pb7b19dbe, $pd98df87c, $v2f0e633d4c, $peae4fad0, $v98a8251725, $pc4aa460d, &$pf7efa74a) { if ($pb7b19dbe && $pb7b19dbe["relationships"]) foreach ($pb7b19dbe["relationships"] as $pa512b698 => $v4b601c37cc) if ($v4b601c37cc) { $pb7553d24 = $v9a4a47d31e[$pa512b698]; $v0360fd2b00 = $pb7553d24 ? $pb7553d24 : $pa512b698; $pc37695cb = count($v4b601c37cc); for ($v9d27441e80 = 0; $v9d27441e80 < $pc37695cb; $v9d27441e80++) if ($v4b601c37cc[$v9d27441e80]) { $v77cb07b555 = $v9d27441e80 > 0 ? "_" . ($v9d27441e80 + 1) : ""; $v8282c7dd58 = getTaskId("$peae4fad0$pd98df87c/", $pc4aa460d, "page", $v8c5df8072b, "relationship_" . strtolower($v0360fd2b00) . $v77cb07b555); $pe52f82d7 = CMSPresentationFormSettingsUIHandler::getPlural(CMSPresentationFormSettingsUIHandler::getName($v0360fd2b00)); $pf7efa74a[] = array( "task_id" => $v8282c7dd58, "label" => $pe52f82d7, "type" => "Straight", "overlay" => "Forward Arrow", "color" => "eab34f", "properties" => array( "connection_type" => "link", "connection_title" => "View $pe52f82d7 of this $v2f0e633d4c", "connection_class" => "relationship-table-item relationship-{$pd98df87c} relationship-{$pd98df87c}-" . strtolower($v0360fd2b00), ), ); } } } function prepareFKsActionsAndAttributesSettings($v30857f7eca, $pac4bc40a, $v8c5df8072b, $v9a4a47d31e, $pd98df87c, $v872f5b4dbb, $v8b13fa2358, $v3fb9f41470, $peae4fad0, $v98a8251725, $pc4aa460d, &$v226a0ecedf, $pdd058476, $pdc985d67 = false) { $ped0a6251 = WorkFlowDataAccessHandler::getTableFromTables($pac4bc40a, $v8c5df8072b); if ($ped0a6251) foreach ($ped0a6251 as $v5e45ec9bb9 => $v1b0cfa478b) if ($v1b0cfa478b["fk"][0]["table"]) { $v1239d19a31 = getTableAttributeFKTable($v1b0cfa478b["fk"], $pac4bc40a); $pf71bb87b = $v1239d19a31["table"]; $v50bb61a728 = $v1239d19a31["attribute"]; $v65f81ba9af = WorkFlowDataAccessHandler::getTableFromTables($pac4bc40a, $pf71bb87b); if ($v65f81ba9af && $v65f81ba9af[$v50bb61a728]) { $v83030c1a8d = getTableAttrTitle($v65f81ba9af, $pf71bb87b); if ($v83030c1a8d) { $v12edf18bf9 = $v9a4a47d31e[$pf71bb87b]; $v26fdffea4f = $v12edf18bf9 ? $v12edf18bf9 : $pf71bb87b; $pb41017c5 = array( "list_type" => "from_db", "db_driver" => $v872f5b4dbb, "include_db_driver" => $v8b13fa2358, "db_type" => $v3fb9f41470, "db_table" => $pf71bb87b, "db_table_alias" => $v12edf18bf9, "db_attribute_label" => $v83030c1a8d, "db_attribute_fk" => $v50bb61a728, ); if ($v30857f7eca[$pf71bb87b] && $v30857f7eca[$pf71bb87b]["get"] && !$pdc985d67) { $v75c8841ebe = $v98a8251725 . CMSPresentationUIDiagramFilesHandler::getLabelFileName($v26fdffea4f) . "/"; $v2c2a30dbfe = $peae4fad0 . CMSPresentationUIDiagramFilesHandler::getLabelFileName($v26fdffea4f) . "/"; $v4e37a8b018 = getFKQueryStringForTable($pf71bb87b, $ped0a6251, $pdd058476, $pd98df87c); $pb41017c5["link"] = getTaskPageUrl($v2c2a30dbfe, $v75c8841ebe, $pc4aa460d, "view") . "?$v4e37a8b018"; } if ($v226a0ecedf[$v5e45ec9bb9]) $v226a0ecedf[$v5e45ec9bb9] = array_merge($v226a0ecedf[$v5e45ec9bb9], $pb41017c5); else $v226a0ecedf[$v5e45ec9bb9] = $pb41017c5; } } } } function getExtraHeadCode() { $v067674f4e4 = '<?php
$block_id = $EVC->getCMSLayer()->getCMSBlockLayer()->getBlockIdFromFilePath(__FILE__);//must be the same than this file name.

$block_settings[$block_id] = array(
	"str" => \'<script>
function goToItem(url, table, pks) {
	if (url) {
		url += url.indexOf("?") == -1 ? "?" : "";
		var cancel = false;
		
		if (pks && pks.length) {
			var query_string = "";
	
			for (var i = 0; i < pks.length; i++) {
				var pk = pks[i];
			
				if (pk) {
					var pk_label = pk.replace(/_/g, " ").toLowerCase().replace(/(^([a-zA-Z\\p{M}]))|([ -][a-zA-Z\\p{M}])/g,
						function(s){
							return s.toUpperCase();
						});
					
					var pk_value = prompt("Please insert the correspondent value for the " + table + "\\\'s attribute: " + pk_label);
					if (pk_value == null || pk_value == "")
						cancel = true;
					
					pk_value = pk_value == null ? "" : pk_value;
					query_string += (query_string ? "&" : "") + pk + "=" + pk_value;
				}
			}
		
			url += query_string;
		}
		
		if (!cancel)
			document.location = url;
	}
	else {
		alert("Error: URL cannot be undefined in the goToItem function!");
	}
}
</script>\',
);

$EVC->getCMSLayer()->getCMSBlockLayer()->createBlock("echostr", $block_id, $block_settings[$block_id]);
?>'; return $v067674f4e4; } function getHomePageMenusItems($v30857f7eca, $v98a8251725, $v9a4a47d31e) { $pf0161f6f = array(); foreach ($v30857f7eca as $v8c5df8072b => $v717becaad5) { $v566db8f5a9 = $v9a4a47d31e[$v8c5df8072b]; $pd98df87c = $v566db8f5a9 ? $v566db8f5a9 : $v8c5df8072b; $v5e813b295b = CMSPresentationFormSettingsUIHandler::getName($pd98df87c); $v04f7388b74 = CMSPresentationFormSettingsUIHandler::getPlural($v5e813b295b); $v2731445896 = $v98a8251725 . CMSPresentationUIDiagramFilesHandler::getLabelFileName($pd98df87c) . "/"; $pf0161f6f[] = array( "label" => $v04f7388b74, "url" => "{\$project_url_prefix}$v2731445896", "title" => $v04f7388b74, "class" => "index", ); } return $pf0161f6f; } function getTableMenusItems($v30857f7eca, $pac4bc40a, $peae4fad0, $v98a8251725, $pc4aa460d, $v9a4a47d31e, $v8c5df8072b) { $pf0161f6f = array(); $v717becaad5 = $v30857f7eca[$v8c5df8072b]; if ($v717becaad5) { $v9deec980f6 = $v717becaad5["get_all"]; $v053b63d4d5 = $v717becaad5["get"]; $v4cb12d6d8e = $v717becaad5["insert"]; $v6e99d5dea0 = $v717becaad5["update"]; $v74cb39e604 = $v717becaad5["delete"]; $v69f1629ff2 = $v717becaad5["relationships"]; $v566db8f5a9 = $v9a4a47d31e[$v8c5df8072b]; $pd98df87c = $v566db8f5a9 ? $v566db8f5a9 : $v8c5df8072b; $v5ee19a600e = $v98a8251725 . CMSPresentationUIDiagramFilesHandler::getLabelFileName($pd98df87c) . "/"; $pf65eb38c = $peae4fad0 . CMSPresentationUIDiagramFilesHandler::getLabelFileName($pd98df87c) . "/"; $ped0a6251 = WorkFlowDataAccessHandler::getTableFromTables($pac4bc40a, $v8c5df8072b); if (!empty($ped0a6251)) { $pe2f18119 = array(); foreach ($ped0a6251 as $v5e45ec9bb9 => $v1b0cfa478b) if ($v1b0cfa478b["primary_key"]) $pe2f18119[] = $v5e45ec9bb9; if ($v9deec980f6) $pf0161f6f[] = array( "label" => getPageTitle($pd98df87c, "get_all"), "url" => getTaskPageUrl($pf65eb38c, $v5ee19a600e, $pc4aa460d, "list"), "title" => getPageTitle($pd98df87c, "get_all"), "class" => "list", ); if ($v4cb12d6d8e) $pf0161f6f[] = array( "label" => getPageTitle($pd98df87c, "insert"), "url" => getTaskPageUrl($pf65eb38c, $v5ee19a600e, $pc4aa460d, "add"), "title" => getPageTitle($pd98df87c, "insert"), "class" => "add", ); if ($v053b63d4d5) $pf0161f6f[] = array( "label" => getPageTitle($pd98df87c, "get"), "url" => 'javascript:goToItem(\'' . getTaskPageUrl($pf65eb38c, $v5ee19a600e, $pc4aa460d, "view") . '\', \'' . $pd98df87c . '\', [\'' . implode("', '", $pe2f18119) . '\'])', "title" => getPageTitle($pd98df87c, "get"), "class" => "view", ); if ($v6e99d5dea0 || $v74cb39e604) $pf0161f6f[] = array( "label" => getPageTitle($pd98df87c, "update"), "url" => 'javascript:goToItem(\'' . getTaskPageUrl($pf65eb38c, $v5ee19a600e, $pc4aa460d, "edit") . '\', \'' . $pd98df87c . '\', [\'' . implode("', '", $pe2f18119) . '\'])', "title" => getPageTitle($pd98df87c, "update"), "class" => "edit", ); if ($v69f1629ff2) foreach ($v69f1629ff2 as $pa512b698 => $v83d63317ab) if ($v83d63317ab) { $pb7553d24 = $v9a4a47d31e[$pa512b698]; $v0360fd2b00 = $pb7553d24 ? $pb7553d24 : $pa512b698; $pc37695cb = count($v83d63317ab); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v657ab10c9c = "relationship_" . strtolower($v0360fd2b00) . ($v43dd7d0051 > 0 ? "_" . ($v43dd7d0051 + 1) : ""); $pf0161f6f[] = array( "label" => getPageTitle($v0360fd2b00, "get_all"), "url" => 'javascript:goToItem(\'' . getTaskPageUrl($pf65eb38c, $v5ee19a600e, $pc4aa460d, $v657ab10c9c) . '\', \'' . $pd98df87c . '\', [\'' . implode("', '", $pe2f18119) . '\'])', "title" => getPageTitle($v0360fd2b00, "get_all") . " for a specific " . CMSPresentationFormSettingsUIHandler::getName($pd98df87c) . "'s Item", "class" => "relationship", ); } } } } return $pf0161f6f; } function getMenusCode($v30857f7eca, $pac4bc40a, $peae4fad0, $v98a8251725, $pc4aa460d, $v9a4a47d31e) { $pea237a57 = ''; foreach ($v30857f7eca as $v8c5df8072b => $v717becaad5) { $v566db8f5a9 = $v9a4a47d31e[$v8c5df8072b]; $pd98df87c = $v566db8f5a9 ? $v566db8f5a9 : $v8c5df8072b; $v9acc88059e = CMSPresentationFormSettingsUIHandler::getName($pd98df87c); $pea237a57 .= '
		array(
			"label" => "' . $v9acc88059e . '",
			"url" => "#",
			"title" => "' . $v9acc88059e . '",
			"class" => "' . $pd98df87c . '",
			"menus" => array('; $pf0161f6f = getTableMenusItems($v30857f7eca, $pac4bc40a, $peae4fad0, $v98a8251725, $pc4aa460d, $v9a4a47d31e, $v8c5df8072b); foreach ($pf0161f6f as $v4d613201cc) { $pea237a57 .= '
				array('; foreach ($v4d613201cc as $pe2ae3be9 => $v956913c90f) $pea237a57 .= '
					"' . addcslashes($pe2ae3be9, '"') . '" => "' . addcslashes($v956913c90f, '"') . '",'; $pea237a57 .= '
				),'; } $pea237a57 .= '
			)
		),'; } $pea237a57 .= $pea237a57 ? "\n\t" : ""; $v067674f4e4 = '<?php
$block_id = $EVC->getCMSLayer()->getCMSBlockLayer()->getBlockIdFromFilePath(__FILE__);//must be the same than this file name.

$block_settings[$block_id] = array(
	"type" => "",
	"class" => "menu",
	"title" => "",
	"items_type" => "",
	"menus" => array(' . $pea237a57 . '),
	"style_type" => "template",
	"template_type" => "user_defined",
	"ptl" => array(
		"code" => "
<ptl:if is_array(\$input_data)>
	<!-- Note that this does not need the UL element bc the template already contains the UL. -->
	
	<ptl:foreach \$input_data i item>
		
		<!-- Nav Item - Components Collapse Menu -->
		<li class=\"nav-item <ptl:echo \$item[class]/>\">
			<ptl:echo \$item[previous_html]/>
			
			<ptl:if \$item[menus]>
				<a class=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseLayouts-<ptl:echo \$i/>\" aria-expanded=\"false\" aria-controls=\"collapseLayouts-<ptl:echo \$i/>\" title=\\"<ptl:echo \$item[title]/>\\" <ptl:echo \$item[attrs]/>>
					<span class=\"sb-nav-link-icon\"><i class=\"fas fa-table\"></i></span>
					<span><ptl:echo \$item[label]/></span>
					<span class=\"sb-sidenav-collapse-arrow\"><i class=\"fas fa-angle-down\"></i></span>
				</a>
				<ptl:echo \$item[next_html]/>
				
				<div class=\"collapse\" id=\"collapseLayouts-<ptl:echo \$i/>\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">
					<nav class=\"sb-sidenav-menu-nested nav\">
						<ptl:foreach \$item[menus] j sub_item>
							<ptl:getSubMenuHTML \$sub_item />
						</ptl:foreach>
					</nav>
				</div>
		    	<ptl:else>
		    		<a class=\"nav-link\" href=\"<ptl:echo \$item[url]/>\" title=\\"<ptl:echo \$item[title]/>\\" <ptl:echo \$item[attrs]/>><ptl:echo \$item[label]/></a>
		    		
		    		<ptl:echo \$item[next_html]/>
			</ptl:if>
		</li>
	</ptl:foreach>
</ptl:if>	

<ptl:function:getSubMenuHTML item>
	<a class=\"nav-link <ptl:echo \$item[class]/>\" href=\"<ptl:echo \$item[url]/>\" title=\\"<ptl:echo \$item[title]/>\\" <ptl:echo \$item[attrs]/>><ptl:echo \$item[label]/></a>
</ptl:function>",
	),
	"css" => "",
);

$EVC->getCMSLayer()->getCMSBlockLayer()->createBlock("menu/show_menu", $block_id, $block_settings[$block_id]);
?>'; return $v067674f4e4; } function getTableSubMenusCode($v30857f7eca, $pac4bc40a, $peae4fad0, $v98a8251725, $pc4aa460d, $v9a4a47d31e, $v8c5df8072b) { $pf0161f6f = getTableMenusItems($v30857f7eca, $pac4bc40a, $peae4fad0, $v98a8251725, $pc4aa460d, $v9a4a47d31e, $v8c5df8072b); $pea237a57 = ''; if ($pf0161f6f) foreach ($pf0161f6f as $v4d613201cc) { $pea237a57 .= '
		array('; foreach ($v4d613201cc as $pe2ae3be9 => $v956913c90f) $pea237a57 .= '
			"' . addcslashes($pe2ae3be9, '"') . '" => "' . addcslashes($v956913c90f, '"') . '",'; $pea237a57 .= '
		),'; } $pea237a57 .= $pea237a57 ? "\n\t" : ""; $v067674f4e4 = '<?php
$block_id = $EVC->getCMSLayer()->getCMSBlockLayer()->getBlockIdFromFilePath(__FILE__);//must be the same than this file name.

$block_settings[$block_id] = array(
	"type" => "",
	"class" => "menu",
	"title" => "",
	"items_type" => "",
	"menus" => array(' . $pea237a57 . '),
	"style_type" => "template",
	"template_type" => "user_defined",
	"ptl" => array(
		"code" => "
<ptl:getMenuHTML \$input_data />

<ptl:function:getMenuHTML menus>
	<ptl:if is_array(\$menus)>
		<ptl:foreach \$menus i item>
			<a class=\"list-group-item list-group-item-action\" href=\"<ptl:echo \$item[url]/>\" title=\\"<ptl:echo \$item[title]/>\\"><i class=\"fas fa-fw fa-table\"></i> <ptl:echo \$item[label]/></a>
			
			<ptl:if \$item[menus]>
		    		<ptl:getMenuHTML \$item[menus] />
			</ptl:if>
		</ptl:foreach>
	</ptl:if>	
</ptl:function>",
	),
	"css" => "",
);

$EVC->getCMSLayer()->getCMSBlockLayer()->createBlock("menu/show_menu", $block_id, $block_settings[$block_id]);
?>'; return $v067674f4e4; } function getIndexPageCode($v64a5628080, $pf0161f6f) { $pf8ed4912 = '<h1 class="' . strtolower(str_replace(array(" ", "_"), "-", $v64a5628080)) . '">' . ucwords(str_replace(array("-", "_"), " ", $v64a5628080)) . '</h1>'; if ($pf0161f6f) { $pf8ed4912 .= '<div class="align-items-center justify-content-between">'; foreach ($pf0161f6f as $v4d613201cc) $pf8ed4912 .= '
		<div class="col-xl-3 col-md-4 col-sm-6 float-left">
			<a class="text-white stretched-link text-decoration-none" href="' . $v4d613201cc["url"] . '" title="' . $v4d613201cc["title"] . '">
				<div class="card bg-primary mt-2 mb-2 ml-2 mr-2">
	                     <div class="card-body">' . ucwords(str_replace(array("-", "_"), " ", $v4d613201cc["label"])) . '</div>
	                     <div class="card-footer bg-primary d-flex align-items-center justify-content-between">
	                         <span class="small text-white stretched-link" href="#">View Details</span>
	                         <div class="small text-white"><i class="fas fa-angle-right"></i></div>
	                     </div>
				</div>
			</a>
		</div>'; $pf8ed4912 .= '</div>'; } $v067674f4e4 = '<?php
$block_id = $EVC->getCMSLayer()->getCMSBlockLayer()->getBlockIdFromFilePath(__FILE__);//must be the same than this file name.

$block_settings[$block_id] = array(
	"str" => "' . addcslashes($pf8ed4912, '"') . '",
);

$EVC->getCMSLayer()->getCMSBlockLayer()->createBlock("echostr", $block_id, $block_settings[$block_id]);
?>'; return $v067674f4e4; } function getPageTitle($v8c5df8072b, $v3fb9f41470) { $v5e813b295b = CMSPresentationFormSettingsUIHandler::getName($v8c5df8072b); $v04f7388b74 = CMSPresentationFormSettingsUIHandler::getPlural($v5e813b295b); $v3fb9f41470 = strtolower($v3fb9f41470); switch ($v3fb9f41470) { case "get_all": return $v04f7388b74 . "' List"; case "get": return $v5e813b295b . " Properties"; case "insert": return "Add new $v5e813b295b"; case "update": return "Edit $v5e813b295b"; case "delete": return "Delete $v5e813b295b"; } return ""; } function getFKQueryStringForTable($v8ee2bfecdc, $ped0a6251, $pdd058476, $pd98df87c) { $pa8f64784 = ""; $pe82a6ac1 = strtolower($v8ee2bfecdc); foreach ($ped0a6251 as $v5e45ec9bb9 => $v1b0cfa478b) if (is_array($v1b0cfa478b["fk"])) foreach ($v1b0cfa478b["fk"] as $pa7c14731) if ($pa7c14731["table"] == $pe82a6ac1) { $v67db1bd535 = "#$v5e45ec9bb9#"; $pa8f64784 .= ($pa8f64784 ? "&" : "") . $pa7c14731["attribute"] . "=" . $v67db1bd535; } return $pa8f64784; } function getFKQueryStringFromCurrentURL($v8c5df8072b, $v65f81ba9af, $pdd058476) { $pa8f64784 = ""; $v2ee72186a7 = strtolower($v8c5df8072b); if ($v65f81ba9af) foreach ($v65f81ba9af as $v5e45ec9bb9 => $v1b0cfa478b) if (is_array($v1b0cfa478b["fk"])) foreach ($v1b0cfa478b["fk"] as $pa7c14731) if (strtolower($pa7c14731["table"]) == $v2ee72186a7) { if ($pdd058476 == "ptl") $v67db1bd535 = '<ptl:echo \\$_GET[' . $pa7c14731["attribute"] . '] />'; else $v67db1bd535 = '#_GET[' . $pa7c14731["attribute"] . ']#'; $pa8f64784 .= ($pa8f64784 ? "&" : "") . $v5e45ec9bb9 . "=" . $v67db1bd535; } return $pa8f64784; } function getTablePKsQueryStringFromCurrentURL($ped0a6251, $pdd058476) { $pc2defd39 = ""; if ($ped0a6251) foreach ($ped0a6251 as $v5e45ec9bb9 => $v1b0cfa478b) if ($v1b0cfa478b["primary_key"]) { if ($pdd058476 == "ptl") $v67db1bd535 = '<ptl:echo \\$_GET[' . $v5e45ec9bb9 . '] />'; else $v67db1bd535 = '#_GET[' . $v5e45ec9bb9 . ']#'; $pc2defd39 .= ($pc2defd39 ? "&" : "") . $v5e45ec9bb9 . "=" . $v67db1bd535; } return $pc2defd39; } function getTableAttrTitle($ped0a6251, $v8c5df8072b = false) { $v83030c1a8d = null; $v2ee72186a7 = $v8c5df8072b ? strtolower($v8c5df8072b) : $v8c5df8072b; $v3fbfffc7ed = ObjTypeHandler::$attribute_names_as_title; foreach ($ped0a6251 as $v5e45ec9bb9 => $v1b0cfa478b) { $v9bc59d9c66 = strtolower(trim($v5e45ec9bb9)); if (preg_match("/^(" . implode("|", $v3fbfffc7ed) . ")$/iu", $v9bc59d9c66) || ($v2ee72186a7 && preg_match("/^(" . implode("|", $v3fbfffc7ed) . ")([ \-_]*)$v2ee72186a7$/iu", $v9bc59d9c66)) || ($v2ee72186a7 && preg_match("/^$v2ee72186a7([ \-_]*)(" . implode("|", $v3fbfffc7ed) . ")$/iu", $v9bc59d9c66))) $v83030c1a8d = $v5e45ec9bb9; else if (empty($v83030c1a8d) && strpos($v1b0cfa478b["type"], "char") !== false && empty($v1b0cfa478b["primary_key"])) $v83030c1a8d = $v5e45ec9bb9; } return $v83030c1a8d; } function getTableAttributeFKTable($v6f8d9a97ed, $pac4bc40a) { if (is_array($v6f8d9a97ed)) { $v6e649ff90f = null; $pd5c63d1d = -1; foreach ($v6f8d9a97ed as $v43dd7d0051 => $v1239d19a31) { $pf71bb87b = $v1239d19a31["table"]; $ped0a6251 = WorkFlowDataAccessHandler::getTableFromTables($pac4bc40a, $pf71bb87b); if (getTableAttrTitle($ped0a6251, $pf71bb87b)) { $v905a608274 = 0; foreach ($ped0a6251 as $v1b0cfa478b) if ($v1b0cfa478b["primary_key"]) $v905a608274++; if ($pd5c63d1d == -1 || $pd5c63d1d > $v905a608274) { $v6e649ff90f = $v1239d19a31; $pd5c63d1d = $v905a608274; } } } return $v6e649ff90f ? $v6e649ff90f : $v6f8d9a97ed[0]; } } ?>
