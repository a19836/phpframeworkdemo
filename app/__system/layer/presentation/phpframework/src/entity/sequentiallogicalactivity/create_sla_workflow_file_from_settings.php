<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.workflow.WorkFlowTaskHandler"); include_once $EVC->getUtilPath("WorkFlowTasksFileHandler"); $UserAuthenticationHandler->checkPresentationFileAuthentication($entity_path, "access"); $actions_settings = $_POST["actions"]; $status = false; if (isset($actions_settings)) { $common_project_name = $EVC->getCommonProjectName(); $allowed_tasks_tag = array("slaitemsingle", "slaitemgroup"); $WorkFlowTaskHandler = new WorkFlowTaskHandler($webroot_cache_folder_path, $webroot_cache_folder_url); $WorkFlowTaskHandler->setCacheRootPath(LAYER_CACHE_PATH); $sla_tasks_folder_path = $EVC->getViewsPath() . "sequentiallogicalactivity/tasks/"; $WorkFlowTaskHandler->addTasksFolderPath($sla_tasks_folder_path); $WorkFlowTaskHandler->setAllowedTaskTags($allowed_tasks_tag); $WorkFlowTaskHandler->initWorkFlowTasks(); $tasks_settings = $WorkFlowTaskHandler->getLoadedTasksSettings(); $slaitemsingle = $WorkFlowTaskHandler->getTasksByTag("slaitemsingle"); $slaitemgroup = $WorkFlowTaskHandler->getTasksByTag("slaitemgroup"); $all_others_task_type_id = $slaitemsingle[0]["type"]; $loop_or_group_task_type_id = $slaitemgroup[0]["type"]; $tasks = array(); $repeated_tasks_id = array(); $offset_top = 20; $offset_left = 20; prepareActionsTasks($actions_settings, $tasks, $loop_or_group_task_type_id, $all_others_task_type_id, $repeated_tasks_id, $offset_top, $offset_left); $tasks_ids = array_keys($tasks); $tasks[ $tasks_ids[0] ]["start"] = 1; $tasks = array("tasks" => $tasks); $task_file_path = WorkFlowTasksFileHandler::getTaskFilePathByPath($workflow_paths_id, $_GET["path"], $_GET["path_extra"]); $status = WorkFlowTasksFileHandler::createTasksFile($task_file_path, $tasks); } echo $status; die(); function prepareActionsTasks($v55bd236ac1, &$v1d696dbd12, $v6127d16dbf, $v0d629cc87f, &$pfb448520, $pe7ee6bc6, $v1e12218a02) { $v607a49cf36 = 200; $v3a0455afd7 = 50; if ($v55bd236ac1) foreach ($v55bd236ac1 as $v43dd7d0051 => $v1b5ae9c139) { $v256e3a39a7 = $v1b5ae9c139["action_type"]; $v8282c7dd58 = getActionTaskId($v1b5ae9c139, $v6127d16dbf, $v0d629cc87f, $pfb448520); $pfb448520[] = $v8282c7dd58; $pe927264a = $v1b5ae9c139; $pf7efa74a = array(); if ($v256e3a39a7 == "loop" || $v256e3a39a7 == "group") { $v0b86b234a0 = true; $pc8421459 = $v6127d16dbf; $pfbb6ee46 = "slaitemgroup"; $v52af334f29 = array( "inside_group_exit" => array( "color" => "#31498f", "label" => "Inside", ), "outside_group_exit" => array( "color" => "#2C2D34", "label" => "Outside", ) ); unset($pe927264a["action_value"]["actions"]); } else { $v0b86b234a0 = false; $pc8421459 = $v0d629cc87f; $pfbb6ee46 = "slaitemsingle"; $v52af334f29 = array( "default_exit" => array("color" => "#426efa") ); } if ($v0b86b234a0) { if (is_array($v1b5ae9c139["action_value"]["actions"]) && $v1b5ae9c139["action_value"]["actions"][0]) $pf7efa74a["inside_group_exit"] = array( "task_id" => getActionTaskId($v1b5ae9c139["action_value"]["actions"][0], $v6127d16dbf, $v0d629cc87f, $pfb448520), ); if ($v55bd236ac1[$v43dd7d0051 + 1]) $pf7efa74a["outside_group_exit"] = array( "task_id" => getActionTaskId($v55bd236ac1[$v43dd7d0051 + 1], $v6127d16dbf, $v0d629cc87f, $pfb448520), ); } else if ($v55bd236ac1[$v43dd7d0051 + 1]) $pf7efa74a["default_exit"] = array( "task_id" => getActionTaskId($v55bd236ac1[$v43dd7d0051 + 1], $v6127d16dbf, $v0d629cc87f, $pfb448520), ); $v1d696dbd12[$v8282c7dd58] = array( "label" => ($v1b5ae9c139["result_var_name"] ? '$' . $v1b5ae9c139["result_var_name"] . " = " : "") . $v256e3a39a7 . " (...)", "id" => $v8282c7dd58, "type" => $pc8421459, "tag" => $pfbb6ee46, "offset_top" => $pe7ee6bc6, "offset_left" => $v1e12218a02, "width" => $v607a49cf36, "height" => $v3a0455afd7, "properties" => array( "exits" => $v52af334f29, "properties" => $pe927264a, ), "exits" => $pf7efa74a, ); if ($v0b86b234a0) prepareActionsTasks($v1b5ae9c139["action_value"]["actions"], $v1d696dbd12, $v6127d16dbf, $v0d629cc87f, $pfb448520, $pe7ee6bc6 + floor($v3a0455afd7 / 2), $v1e12218a02 + $v607a49cf36 + 50); $pe7ee6bc6 += $v3a0455afd7 + 50; $v1e12218a02 += $v607a49cf36 + 50; } } function getActionTaskId($v1b5ae9c139, $v6127d16dbf, $v0d629cc87f, $pfb448520) { $pc8421459 = $v1b5ae9c139["action_type"] == "loop" || $v1b5ae9c139["action_type"] == "group" ? $v6127d16dbf : $v0d629cc87f; $v8282c7dd58 = "task_" . $pc8421459 . "_" . md5(serialize($v1b5ae9c139)); while (in_array($v8282c7dd58, $pfb448520)) $v8282c7dd58 .= "_"; return $v8282c7dd58; } ?>
