<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.util.web.MyCurl"); include_once get_lib("org.phpframework.compression.ZipHandler"); include_once get_lib("org.phpframework.util.web.CSRFValidator"); class DependenciesInstallationHandler { public static $INSTALL_DEPENDENCIES_VARIABLE_NAME = "install_dependencies"; public static function setCookieInstallDependencies($v5c1c342594) { $v559313b33e = CSRFValidator::$COOKIES_EXTRA_FLAGS; CookieHandler::setSafeCookie(self::$INSTALL_DEPENDENCIES_VARIABLE_NAME, $v5c1c342594, 0, "/", $v559313b33e); } public static function isDependencyInstalled($v11397e1c0c, &$pef612b9d = null) { return file_exists($v11397e1c0c) && is_dir($v11397e1c0c); } public static function installDependencies($v4fe35d59c6, $v0f854a7818, &$pef612b9d = null) { $v8a29987473 = array(); if ($v4fe35d59c6 && $v0f854a7818) { $v0f854a7818 = is_array($v0f854a7818) ? $v0f854a7818 : array($v0f854a7818); $pd85a376c = array(); foreach ($v0f854a7818 as $pdc9023c8 => $v78a27916b5) if ($pdc9023c8 && $v78a27916b5) { $v78a27916b5 = is_array($v78a27916b5) ? $v78a27916b5 : array($v78a27916b5); $pe8a632ce = array(); foreach ($v78a27916b5 as $v319ead06ec) if ($v319ead06ec) { $v36ba4c7257 = is_dir(dirname($v319ead06ec)); if ($v36ba4c7257 && !file_exists($v319ead06ec)) $pe8a632ce[] = $v319ead06ec; } if (!empty($pe8a632ce)) { $v6f3a2700dd = "$v4fe35d59c6/$pdc9023c8"; $pa6c76fab = MyCurl::downloadFile($v6f3a2700dd, $v9a84a79e2e); if ($v9a84a79e2e) $pd85a376c[] = $v9a84a79e2e; if ($pa6c76fab && stripos($pa6c76fab["type"], "zip") !== false) { foreach ($pe8a632ce as $v2a6c310d54) if (!ZipHandler::unzip($pa6c76fab["tmp_name"], $v2a6c310d54)) $v8a29987473[] = "Could not install $pdc9023c8 in $v2a6c310d54.<br/>"; } else $v8a29987473[] = "Could not download $v6f3a2700dd or invalid zip file.<br/>"; } } if ($pd85a376c) foreach ($pd85a376c as $v9a84a79e2e) fclose($v9a84a79e2e); } else if ($v4fe35d59c6) $v8a29987473[] = "No repo url defined!"; else if ($v0f854a7818) $v8a29987473[] = "No zips name defined!"; if ($v8a29987473) { $pef612b9d = ($pef612b9d ? $pef612b9d : "") . implode("<br/>", $v8a29987473); return false; } return true; } public static function getDependencyZipFilesToInstall() { return array( "phpjavascriptpacker.zip" => LIB_PATH . "vendor/phpjavascriptpacker", "phpmailer.zip" => LIB_PATH . "vendor/phpmailer", "xsssanitizer.zip" => LIB_PATH . "vendor/xsssanitizer", "ckeditor.zip" => array(SYSTEM_LAYER_PATH . "presentation/common/webroot/vendor/ckeditor", LAYER_PATH . "presentation/common/webroot/vendor/ckeditor", LAYER_PATH . "pres/common/webroot/vendor/ckeditor"), "tinymce.zip" => array(SYSTEM_LAYER_PATH . "presentation/common/webroot/vendor/tinymce", LAYER_PATH . "presentation/common/webroot/vendor/tinymce", LAYER_PATH . "pres/common/webroot/vendor/tinymce"), ); } public static function getFilesToValidate() { return array( TMP_PATH, VENDOR_PATH, DAO_PATH, CODE_WORKFLOW_EDITOR_PATH, CODE_WORKFLOW_EDITOR_TASK_PATH, LAYOUT_UI_EDITOR_PATH, LAYOUT_UI_EDITOR_WIDGET_PATH, TEST_UNIT_PATH, OTHER_PATH . "authdb/", OTHER_PATH . "authdb/permission.tbl", OTHER_PATH . "authdb/user.tbl", OTHER_PATH . "authdb/user_type.tbl", OTHER_PATH . "authdb/user_type_permission.tbl", OTHER_PATH . "authdb/user_stats.tbl", OTHER_PATH . "authdb/user_user_type.tbl", OTHER_PATH . "authdb/login_control.tbl", OTHER_PATH . "authdb/layout_type.tbl", OTHER_PATH . "authdb/layout_type_permission.tbl", OTHER_PATH . "authdb/module_db_table_name.tbl", OTHER_PATH . "authdb/object_type.tbl", OTHER_PATH . "authdb/reserved_db_table_name.tbl", OTHER_PATH . "workflow/", CONFIG_PATH, LAYER_PATH, LIB_PATH . "vendor/", SYSTEM_CONFIG_PATH . "global_variables.php", SYSTEM_LAYER_PATH . "presentation/phpframework/src/config/authentication.php", SYSTEM_LAYER_PATH . "presentation/phpframework/webroot/vendor/", SYSTEM_LAYER_PATH . "presentation/phpframework/webroot/__system/", SYSTEM_LAYER_PATH . "presentation/test/webroot/__system/", SYSTEM_LAYER_PATH . "presentation/common/webroot/__system/", SYSTEM_LAYER_PATH . "presentation/common/src/module/", SYSTEM_LAYER_PATH . "presentation/common/webroot/module/", SYSTEM_LAYER_PATH . "presentation/common/webroot/vendor/", ); } public static function getOptionalFilesToValidate() { return array( OTHER_PATH . "authdb/layout_type.tbl", OTHER_PATH . "authdb/layout_type_permission.tbl", SYSTEM_LAYER_PATH . "presentation/test/webroot/__system/", SYSTEM_LAYER_PATH . "presentation/common/webroot/__system/", ); } } ?>
