<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
include_once get_lib("org.phpframework.util.web.MyCurl"); include_once get_lib("org.phpframework.compression.ZipHandler"); class DependenciesInstallationHandler { public static function installDependencies($v4fe35d59c6, $v0f854a7818, &$pef612b9d = null) { $v8a29987473 = array(); if ($v4fe35d59c6 && $v0f854a7818) { $v0f854a7818 = is_array($v0f854a7818) ? $v0f854a7818 : array($v0f854a7818); $pd85a376c = array(); foreach ($v0f854a7818 as $pdc9023c8 => $v78a27916b5) if ($pdc9023c8 && $v78a27916b5) { $v78a27916b5 = is_array($v78a27916b5) ? $v78a27916b5 : array($v78a27916b5); $pe8a632ce = array(); foreach ($v78a27916b5 as $v319ead06ec) if ($v319ead06ec) { $v36ba4c7257 = is_dir(dirname($v319ead06ec)); if ($v36ba4c7257 && !file_exists($v319ead06ec)) $pe8a632ce[] = $v319ead06ec; } if (!empty($pe8a632ce)) { $v6f3a2700dd = "$v4fe35d59c6/$pdc9023c8"; $pa6c76fab = MyCurl::downloadFile($v6f3a2700dd, $v9a84a79e2e); if ($v9a84a79e2e) $pd85a376c[] = $v9a84a79e2e; if ($pa6c76fab && stripos($pa6c76fab["type"], "zip") !== false) { foreach ($pe8a632ce as $v2a6c310d54) if (!ZipHandler::unzip($pa6c76fab["tmp_name"], $v2a6c310d54)) $v8a29987473[] = "Could not install $pdc9023c8 in $v2a6c310d54.<br/>"; } else $v8a29987473[] = "Could not download $v6f3a2700dd or invalid zip file.<br/>"; } } if ($pd85a376c) foreach ($pd85a376c as $v9a84a79e2e) fclose($v9a84a79e2e); } else if ($v4fe35d59c6) $v8a29987473[] = "No repo url defined!"; else if ($v0f854a7818) $v8a29987473[] = "No zips name defined!"; if ($v8a29987473) { $pef612b9d = ($pef612b9d ? $pef612b9d : "") . implode("<br/>", $v8a29987473); return false; } return true; } public static function getDependencyZipFilesToInstall() { return array( "phpjavascriptpacker.zip" => LIB_PATH . "vendor/phpjavascriptpacker", "phpmailer.zip" => LIB_PATH . "vendor/phpmailer", "xsssanitizer.zip" => LIB_PATH . "vendor/xsssanitizer", "ckeditor.zip" => array(SYSTEM_LAYER_PATH . "presentation/common/webroot/vendor/ckeditor", LAYER_PATH . "presentation/common/webroot/vendor/ckeditor"), "tinymce.zip" => array(SYSTEM_LAYER_PATH . "presentation/common/webroot/vendor/tinymce", LAYER_PATH . "presentation/common/webroot/vendor/tinymce"), ); } public static function getFilesToValidate() { return array( TMP_PATH, VENDOR_PATH, DAO_PATH, CODE_WORKFLOW_EDITOR_PATH, CODE_WORKFLOW_EDITOR_TASK_PATH, LAYOUT_UI_EDITOR_PATH, LAYOUT_UI_EDITOR_WIDGET_PATH, TEST_UNIT_PATH, OTHER_PATH . "authdb/", OTHER_PATH . "authdb/permission.tbl", OTHER_PATH . "authdb/user.tbl", OTHER_PATH . "authdb/user_type.tbl", OTHER_PATH . "authdb/user_type_permission.tbl", OTHER_PATH . "authdb/user_stats.tbl", OTHER_PATH . "authdb/user_user_type.tbl", OTHER_PATH . "authdb/login_control.tbl", OTHER_PATH . "authdb/layout_type.tbl", OTHER_PATH . "authdb/layout_type_permission.tbl", OTHER_PATH . "authdb/module_db_table_name.tbl", OTHER_PATH . "authdb/object_type.tbl", OTHER_PATH . "authdb/reserved_db_table_name.tbl", OTHER_PATH . "workflow/", CONFIG_PATH, LAYER_PATH, LIB_PATH . "vendor/", SYSTEM_CONFIG_PATH . "global_variables.php", SYSTEM_LAYER_PATH . "presentation/phpframework/src/config/authentication.php", SYSTEM_LAYER_PATH . "presentation/phpframework/webroot/vendor/", SYSTEM_LAYER_PATH . "presentation/phpframework/webroot/__system/", SYSTEM_LAYER_PATH . "presentation/test/webroot/__system/", SYSTEM_LAYER_PATH . "presentation/common/webroot/__system/", SYSTEM_LAYER_PATH . "presentation/common/src/module/", SYSTEM_LAYER_PATH . "presentation/common/webroot/module/", SYSTEM_LAYER_PATH . "presentation/common/webroot/vendor/", ); } public static function getOptionalFilesToValidate() { return array( OTHER_PATH . "authdb/layout_type.tbl", OTHER_PATH . "authdb/layout_type_permission.tbl", SYSTEM_LAYER_PATH . "presentation/test/webroot/__system/", SYSTEM_LAYER_PATH . "presentation/common/webroot/__system/", ); } } ?>
