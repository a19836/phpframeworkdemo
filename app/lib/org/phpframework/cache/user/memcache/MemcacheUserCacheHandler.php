<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.cache.user.UserCacheHandler"); include_once get_lib("org.phpframework.memcache.IMemcacheHandler"); class MemcacheUserCacheHandler extends UserCacheHandler { private $v6fa83921b8; public function setMemcacheHandler(IMemcacheHandler $v6fa83921b8) {$this->v6fa83921b8 = $v6fa83921b8;} public function getMemcacheHandler() {return $this->v6fa83921b8;} public function read($v250a1176c9) { if (!empty($this->v6fa83921b8)) { $pbfa01ed1 = CacheHandlerUtil::getFilePathKey($this->root_path . $v250a1176c9); $v57b4b0200b = $this->v6fa83921b8->get($pbfa01ed1); return !empty($v57b4b0200b) ? $this->unserializeContent($v57b4b0200b) : $v57b4b0200b; } return false; } public function write($v250a1176c9, $v539082ff30) { if (!empty($this->v6fa83921b8) && isset($v539082ff30)) { $pbfa01ed1 = CacheHandlerUtil::getFilePathKey($this->root_path . $v250a1176c9); $v57b4b0200b = !empty($v539082ff30) ? $this->serializeContent($v539082ff30) : $v539082ff30; $v492fce9a5d = $this->ttl ? $this->ttl + time() : 0; return $this->v6fa83921b8->set($pbfa01ed1, $v57b4b0200b, $v492fce9a5d); } return false; } public function isValid($v250a1176c9) { if (!empty($this->v6fa83921b8)) { $pbfa01ed1 = CacheHandlerUtil::getFilePathKey($this->root_path . $v250a1176c9); $v539082ff30 = $this->v6fa83921b8->get($pbfa01ed1); return $v539082ff30 !== false; } return false; } public function exists($v250a1176c9) { if (!empty($this->v6fa83921b8)) { $pbfa01ed1 = CacheHandlerUtil::getFilePathKey($this->root_path . $v250a1176c9); $v539082ff30 = $this->v6fa83921b8->get($pbfa01ed1); return $v539082ff30 !== false; } return false; } public function delete($v250a1176c9) { if (!empty($this->v6fa83921b8)) { $pbfa01ed1 = CacheHandlerUtil::getFilePathKey($this->root_path . $v250a1176c9); return $this->v6fa83921b8->delete($pbfa01ed1) !== false; } return false; } } ?>
