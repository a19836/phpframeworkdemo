<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.cache.user.UserCacheHandler"); class FileSystemUserCacheHandler extends UserCacheHandler { public function read($v250a1176c9) { if($this->isValid($v250a1176c9)) { $pf3dc0762 = $this->root_path . $v250a1176c9; $this->prepareFilePath($pf3dc0762); $v57b4b0200b = @file_get_contents($pf3dc0762); return !empty($v57b4b0200b) ? $this->unserializeContent($v57b4b0200b) : $v57b4b0200b; } return false; } public function write($v250a1176c9, $v539082ff30) { $pf3dc0762 = $this->root_path . $v250a1176c9; $this->prepareFilePath($pf3dc0762); if($v250a1176c9 && CacheHandlerUtil::preparePath(dirname($pf3dc0762)) && isset($v539082ff30)) { $v57b4b0200b = $this->serializeContent($v539082ff30); return file_put_contents($pf3dc0762, $v57b4b0200b) !== false; } return false; } public function isValid($v250a1176c9) { $pf3dc0762 = $this->root_path . $v250a1176c9; $this->prepareFilePath($pf3dc0762); if($this->root_path && $v250a1176c9 && file_exists($pf3dc0762)) return filemtime($pf3dc0762) + $this->ttl < time() ? false : true; return false; } public function exists($v250a1176c9) { $pf3dc0762 = $this->root_path . $v250a1176c9; $this->prepareFilePath($pf3dc0762); return $this->root_path && $v250a1176c9 && file_exists($pf3dc0762); } public function delete($v250a1176c9, $pf0d6eaba = null) { $pf3dc0762 = $this->root_path . $v250a1176c9; $this->prepareFilePath($pf3dc0762); if($this->root_path && $v250a1176c9) { $pf0d6eaba = CacheHandlerUtil::getCorrectKeyType($pf0d6eaba); if (!$pf0d6eaba && file_exists($pf3dc0762)) return unlink($pf3dc0762); else if ($pf0d6eaba) { $pdd397f0a = dirname($pf3dc0762); $v5c1c342594 = true; if (is_dir($pdd397f0a)) { $v6ee393d9fb = array_diff(scandir($pdd397f0a), array('..', '.')); if ($v6ee393d9fb) { $v508f94d3fe = basename($v250a1176c9); foreach ($v6ee393d9fb as $v7dffdb5a5b) { $pc8581934 = pathinfo($v7dffdb5a5b, PATHINFO_FILENAME); if (CacheHandlerUtil::checkIfKeyTypeMatchValue($pc8581934, $v508f94d3fe, $pf0d6eaba) && !unlink("$pdd397f0a/$v7dffdb5a5b")) $v5c1c342594 = false; } } } return $v5c1c342594; } } return false; } } ?>
