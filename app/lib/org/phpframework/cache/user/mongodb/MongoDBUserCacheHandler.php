<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.cache.user.UserCacheHandler"); include_once get_lib("org.phpframework.mongodb.IMongoDBHandler"); class MongoDBUserCacheHandler extends UserCacheHandler { private $pfeae7c9a; public function setMongoDBHandler(IMongoDBHandler $pfeae7c9a) {$this->pfeae7c9a = $pfeae7c9a;} public function getMongoDBHandler() {return $this->pfeae7c9a;} public function read($v250a1176c9) { if (!empty($this->pfeae7c9a)) { $ped24d60a = $this->getCollectionName(); $pbfa01ed1 = $this->getFileKey($v250a1176c9); $v539082ff30 = $this->pfeae7c9a->get($ped24d60a, $pbfa01ed1); if (empty($v539082ff30["expire"]) || $v539082ff30["expire"] >= time()) { $v57b4b0200b = $v539082ff30["content"]; return !empty($v57b4b0200b) ? $this->unserializeContent($v57b4b0200b) : $v57b4b0200b; } } return false; } public function write($v250a1176c9, $v539082ff30) { if (!empty($this->pfeae7c9a) && isset($v539082ff30)) { $ped24d60a = $this->getCollectionName(); $pbfa01ed1 = $this->getFileKey($v250a1176c9); $v57b4b0200b = !empty($v539082ff30) ? $this->serializeContent($v539082ff30) : $v539082ff30; return $this->pfeae7c9a->set($ped24d60a, $pbfa01ed1, array( "content" => $v57b4b0200b, "expire" => $this->ttl ? $this->ttl + time() : 0; )); } return false; } public function isValid($v250a1176c9) { if (!empty($this->pfeae7c9a)) { $ped24d60a = $this->getCollectionName(); $pbfa01ed1 = $this->getFileKey($v250a1176c9); $v539082ff30 = $this->pfeae7c9a->get($ped24d60a, $pbfa01ed1); return empty($v539082ff30["expire"]) || $v539082ff30["expire"] >= time(); } return false; } public function exists($v250a1176c9) { if (!empty($this->pfeae7c9a)) { $ped24d60a = $this->getCollectionName(); $pbfa01ed1 = $this->getFileKey($v250a1176c9); $v539082ff30 = $this->pfeae7c9a->get($ped24d60a, $pbfa01ed1); return isset( $v539082ff30 ); } return false; } public function delete($v250a1176c9) { if (!empty($this->pfeae7c9a)) { $ped24d60a = $this->getCollectionName(); $pbfa01ed1 = $this->getFileKey($v250a1176c9); return $this->pfeae7c9a->delete($ped24d60a, $pbfa01ed1) !== false; } return false; } protected function getCollectionName() { return CacheHandlerUtil::getFilePathKey($this->root_path); } protected function getFileKey($v250a1176c9) { return CacheHandlerUtil::getFilePathKey($v250a1176c9); } } ?>
