<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
include_once get_lib("org.phpframework.cache.service.ServiceCacheHandler"); include_once get_lib("org.phpframework.cache.service.memcache.MemcacheServiceCacheRelatedServicesHandler"); include_once get_lib("org.phpframework.memcache.IMemcacheHandler"); class MemcacheServiceCacheHandler extends ServiceCacheHandler { private $v65c3680fbf; private $v6fa83921b8; public function __construct() { $this->v65c3680fbf = new MemcacheServiceCacheRelatedServicesHandler($this); } public function setMemcacheHandler(IMemcacheHandler $v6fa83921b8) {$this->v6fa83921b8 = $v6fa83921b8;} public function getMemcacheHandler() {return $this->v6fa83921b8;} public function create($pdcf670f6, $pbfa01ed1, $v9ad1385268, $v3fb9f41470 = false) { $v5c1c342594 = false; if($pbfa01ed1 && !empty($this->v6fa83921b8)) { $pf3dc0762 = $pbfa01ed1; $v4a2fedb8f0 = $this->getFileNS($pdcf670f6, $v3fb9f41470); $v57b4b0200b = $this->prepareContentToInsert($v9ad1385268, $v3fb9f41470); $v539082ff30 = serialize(array( "content" => $v57b4b0200b, "created_date" => time(), )); $v5c1c342594 = $this->v6fa83921b8->nsSet($v4a2fedb8f0, $pf3dc0762, $v57b4b0200b); } return $v5c1c342594; } public function addServiceToRelatedKeysToDelete($pdcf670f6, $pbfa01ed1, $pe7235a8d, $v3fb9f41470 = false) { if($pbfa01ed1) { $this->v65c3680fbf->addServiceKeyToDelete($pdcf670f6, $pbfa01ed1, $v3fb9f41470); return $this->v65c3680fbf->addServiceToRelatedKeysToDelete($pdcf670f6, $pbfa01ed1, $pe7235a8d, $v3fb9f41470); } return false; } public function checkServiceToRelatedKeysToDelete($pdcf670f6, $pbfa01ed1, $pe7235a8d, $v3fb9f41470 = false) { return $this->addServiceToRelatedKeysToDelete($pdcf670f6, $pbfa01ed1, $pe7235a8d, $v3fb9f41470); } public function deleteAll($pdcf670f6, $v3fb9f41470 = false) { if (!empty($this->v6fa83921b8)) { $v4a2fedb8f0 = $this->getFileNS($pdcf670f6, $v3fb9f41470); return $this->v6fa83921b8->nsFlush($v4a2fedb8f0); } return false; } public function delete($pdcf670f6, $pbfa01ed1, $v30857f7eca = array()) { if (!empty($this->v6fa83921b8)) { $v3fb9f41470 = isset($v30857f7eca["cache_type"]) ? $v30857f7eca["cache_type"] : null; $v1491940c54 = isset($v30857f7eca["key_type"]) ? $v30857f7eca["key_type"] : null; $v91d4d88b89 = isset($v30857f7eca["original_key"]) ? $v30857f7eca["original_key"] : null; $v4a58b2e287 = isset($v30857f7eca["delete_mode"]) ? $v30857f7eca["delete_mode"] : null; if($v4a58b2e287 == 2) { return $this->v65c3680fbf->deleteBySearchingInAllTheCreatedCachedItems($pdcf670f6, $pbfa01ed1, $v3fb9f41470, $v1491940c54); } elseif($v4a58b2e287 == 3) { return $this->v65c3680fbf->delete($pdcf670f6, $pbfa01ed1, $v3fb9f41470, $v1491940c54, $v91d4d88b89); } else { $pf3dc0762 = $pbfa01ed1; $v4a2fedb8f0 = $this->getFileNS($pdcf670f6, $v3fb9f41470); return $this->v6fa83921b8->nsDelete($v4a2fedb8f0, $pf3dc0762); } } return false; } public function get($pdcf670f6, $pbfa01ed1, $v3fb9f41470 = false) { if($pbfa01ed1 && !empty($this->v6fa83921b8)) { $pf3dc0762 = $pbfa01ed1; $v4a2fedb8f0 = $this->getFileNS($pdcf670f6, $v3fb9f41470); $v539082ff30 = $this->v6fa83921b8->nsGet($v4a2fedb8f0, $pf3dc0762); $v539082ff30 = !empty($v539082ff30) ? unserialize($v539082ff30) : false; $pae77d38c = isset($v539082ff30["content"]) ? $v539082ff30["content"] : false; if($pae77d38c) { return $this->prepareContentFromGet($pae77d38c, $v3fb9f41470); } } return false; } public function isValid($pdcf670f6, $pbfa01ed1, $v492fce9a5d = false, $v3fb9f41470 = false) { if($pbfa01ed1 && !empty($this->v6fa83921b8)) { if(!$v492fce9a5d) { $v492fce9a5d = $this->default_ttl; } if(is_numeric($v492fce9a5d) && $v492fce9a5d > 0) { $pf3dc0762 = $pbfa01ed1; $v4a2fedb8f0 = $this->getFileNS($pdcf670f6, $v3fb9f41470); $v539082ff30 = $this->v6fa83921b8->nsGet($v4a2fedb8f0, $pf3dc0762); $v539082ff30 = !empty($v539082ff30) ? unserialize($v539082ff30) : false; if (isset($v539082ff30["created_date"])) return empty($v539082ff30["created_date"]) || $v539082ff30["created_date"] + $v492fce9a5d >= time(); } } return false; } public function getFileNS($pdcf670f6, $v3fb9f41470) { $v17be587282 = $this->getServiceDirPath($pdcf670f6, $v3fb9f41470); return CacheHandlerUtil::getFilePathKey($v17be587282); } } ?>
