<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.cache.CacheHandlerUtil"); class FileSystemServiceCacheFolderHandler { const FOLDER_CONTROLLER_FILE_NAME = ".folder_settings"; const FOLDER_SIZE_FILE_NAME = ".folder_size"; const MAXIMUM_FOLDER_FILES_NUMBER_ALLOWED = 30000; private $pfcc61b33; private $pf195ff39; private $pf81bcf6b; public function __construct($pf81bcf6b, $pf195ff39 = false, $pfcc61b33 = false) { $this->pf195ff39 = $pf195ff39; $this->pfcc61b33 = $pfcc61b33; $this->pf81bcf6b = $pf81bcf6b; } public function updateFilesTotal($v17be587282, $v2d22d85b1f = 1) { if($this->pfcc61b33) { $v7f7c221822 = $this->getFolderSettings($v17be587282); $v2d22d85b1f = $v7f7c221822["total"] + $v2d22d85b1f; $v7f7c221822["total"] = $v2d22d85b1f > 0 ? $v2d22d85b1f : 0; if(!$v7f7c221822["type"]) { $v7f7c221822["type"] = "file"; } return $this->setFolderSettings($v17be587282, $v7f7c221822); } return true; } public function deleteFolder($v17be587282) { if($this->pf81bcf6b->exists($v17be587282)) { return CacheHandlerUtil::deleteFolder($v17be587282); } return true; } public function getFolderPath($v17be587282, $pc438b2f4 = false) { $peb452d1a = false; CacheHandlerUtil::configureFolderPath($v17be587282); if($this->pfcc61b33 || $pc438b2f4) { $v7f7c221822 = $this->getFolderSettings($v17be587282); if($v7f7c221822["type"] != "folder" && $v7f7c221822["total"] < self::MAXIMUM_FOLDER_FILES_NUMBER_ALLOWED) { $peb452d1a = $v17be587282; } else { $v943d04e731 = $this->getFolders($v17be587282); for($v43dd7d0051 = count($v943d04e731) - 1; $v43dd7d0051 >= 0; --$v43dd7d0051) { $v25dfe304be = $v943d04e731[$v43dd7d0051]; $pdd397f0a = $v17be587282 . $v25dfe304be . "/"; $pa2f2cf20 = $this->getFolderSettings($pdd397f0a); if($pa2f2cf20["type"] != "folder" && $pa2f2cf20["total"] < self::MAXIMUM_FOLDER_FILES_NUMBER_ALLOWED) { $peb452d1a = $pdd397f0a; break; } } if(!$peb452d1a) { $this->checkFolderFiles($v17be587282); $peb452d1a = $this->getNewFolderPath($v17be587282); } } } else { $peb452d1a = $v17be587282; } return $peb452d1a && CacheHandlerUtil::preparePath($peb452d1a) ? $peb452d1a : false; } public function checkFolderFiles($v17be587282, $v7f7c221822 = false) { if(!$v7f7c221822) { $v7f7c221822 = $this->getFolderSettings($v17be587282); } if($v7f7c221822["total"] >= self::MAXIMUM_FOLDER_FILES_NUMBER_ALLOWED) { $v9280d62b92 = $this->getNewFolderPath($v17be587282, $v7f7c221822); if($v9280d62b92) { CacheHandlerUtil::configureFolderPath($v17be587282); $v7f7c221822 = $this->getFolderSettings($v17be587282); $v16ac35fd79 = $v7f7c221822["total"]; $pd404bbb3 = $this->getFolderSettings($v9280d62b92); $v62c0af634f = basename($v9280d62b92); $v7950f6a5a6 = 0; $v6ee393d9fb = $this->getFiles($v17be587282); $pc37695cb = count($v6ee393d9fb); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v7dffdb5a5b = $v6ee393d9fb[$v43dd7d0051]; if($v62c0af634f != $v7dffdb5a5b && $v7dffdb5a5b != self::FOLDER_CONTROLLER_FILE_NAME && $v7dffdb5a5b != self::FOLDER_SIZE_FILE_NAME) { $pf3dc0762 = $v17be587282 . $v7dffdb5a5b; $v3f7a88fc27 = $v9280d62b92 . $v7dffdb5a5b; if($this->pf81bcf6b->exists($pf3dc0762)) { if(is_dir($pf3dc0762)) { if(rename($pf3dc0762, $v3f7a88fc27)) { --$v16ac35fd79; ++$v7950f6a5a6; } } else { if(copy($pf3dc0762, $v3f7a88fc27)) { if(unlink($pf3dc0762)) { --$v16ac35fd79; } ++$v7950f6a5a6; } } } } } if($this->pf195ff39) { if($this->pf81bcf6b->exists($v17be587282 . self::FOLDER_SIZE_FILE_NAME) && $this->pf81bcf6b->exists($v9280d62b92)) { copy($v17be587282 . self::FOLDER_SIZE_FILE_NAME, $v9280d62b92 . self::FOLDER_SIZE_FILE_NAME); } } $pd404bbb3["type"] = $v7f7c221822["type"]; $pd404bbb3["total"] = $v7950f6a5a6; $this->setFolderSettings($v9280d62b92, $pd404bbb3); $v7f7c221822["type"] = "folder"; $v7f7c221822["total"] = $v16ac35fd79 > 0 ? $v16ac35fd79 : 1; $this->setFolderSettings($v17be587282, $v7f7c221822); } } return true; } public function getNewFolderPath($v17be587282, $v7f7c221822 = false) { CacheHandlerUtil::configureFolderPath($v17be587282); if(!$v7f7c221822) { $v7f7c221822 = $this->getFolderSettings($v17be587282); } do { $v9280d62b92 = $v17be587282 . uniqid() . "/"; $v7959970a41 = $this->pf81bcf6b->exists($v9280d62b92); }while($v7959970a41); if(CacheHandlerUtil::preparePath($v9280d62b92)) { ++$v7f7c221822["total"]; $this->setFolderSettings($v17be587282, $v7f7c221822); $pd404bbb3 = array(); $pd404bbb3["total"] = 0; $pd404bbb3["type"] = "file"; $this->setFolderSettings($v9280d62b92, $pd404bbb3); return $v9280d62b92; } return false; } public function getFolderSize($v17be587282) { if($this->pf195ff39) { CacheHandlerUtil::configureFolderPath($v17be587282); $v4508c71c8a = $v17be587282 . self::FOLDER_SIZE_FILE_NAME; if($this->pf81bcf6b->exists($v4508c71c8a)) { $v57b4b0200b = trim($this->pf81bcf6b->get($v4508c71c8a)); return is_numeric($v57b4b0200b) ? $v57b4b0200b : 0; } } return 0; } public function setFolderSize($v4ab372da3a, $v17be587282, $v648f89f08c) { if($this->pf195ff39 && is_numeric($v648f89f08c) && $v648f89f08c != 0) { CacheHandlerUtil::configureFolderPath($v4ab372da3a); CacheHandlerUtil::configureFolderPath($v17be587282); $v5c1c342594 = true; do { if(!$this->pf81bcf6b->exists($v17be587282)) break; $v96bc1e0fca = $this->getFolderSize($v17be587282); $v882237b399 = $v96bc1e0fca + $v648f89f08c; $v882237b399 = $v882237b399 >= 0 ? $v882237b399 : 0; if(!$this->pf81bcf6b->write($v17be587282 . self::FOLDER_SIZE_FILE_NAME, $v882237b399)) $v5c1c342594 = false; if($v17be587282 == $v4ab372da3a) break; $v17be587282 = dirname($v17be587282) . "/"; } while($v17be587282 && $v17be587282 != "/" && $v17be587282 != "." && $v17be587282 != ".."); return $v5c1c342594; } return true; } public function getFolderSettings($v17be587282) { CacheHandlerUtil::configureFolderPath($v17be587282); $pd3b1c547 = $v17be587282 . self::FOLDER_CONTROLLER_FILE_NAME; if($this->pf81bcf6b->exists($pd3b1c547)) { $v57b4b0200b = $this->pf81bcf6b->get($pd3b1c547); $v7f7c221822 = $v57b4b0200b ? unserialize($v57b4b0200b) : array(); } return is_array($v7f7c221822) ? $v7f7c221822 : array(); } public function setFolderSettings($v17be587282, $v7f7c221822 = array()) { CacheHandlerUtil::configureFolderPath($v17be587282); $v57b4b0200b = serialize($v7f7c221822); return $this->pf81bcf6b->write($v17be587282 . self::FOLDER_CONTROLLER_FILE_NAME, $v57b4b0200b); } public function getFiles($v17be587282) { $v6ee393d9fb = array(); if($v17be587282 && is_dir($v17be587282) && ($v89d33f4133 = opendir($v17be587282)) ) { while(($v7dffdb5a5b = readdir($v89d33f4133)) !== false) { if($v7dffdb5a5b != "." && $v7dffdb5a5b != "..") { $v6ee393d9fb[] = $v7dffdb5a5b; } } closedir($v89d33f4133); } return $v6ee393d9fb; } public function getFolders($v17be587282) { $v943d04e731 = array(); if($v17be587282 && is_dir($v17be587282) && ($v89d33f4133 = opendir($v17be587282)) ) { while(($v7dffdb5a5b = readdir($v89d33f4133)) !== false) { if($v7dffdb5a5b != "." && $v7dffdb5a5b != ".." && is_dir($v17be587282 . $v7dffdb5a5b)) { $v943d04e731[] = $v7dffdb5a5b; } } closedir($v89d33f4133); } return $v943d04e731; } public function setMaximumSize($pf195ff39) {$this->pf195ff39 = $pf195ff39;} public function getMaximumSize() {return $this->pf195ff39;} public function getCacheFileHandler() {return $this->pf81bcf6b;} } ?>
