<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
class TableDiagramException extends Exception { public $problem; public function __construct($v6de691233b, $v67db1bd535 = array()) { $v9363d877fd = $pd0c2934c = null; if (is_array($v67db1bd535)) { $v9363d877fd = isset($v67db1bd535[0]) ? $v67db1bd535[0] : null; $pd0c2934c = isset($v67db1bd535[1]) ? $v67db1bd535[1] : null; } switch($v6de691233b) { case 1: $this->problem = "Invalid table name!"; break; case 2: $this->problem = "Invalid attribute name for table '" . $v9363d877fd . "'. Attribute: " . print_r($pd0c2934c, true); break; case 3: $this->problem = "Invalid attribute type for table '" . $v9363d877fd . "'. Attribute: " . print_r($pd0c2934c, true); break; case 4: $this->problem = "Invalid unique key name for table '" . $v9363d877fd . "'. Attribute: " . print_r($pd0c2934c, true); break; case 5: $this->problem = "Invalid uniquekey type for table '" . $v9363d877fd . "'. Attribute: " . print_r($pd0c2934c, true); break; case 6: $this->problem = "Invalid foreign key attribute for table '" . $v9363d877fd . "'. Attribute: " . print_r($pd0c2934c, true); break; case 7: $this->problem = "Invalid foreign key reference table for table '" . $v9363d877fd . "'. Attribute: " . print_r($pd0c2934c, true); break; case 8: $this->problem = "Invalid foreign key reference attribute for table '" . $v9363d877fd . "'. Attribute: " . print_r($pd0c2934c, true); break; case 9: $this->problem = "Invalid index key name for table '" . $v9363d877fd . "'. Attribute: " . print_r($pd0c2934c, true); break; case 10: $this->problem = "Invalid index key type for table '" . $v9363d877fd . "'. Attribute: " . print_r($pd0c2934c, true); break; case 11: $this->problem = "Invalid TableDiagram. " . print_r($v67db1bd535, true); break; } } } ?>
