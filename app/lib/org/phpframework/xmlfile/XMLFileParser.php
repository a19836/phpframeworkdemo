<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
include_once get_lib("org.phpframework.phpscript.PHPScriptHandler"); include_once get_lib("org.phpframework.util.MyArray"); include_once get_lib("org.phpframework.util.xml.MyXML"); include_once get_lib("org.phpframework.util.xml.MyXMLArray"); include_once get_lib("org.phpframework.util.xml.MyXSD"); include_once get_lib("org.phpframework.xmlfile.exception.XMLFileParserException"); class XMLFileParser { public static function parseXMLFileToArray($pf3dc0762, $pc5a892eb = false, $v538cb1a1f7 = false, $pbd14d28d = true) { $pae77d38c = file_get_contents($pf3dc0762); return self::parseXMLContentToArray($pae77d38c, $pc5a892eb, $pf3dc0762, $v538cb1a1f7, $pbd14d28d); } public static function parseXMLContentToArray($pae77d38c, $pc5a892eb = false, $pf3dc0762 = false, $v538cb1a1f7 = false, $pbd14d28d = true) { if ($pae77d38c) { $pfb662071 = self::mc8973de467b0($pae77d38c, $pc5a892eb, $pf3dc0762, $pbd14d28d); if($v538cb1a1f7) { $pa694ba99 = new MyXMLArray($pfb662071); $pae77d38c = $pa694ba99->toXML(); $v5c1c342594 = MyXSD::validate($pae77d38c, $v538cb1a1f7); if($v5c1c342594 !== true) launch_exception(new MyXSDException(1, array($v5c1c342594, $v538cb1a1f7, $pf3dc0762))); } return $pfb662071; } } private static function mc8973de467b0($pae77d38c, $pc5a892eb = false, $pf3dc0762 = false, $pbd14d28d = true, $v2d235c6a6a = false) { $pae77d38c = $pbd14d28d ? PHPScriptHandler::parseContent($pae77d38c, $pc5a892eb) : $pae77d38c; $v6dcd71ad57 = new MyXML($pae77d38c); $pfb662071 = $v6dcd71ad57->toArray(array("simple" => false, "lower_case_keys" => true, "xml_order_id_prefix" => $v2d235c6a6a)); $pa266c7f5 = is_array($pfb662071) ? array_keys($pfb662071) : array(); $pa266c7f5 = isset($pa266c7f5[0]) ? $pa266c7f5[0] : null; $pcdca0571 = $pa266c7f5 && isset($pfb662071[$pa266c7f5][0]["childs"]) && is_array($pfb662071[$pa266c7f5][0]["childs"]) ? $pfb662071[$pa266c7f5][0]["childs"] : array(); $pcdca0571 = self::f120b344164($pcdca0571, $pc5a892eb, $pf3dc0762, $pbd14d28d); $pfb662071[$pa266c7f5][0]["childs"] = $pcdca0571; return $pfb662071; } private static function f120b344164($v50d32a6fc4, $pc5a892eb = false, $pf3dc0762 = false, $pbd14d28d = true) { $v280898d986 = false; $v9994512d98 = array_keys($v50d32a6fc4); $v16ac35fd79 = count($v9994512d98); for($v43dd7d0051 = 0; $v43dd7d0051 < $v16ac35fd79; $v43dd7d0051++) { $pbfa01ed1 = $v9994512d98[$v43dd7d0051]; $v6694236c2c = $v50d32a6fc4[$pbfa01ed1]; if(strtolower($pbfa01ed1) == "import") { $v280898d986 = $v6694236c2c; unset($v50d32a6fc4[$pbfa01ed1]); } else { $v141779ec29 = $v6694236c2c ? count($v6694236c2c) : 0; for($v9d27441e80 = 0; $v9d27441e80 < $v141779ec29; $v9d27441e80++) { if(isset($v6694236c2c[$v9d27441e80]["childs"])) { $v50d32a6fc4[$pbfa01ed1][$v9d27441e80]["childs"] = self::f120b344164($v6694236c2c[$v9d27441e80]["childs"], $pc5a892eb, $pf3dc0762, $pbd14d28d); } } } } if($v280898d986) { $v17be587282 = dirname($pf3dc0762). "/"; $pc37695cb = count($v280898d986); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v1cc55e8e6d = $v280898d986[$v43dd7d0051]; $v0e3f73e341 = trim(self::getValue($v1cc55e8e6d)); $v814c5bf9b2 = strtolower(self::getAttribute($v1cc55e8e6d, "relative")); if($v814c5bf9b2 && $v814c5bf9b2 != "false" && $v814c5bf9b2 != "0" && $v814c5bf9b2 != "null") { $v0e3f73e341 = $v17be587282 . $v0e3f73e341; } if($v0e3f73e341 && file_exists($v0e3f73e341)) { $pfb662071 = self::madd93af3ca4d($v0e3f73e341, $pc5a892eb, $pbd14d28d, $v1cc55e8e6d["xml_order_id"]); $pa266c7f5 = is_array($pfb662071) ? array_keys($pfb662071) : array(); $pa266c7f5 = isset($pa266c7f5[0]) ? $pa266c7f5[0] : null; if($pa266c7f5) { $v025e2d233d = isset($pfb662071[$pa266c7f5][0]["childs"]) ? $pfb662071[$pa266c7f5][0]["childs"] : null; if(is_array($v025e2d233d)) { foreach($v025e2d233d as $pbfa01ed1 => $v67db1bd535) { if(isset($v50d32a6fc4[$pbfa01ed1])) { $v50d32a6fc4[$pbfa01ed1] = array_merge($v50d32a6fc4[$pbfa01ed1], $v67db1bd535); } else { $v50d32a6fc4[$pbfa01ed1] = $v67db1bd535; } $pdab26aff = array(); $v141779ec29 = !empty($v50d32a6fc4[$pbfa01ed1]) ? count($v50d32a6fc4[$pbfa01ed1]) : 0; for($v9d27441e80 = 0; $v9d27441e80 < $v141779ec29; $v9d27441e80++) { $pdab26aff[$v9d27441e80] = isset($v50d32a6fc4[$pbfa01ed1][$v9d27441e80]["xml_order_id"]) ? $v50d32a6fc4[$pbfa01ed1][$v9d27441e80]["xml_order_id"] : null; } asort($pdab26aff); $v3aee36d7a3 = array(); foreach($pdab26aff as $v9d27441e80 => $v444066df26) { $v3aee36d7a3[] = $v50d32a6fc4[$pbfa01ed1][$v9d27441e80]; } $v50d32a6fc4[$pbfa01ed1] = $v3aee36d7a3; } } } } else { launch_exception(new XMLFileParserException(1, $v0e3f73e341)); } } foreach($v50d32a6fc4 as $pbfa01ed1 => $v67db1bd535) { if(strtolower($pbfa01ed1) == "import") { $v50d32a6fc4 = self::f120b344164($v50d32a6fc4, $pc5a892eb, $pf3dc0762, $pbd14d28d); } } } return $v50d32a6fc4; } private static function madd93af3ca4d($pf3dc0762, $pc5a892eb = false, $pbd14d28d = true, $v2d235c6a6a = false) { $pae77d38c = file_get_contents($pf3dc0762); return self::mc8973de467b0($pae77d38c, $pc5a892eb, $pf3dc0762, $pbd14d28d, $v2d235c6a6a); } public static function getAttributes($v6694236c2c, $peb8d0d4f) { $ped0a6251 = array(); $pc37695cb = $peb8d0d4f ? count($peb8d0d4f) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v1cfba8c105 = $peb8d0d4f[$v43dd7d0051]; $pa6209df1 = self::getAttribute($v6694236c2c, $v1cfba8c105); if(strlen($pa6209df1)) { $ped0a6251[$v1cfba8c105] = $pa6209df1; } } return $ped0a6251; } public static function getAttribute($v6694236c2c, $v1cfba8c105) { if(isset($v6694236c2c["@"][$v1cfba8c105]) && strlen($v6694236c2c["@"][$v1cfba8c105])) { return $v6694236c2c["@"][$v1cfba8c105]; } elseif(isset($v6694236c2c["childs"][$v1cfba8c105])) { if(isset($v6694236c2c["childs"][$v1cfba8c105][0]["@"]["value"]) && strlen($v6694236c2c["childs"][$v1cfba8c105][0]["@"]["value"])) { return $v6694236c2c["childs"][$v1cfba8c105][0]["@"]["value"]; } return isset($v6694236c2c["childs"][$v1cfba8c105][0]["value"]) ? $v6694236c2c["childs"][$v1cfba8c105][0]["value"] : null; } return null; } public static function getValue($v6694236c2c) { $v67db1bd535 = self::getAttribute($v6694236c2c, "value"); return trim( strlen($v67db1bd535) ? $v67db1bd535 : (isset($v6694236c2c["value"]) ? $v6694236c2c["value"] : null) ); } public static function combineMultipleNodesInASingleNode($v50d32a6fc4) { $v948cbcb5c1 = array(); $pc37695cb = $v50d32a6fc4 ? count($v50d32a6fc4) : 0; for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v6694236c2c = $v50d32a6fc4[$v43dd7d0051]; if ($v43dd7d0051 == 0) $v948cbcb5c1 = $v6694236c2c; else { if (!empty($v948cbcb5c1["@"]) && !empty($v6694236c2c["@"])) $v948cbcb5c1["@"] = array_merge($v948cbcb5c1["@"], $v6694236c2c["@"]); else if (!empty($v6694236c2c["@"])) $v948cbcb5c1["@"] = $v6694236c2c["@"]; if (isset($v6694236c2c["childs"]) && is_array($v6694236c2c["childs"])) { foreach ($v6694236c2c["childs"] as $pad000ab9 => $v7c627adb6d) { if (!empty($v948cbcb5c1["childs"][$pad000ab9])) $v948cbcb5c1["childs"][$pad000ab9] = array_merge($v948cbcb5c1["childs"][$pad000ab9], $v6694236c2c["childs"][$pad000ab9]); else $v948cbcb5c1["childs"][$pad000ab9] = $v7c627adb6d; } } } } return array($v948cbcb5c1); } } ?>
