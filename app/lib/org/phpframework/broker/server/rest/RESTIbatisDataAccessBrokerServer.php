<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
include_once get_lib("org.phpframework.broker.server.rest.RESTBrokerServer"); include_once get_lib("org.phpframework.broker.server.local.LocalIbatisDataAccessBrokerServer"); class RESTIbatisDataAccessBrokerServer extends RESTBrokerServer { protected function setLocalBrokerServer() { $this->LocalBrokerServer = new LocalIbatisDataAccessBrokerServer($this->Layer); } protected function executeWebServiceResponse() { $v9cd205cadb = explode("/", $this->url); $v1858bcdeb6 = $v9cd205cadb; $v95eeadc9e9 = array_pop($v9cd205cadb); $v3fb9f41470 = strtolower(array_pop($v9cd205cadb)); $pc8b88eb4 = implode("/", $v9cd205cadb); $pcdc618d5 = true; switch($v3fb9f41470) { case "select": $v9ad1385268 = $this->LocalBrokerServer->callSelect($pc8b88eb4, $v95eeadc9e9, $this->parameters, $this->options); break; case "select-sql": $v9ad1385268 = $this->LocalBrokerServer->callSelectSQL($pc8b88eb4, $v95eeadc9e9, $this->parameters, $this->options); break; case "insert": $v9ad1385268 = $this->LocalBrokerServer->callInsert($pc8b88eb4, $v95eeadc9e9, $this->parameters, $this->options); break; case "insert-sql": $v9ad1385268 = $this->LocalBrokerServer->callInsertSQL($pc8b88eb4, $v95eeadc9e9, $this->parameters, $this->options); break; case "update": $v9ad1385268 = $this->LocalBrokerServer->callUpdate($pc8b88eb4, $v95eeadc9e9, $this->parameters, $this->options); break; case "update-sql": $v9ad1385268 = $this->LocalBrokerServer->callUpdateSQL($pc8b88eb4, $v95eeadc9e9, $this->parameters, $this->options); break; case "delete": $v9ad1385268 = $this->LocalBrokerServer->callDelete($pc8b88eb4, $v95eeadc9e9, $this->parameters, $this->options); break; case "delete-sql": $v9ad1385268 = $this->LocalBrokerServer->callDeleteSQL($pc8b88eb4, $v95eeadc9e9, $this->parameters, $this->options); break; case "procedure": $v9ad1385268 = $this->LocalBrokerServer->callProcedure($pc8b88eb4, $v95eeadc9e9, $this->parameters, $this->options); break; case "procedure-sql": $v9ad1385268 = $this->LocalBrokerServer->callProcedureSQL($pc8b88eb4, $v95eeadc9e9, $this->parameters, $this->options); break; default: $v41abe84754 = isset($v1858bcdeb6[0]) ? $v1858bcdeb6[0] : null; $v7a23f99a77 = isset($v1858bcdeb6[1]) ? $v1858bcdeb6[1] : null; switch(strtolower($v41abe84754)) { case "getbrokersdbdriversname": $pa051dc1c = "getDBDriversName"; $pc0481df4 = array(); $v9ad1385268 = $this->LocalBrokerServer->getBrokersDBDriversName(); break; case "getfunction": $pa051dc1c = "getFunction"; $pc0481df4 = array("func_name" => $v7a23f99a77, "parameters" => $this->parameters, "options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->getFunction($v7a23f99a77, $this->parameters, $this->options); break; case "getdata": $pa051dc1c = "getData"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->getData($this->parameters, $this->options); break; case "setdata": $pa051dc1c = "setData"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->setData($this->parameters, $this->options); if ($v9ad1385268 && strtolower($v7a23f99a77) == "getinsertedid") $v9ad1385268 = $this->LocalBrokerServer->getInsertedId($this->options); break; case "getsql": $pa051dc1c = "getSQL"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->getSQL($this->parameters, $this->options); break; case "setsql": $pa051dc1c = "setSQL"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->setSQL($this->parameters, $this->options); if ($v9ad1385268 && strtolower($v7a23f99a77) == "getinsertedid") $v9ad1385268 = $this->LocalBrokerServer->getInsertedId($this->options); break; case "getinsertedid": $pa051dc1c = "getInsertedId"; $pc0481df4 = array("options" => $this->options); $v9ad1385268 = $this->LocalBrokerServer->getInsertedId($this->options); break; case "insertobject": $pa051dc1c = "insertObject"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->insertObject( isset($this->parameters["table_name"]) ? $this->parameters["table_name"] : null, isset($this->parameters["attributes"]) ? $this->parameters["attributes"] : null, $this->options ); break; case "updateobject": $pa051dc1c = "updateObject"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->updateObject( isset($this->parameters["table_name"]) ? $this->parameters["table_name"] : null, isset($this->parameters["attributes"]) ? $this->parameters["attributes"] : null, isset($this->parameters["conditions"]) ? $this->parameters["conditions"] : null, $this->options ); break; case "deleteobject": $pa051dc1c = "deleteObject"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->deleteObject( isset($this->parameters["table_name"]) ? $this->parameters["table_name"] : null, isset($this->parameters["conditions"]) ? $this->parameters["conditions"] : null, $this->options ); break; case "findobjects": $pa051dc1c = "findObjects"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->findObjects( isset($this->parameters["table_name"]) ? $this->parameters["table_name"] : null, isset($this->parameters["attributes"]) ? $this->parameters["attributes"] : null, isset($this->parameters["conditions"]) ? $this->parameters["conditions"] : null, $this->options ); break; case "countobjects": $pa051dc1c = "countObjects"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->countObjects( isset($this->parameters["table_name"]) ? $this->parameters["table_name"] : null, isset($this->parameters["conditions"]) ? $this->parameters["conditions"] : null, $this->options ); break; case "findrelationshipobjects": $pa051dc1c = "findRelationshipObjects"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->findRelationshipObjects( isset($this->parameters["table_name"]) ? $this->parameters["table_name"] : null, isset($this->parameters["rel_elm"]) ? $this->parameters["rel_elm"] : null, isset($this->parameters["parent_conditions"]) ? $this->parameters["parent_conditions"] : null, $this->options ); break; case "countrelationshipobjects": $pa051dc1c = "countRelationshipObjects"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->countRelationshipObjects( isset($this->parameters["table_name"]) ? $this->parameters["table_name"] : null, isset($this->parameters["rel_elm"]) ? $this->parameters["rel_elm"] : null, isset($this->parameters["parent_conditions"]) ? $this->parameters["parent_conditions"] : null, $this->options ); break; case "findObjectsColumnMax": $pa051dc1c = "findObjectsColumnMax"; $pc0481df4 = array("parameters" => $this->parameters, "options" => $v5d3813882f); $v9ad1385268 = $this->LocalBrokerServer->findObjectsColumnMax( isset($this->parameters["table_name"]) ? $this->parameters["table_name"] : null, isset($this->parameters["attribute_name"]) ? $this->parameters["attribute_name"] : null, $this->options ); break; default: $pcdc618d5 = false; } } if ($pcdc618d5) { $pa1324147 = explode("-", $v3fb9f41470); $pc28d161b = array("select", "insert", "update", "delete"); if (in_array($pa1324147[0], $pc28d161b)) { $pa051dc1c = "call" . ucfirst($pa1324147[0]) . ($pa1324147[1] ? "SQL" : ""); $pc0481df4 = array("module" => $pc8b88eb4, "service" => $v95eeadc9e9, "parameters" => $this->parameters, "options" => $this->options); } return $this->getWebServiceResponse($pa051dc1c, $pc0481df4, $v9ad1385268, $this->response_type); } } } ?>
