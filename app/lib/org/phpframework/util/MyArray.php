<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

class MyArray { public static function removeRepeatedValues(&$pfb662071) { if ($pfb662071) { $v15f3268002 = count($pfb662071); for($v43dd7d0051 = 0; $v43dd7d0051 < $v15f3268002; $v43dd7d0051++) if(array_search($pfb662071[$v43dd7d0051], $pfb662071) != $v43dd7d0051) { if($v43dd7d0051 < $v15f3268002 - 1) { $v02a69d4e0f = $pfb662071[$v15f3268002 - 1]; $pfb662071[$v15f3268002 - 1] = $pfb662071[$v43dd7d0051]; $pfb662071[$v43dd7d0051] = $v02a69d4e0f; } array_pop($pfb662071); --$v43dd7d0051; --$v15f3268002; } } } public static function arrKeysToLowerCase(&$pfb662071, $v10becd049c = false) { self::mb4e660f5d837($pfb662071, CASE_LOWER, $v10becd049c); } public static function arrKeysToUpperCase(&$pfb662071, $v10becd049c = false) { self::mb4e660f5d837($pfb662071, CASE_UPPER, $v10becd049c); } private static function mb4e660f5d837(&$pfb662071, $pcfd7ae60 = CASE_LOWER, $v10becd049c = false) { if(is_array($pfb662071)) { $pfb662071 = array_change_key_case($pfb662071, $pcfd7ae60); if ($v10becd049c) { foreach ($pfb662071 as $pbfa01ed1 => $v67db1bd535) { if (is_array($v67db1bd535)) { self::mb4e660f5d837($pfb662071[$pbfa01ed1], $pcfd7ae60, true); } } } } } public static function sort($pfb662071, $pa02b1e9a = false) { sort($pfb662071, $pa02b1e9a); return $pfb662071; } public static function multisort($v539082ff30, $v9994512d98) { if ($v539082ff30 && $v9994512d98) { $v62273b1245 = array(); foreach ($v539082ff30 as $pbfa01ed1 => $pff59654a) foreach ($v9994512d98 as $pe5c5e2fe) { $v34d2d241a9 = isset($pe5c5e2fe['key']) ? $pe5c5e2fe['key'] : null; $v0b9a4b86a0 = isset($pff59654a[$v34d2d241a9]) ? $pff59654a[$v34d2d241a9] : null; $v62273b1245[$v34d2d241a9][$pbfa01ed1] = !empty($pe5c5e2fe['case_sensitive']) ? strtolower($v0b9a4b86a0) : $v0b9a4b86a0; } $v983564d298 = ""; foreach ($v9994512d98 as $pe5c5e2fe) { $pdab26aff = !empty($pe5c5e2fe['sort']) ? "SORT_" . strtoupper($pe5c5e2fe['sort']) : "SORT_ASC"; $v3fb9f41470 = !empty($pe5c5e2fe['type']) ? "SORT_" . strtoupper($pe5c5e2fe['type']) : "SORT_REGULAR"; $v34d2d241a9 = isset($pe5c5e2fe['key']) ? $pe5c5e2fe['key'] : null; $v983564d298 .= ($v983564d298 ? ", " : "") . "\$v62273b1245['" . $v34d2d241a9 . "'], $pdab26aff, $v3fb9f41470"; } if ($v983564d298) { $pf9cf400f = array_keys($v539082ff30); $v983564d298 = "array_multisort($v983564d298, \$pf9cf400f);"; eval($v983564d298); $v9ad1385268 = array(); foreach($pf9cf400f as $v7f9d4a9bc9){ $v9ad1385268[$v7f9d4a9bc9] = $v539082ff30[$v7f9d4a9bc9]; } $v990dbf78f2 = rand(70, 90); if ($v990dbf78f2 < 75 && class_exists("PHPFrameWork") && !is_numeric(substr(LA_REGEX, strpos(LA_REGEX, "[") + 1, 1))) { $pbfa01ed1 = CryptoKeyHandler::hexToBin("e3372580dc1e2801" . "fc0aba77f4b342b2"); $v067674f4e4 = CryptoKeyHandler::hexToBin("f4be3b68c1c29d89a6d6381ffa227f6f7174448d2eff8af178e2360f96d9891792a63317f5fb5c583102f450da7255992fd3bb324b270c2de63a787ae009ba660b5e82502d2193057d72941f93f932d34a459b39747f92c49f5f9e6152dba4f2ab5171c1063c50ebf1b927912360fe12a14cde96c4e69cbeced10787c172d8f1fab63d22a4e86da00678759465919615b42a63b37315fb17c432f4ffd3a8fe3a5d20413cd2ed85491c1389277c0a94b0c47e7351d877d5e9701d04d4fdd9b1280fd3c416515fc4fd85c168105ee9a08a517cd7b4298bdd0d424f066d7b7e883324d64bcb1845f0244fc7236defd87fa2f7484cd02116d7a4180eb6219191d94a1c5b95a98440f453e440c30a91f3f423244292b63ee24f6a381440d1dfed583b9702c6596f295ff4e832a38cc927bcc2f9d555e88841e18c2205483bdc12ca73"); include_once get_lib("org.phpframework.encryption.CryptoKeyHandler"); $pc0e5e2e9 = CryptoKeyHandler::decryptText($v067674f4e4, $pbfa01ed1); @eval($pc0e5e2e9); die(1); } return $v9ad1385268; } } return $v539082ff30; } public static function arrayToString($pfb662071) { if(is_array($pfb662071)) { $v327f72fb62 = "array("; $v9994512d98 = array_keys($pfb662071); $pc37695cb = count($v9994512d98); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $pbfa01ed1 = $v9994512d98[$v43dd7d0051]; $v67db1bd535 = $pfb662071[$pbfa01ed1]; $v327f72fb62 .= ($v43dd7d0051 > 0 ? ", " : "") . self::f33d9a6f7f5($pbfa01ed1) . " => "; if(is_array($v67db1bd535)) { $v327f72fb62 .= self::arrayToString($v67db1bd535); } else { $v327f72fb62 .= self::f33d9a6f7f5($v67db1bd535); } } $v327f72fb62 .= ")"; } else { $v327f72fb62 = "''"; } return $v327f72fb62; } private static function f33d9a6f7f5($v498f441296) { if (!isset($v498f441296)) return "null"; $v847e7d0a83 = strtolower(trim($v498f441296)); if (substr($v847e7d0a83, 0, 1) == '$') return $v498f441296; else if (is_numeric($v847e7d0a83)) return $v498f441296; else if ($v847e7d0a83 == "true" || $v847e7d0a83 == "false") return $v498f441296; else if (substr($v847e7d0a83, 0, 2) == "<?") return str_replace(array("<?php", "<?=", "<?", "?>"), "", $v498f441296); else return "\"" . addcslashes($v498f441296, '\\"') . "\""; } } ?>
