<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
class SSHHandler { private $paf0f3ce7; private $v9815b3ce5a; private $pcac9dcea; private $pfb201a5a; private $pcccdc6f0; private $v5bae1c662b; private $pbec1c1b7; private $pdebba7d8; private $v0f27167eec; private $v0d7587ca2e; private $v9e5d00b62a; private $pfe80a439 = array(); private $v296f8e88e6; private $pf1a720d5; public function setSetting($pbfa01ed1, $v67db1bd535) { $pbfa01ed1 = strtolower($pbfa01ed1); switch ($pbfa01ed1) { case "host": $this->paf0f3ce7 = $v67db1bd535; break; case "port": $this->v9815b3ce5a = $v67db1bd535 ? $v67db1bd535 : 22; break; case "server_fp": case "fp": case "fingerprint": $this->pcac9dcea = $v67db1bd535; break; case "user": case "username": $this->pfb201a5a = $v67db1bd535; break; case "pass": case "password": $this->pcccdc6f0 = $v67db1bd535; break; case "pub_file": case "ssh_auth_pub_file": $this->v5bae1c662b = $v67db1bd535; break; case "priv_file": case "ssh_auth_priv_file": $this->pbec1c1b7 = $v67db1bd535; break; case "pub_string": case "ssh_auth_pub_string": $this->pdebba7d8 = $v67db1bd535; break; case "priv_string": case "ssh_auth_priv_string": $this->v0f27167eec = $v67db1bd535; break; case "passphrase": case "ssh_auth_passphrase": $this->v0d7587ca2e = $v67db1bd535 ? $v67db1bd535 : null; break; } } public function setSettings($v30857f7eca) { if ($v30857f7eca) foreach ($v30857f7eca as $pbfa01ed1 => $v67db1bd535) $this->setSetting($pbfa01ed1, $v67db1bd535); } public function setSSHAuthKeyTmpFolderPath($v9e5d00b62a) { $this->v9e5d00b62a = $v9e5d00b62a; } public function connect($v30857f7eca = null) { $this->setSettings($v30857f7eca); $this->v296f8e88e6 = null; $this->pf1a720d5 = false; if (!$this->paf0f3ce7) launch_exception(new Exception('SSH Host cannot be undefined!')); else if (!($this->v296f8e88e6 = ssh2_connect($this->paf0f3ce7, $this->v9815b3ce5a))) launch_exception(new Exception('Cannot connect to server!')); if ($this->pcac9dcea) { $v02636760e1 = ssh2_fingerprint($this->v296f8e88e6, SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX); if (strcmp($this->pcac9dcea, $v02636760e1) !== 0) launch_exception(new Exception('Unable to verify server identity!')); } if (!$this->pfb201a5a) launch_exception(new Exception('User cannot be undefined!')); else if ($this->pcccdc6f0) { if (ssh2_auth_password($this->v296f8e88e6, $this->pfb201a5a, $this->pcccdc6f0)) $this->pf1a720d5 = true; else launch_exception(new Exception('Autentication rejected by server!')); } else if (($this->v5bae1c662b || $this->pdebba7d8) && ($this->pbec1c1b7 || $this->v0f27167eec)) { if ($this->v5bae1c662b) $v5bae1c662b = $this->v5bae1c662b; else if ($this->pdebba7d8) $v5bae1c662b = $this->createSSHAuthKeyFile($this->pdebba7d8); if ($this->pbec1c1b7) $pbec1c1b7 = $this->pbec1c1b7; else if ($this->v0f27167eec) $pbec1c1b7 = $this->createSSHAuthKeyFile($this->v0f27167eec); if (!$v5bae1c662b || !$pbec1c1b7) launch_exception(new Exception('The variables $ssh_auth_pub_file and $ssh_auth_priv_file must be existent files!')); else if (ssh2_auth_pubkey_file($this->v296f8e88e6, $this->pfb201a5a, $v5bae1c662b, $pbec1c1b7, $this->v0d7587ca2e)) $this->pf1a720d5 = true; else launch_exception(new Exception('Autentication rejected by server!')); } else launch_exception(new Exception('Autentication must be done through username/password or pub/priv key!')); return $this->isConnected(); } public function isConnected() { return $this->v296f8e88e6 && $this->pf1a720d5; } public function exec($pd8481879) { if (!$this->isConnected()) launch_exception(new Exception('SSH not connected!')); else if (!($v9ac20b34c5 = ssh2_exec($this->v296f8e88e6, $pd8481879))) launch_exception(new Exception('SSH command failed!')); else { $v6b77c061f5 = ssh2_fetch_stream($v9ac20b34c5, SSH2_STREAM_STDERR); stream_set_blocking($v6b77c061f5, true); stream_set_blocking($v9ac20b34c5, true); $v539082ff30 = stream_get_contents($v9ac20b34c5); $v0f9512fda4 = stream_get_contents($v6b77c061f5); fclose($v6b77c061f5); fclose($v9ac20b34c5); if ($v0f9512fda4) launch_exception(new Exception('SSH command failed with error: ' . $v0f9512fda4)); return $v539082ff30; } } public function disconnect() { if ($this->isConnected()) $this->exec('echo "EXITING" && exit;'); $this->v296f8e88e6 = null; $this->pf1a720d5 = false; if ($this->pfe80a439) foreach ($this->pfe80a439 as $pd69fb7d0 => $v9a84a79e2e) if (file_exists($v9a84a79e2e) && @unlink($v9a84a79e2e)) unset($this->pfe80a439[$pd69fb7d0]); } public function __destruct() { $this->disconnect(); } public function getConnection() { return $this->v296f8e88e6; } public function sshToSftp() { return $this->isConnected() ? ssh2_sftp($this->v296f8e88e6) : null; } public function sshToShell($v5853ab48bb = "vanilla", $pbe79d9d7 = null, $v607a49cf36 = 80, $v3a0455afd7 = 25, $v855c0ac772 = SSH2_TERM_UNIT_CHARS) { return $this->isConnected() ? ssh2_shell($this->v296f8e88e6, $v5853ab48bb, $pbe79d9d7, $v607a49cf36, $v3a0455afd7, $v855c0ac772) : null; } public function sshToTunnel($v244067a7fe, $v7e782022ec) { return $this->isConnected() ? ssh2_tunnel($this->v296f8e88e6, $v244067a7fe, $v7e782022ec) : null; } public function createSSHAuthKeyFile($v70a24a74ac) { $pef63ea53 = ($this->v9e5d00b62a ? $this->v9e5d00b62a : sys_get_temp_dir()) . "/"; $pa32be502 = tempnam($pef63ea53, "rsa_"); if ($pa32be502) { $v5c1c342594 = file_put_contents($pa32be502, $v70a24a74ac) !== false; if (!$v5c1c342594) { $pa32be502 = null; if (file_exists($pa32be502)) @unlink($pa32be502); } $this->pfe80a439[] = $pa32be502; } return $pa32be502; } public function exists($pa32be502) { return !empty($this->getFileInfo($pa32be502)); } public function getFileInfo($pa32be502) { $v9423c4a972 = $this->sshToSftp(); $v872c4849e0 = @ssh2_sftp_lstat($v9423c4a972, $pa32be502); $pf9baa58f = array( 0140000 => 'ssocket', 0120000 => 'llink', 0100000 => '-file', 0060000 => 'bblock', 0040000 => 'ddir', 0020000 => 'cchar', 0010000 => 'pfifo' ); if ($v872c4849e0) { $v0184a6afcf = isset($v872c4849e0['mode']) ? $v872c4849e0['mode'] : null; $pc37695cb = decoct($v0184a6afcf & 0170000); $v3fb9f41470 = isset($pf9baa58f[octdec($pc37695cb)]) ? substr($pf9baa58f[octdec($pc37695cb)], 1) : null; $v6d755726a2 = $v3fb9f41470 == "link"; if ($v6d755726a2) { $pd48407c6 = @ssh2_sftp_stat($v9423c4a972, $pa32be502); $v6253dda37c = isset($pd48407c6['mode']) ? $pd48407c6['mode'] : null; $pc37695cb = decoct($v6253dda37c & 0170000); $v3fb9f41470 = isset($pf9baa58f[octdec($pc37695cb)]) ? substr($pf9baa58f[octdec($pc37695cb)], 1) : null; $v872c4849e0["mode_oct"] = "0" . decoct($v0184a6afcf & 000777); $v872c4849e0["mode_dec"] = octdec($v872c4849e0["mode_oct"]); $v872c4849e0["target"] = ssh2_sftp_readlink($v9423c4a972, $pa32be502); $pd48407c6["link_info"] = $v872c4849e0; $v872c4849e0 = $pd48407c6; } $v872c4849e0["type"] = $v3fb9f41470; $v872c4849e0["is_dir"] = $v3fb9f41470 == "dir"; $v872c4849e0["is_link"] = $v6d755726a2; $v872c4849e0["mode_oct"] = "0" . decoct($v0184a6afcf & 000777); $v872c4849e0["mode_dec"] = octdec($v872c4849e0["mode_oct"]); } return $v872c4849e0; } public function isDir($pa32be502) { $v872c4849e0 = $this->getFileInfo($pa32be502); return isset($v872c4849e0["is_dir"]) ? $v872c4849e0["is_dir"] : null; } public function copyLocalToRemoteFile($v4ba96b08ef, $pd93e9b1d, $v805b4b999d = false, $v178ef4557e = 0644, $v611a4318b7 = 0755) { if (file_exists($v4ba96b08ef)) { if (is_dir($v4ba96b08ef)) { if (!$this->createRemoteFolder($pd93e9b1d, $v611a4318b7 ? $v611a4318b7 : 0755, $v805b4b999d)) return false; $v6ee393d9fb = scandir($v4ba96b08ef); if ($v6ee393d9fb) foreach ($v6ee393d9fb as $v7dffdb5a5b) if ($v7dffdb5a5b != "." && $v7dffdb5a5b != ".." && !$this->copyLocalToRemoteFile("$v4ba96b08ef/$v7dffdb5a5b", "$pd93e9b1d/$v7dffdb5a5b", $v805b4b999d, $v178ef4557e, $v611a4318b7)) return false; } else { if ($v805b4b999d) { $pc7de54d5 = dirname($pd93e9b1d); $v872c4849e0 = $this->getFileInfo($pc7de54d5); if ($v872c4849e0 && empty($v872c4849e0["is_dir"])) return false; if (!$v872c4849e0 && !$this->createRemoteFolder($pc7de54d5, $v611a4318b7 ? $v611a4318b7 : 0755, $v805b4b999d)) return false; } return ssh2_scp_send($this->getConnection(), $v4ba96b08ef, $pd93e9b1d, $v178ef4557e ? $v178ef4557e : 0644); } } } public function copyRemoteToLocalFile($pd93e9b1d, $v4ba96b08ef, $v805b4b999d = false, $v178ef4557e = 0644, $v611a4318b7 = 0755) { $v872c4849e0 = $this->getFileInfo($pd93e9b1d); if ($v872c4849e0) { if (!empty($v872c4849e0["is_dir"])) { if (!is_dir($v4ba96b08ef)) mkdir($v4ba96b08ef, $v611a4318b7, $v805b4b999d); if (is_dir($v4ba96b08ef)) { $v6ee393d9fb = $this->scanRemoteDir($pd93e9b1d); $v15ae6f60ab = true; if ($v6ee393d9fb) { $v6ee393d9fb = array_diff($v6ee393d9fb, array(".", "..")); foreach ($v6ee393d9fb as $v7dffdb5a5b) if (!$this->copyRemoteToLocalFile("$pd93e9b1d/$v7dffdb5a5b, $v4ba96b08ef/$v7dffdb5a5b", $v805b4b999d, $v178ef4557e, $v611a4318b7)) $v15ae6f60ab = false; } return $v15ae6f60ab; } } else { $parent = dirname($v4ba96b08ef); if ($v805b4b999d && !is_dir($parent)) mkdir($parent, $v611a4318b7, $v805b4b999d); return ssh2_scp_recv($this->v296f8e88e6, $pd93e9b1d, $v4ba96b08ef) && chmod($v4ba96b08ef, $v178ef4557e); } } return false; } public function renameRemoteFile($pd93e9b1d, $pe6871e84) { if ($this->exists($pd93e9b1d)) { $pd5e39702 = dirname($pd93e9b1d) . "/" . $pe6871e84; $v9423c4a972 = $this->sshToSftp(); return ssh2_sftp_rename($v9423c4a972, $pd93e9b1d, $pd5e39702); } return false; } public function moveRemoteFile($pbc834ff7, $v5234da2dfa) { if ($this->exists($pbc834ff7)) { $v90123d6e2e = dirname($v5234da2dfa); $v872c4849e0 = $this->getFileInfo($v90123d6e2e); if ($v872c4849e0 && empty($v872c4849e0["is_dir"])) return false; if (!$v872c4849e0) { $v107a9b7ad2 = dirname($pbc834ff7); $v872c4849e0 = $this->getFileInfo($v107a9b7ad2); if (!$this->createRemoteFolder($v90123d6e2e, !empty($v872c4849e0["mode_dec"]) ? $v872c4849e0["mode_dec"] : 0755, true)) return false; } $v9423c4a972 = $this->sshToSftp(); return ssh2_sftp_rename($v9423c4a972, $pbc834ff7, $v5234da2dfa); } return false; } public function createRemoteFolder($v85000fb0fd, $v036fb8e128 = 0777, $v805b4b999d = false) { $v872c4849e0 = $this->getFileInfo($v85000fb0fd); $v9423c4a972 = $this->sshToSftp(); if ($v872c4849e0 && empty($v872c4849e0["is_dir"])) ssh2_sftp_unlink($v9423c4a972, $v85000fb0fd); $v7959970a41 = isset($v872c4849e0["is_dir"]) ? $v872c4849e0["is_dir"] : null; $v0184a6afcf = isset($v872c4849e0["mode_dec"]) ? $v872c4849e0["mode_dec"] : null; if (!$v7959970a41) $v7959970a41 = ssh2_sftp_mkdir($v9423c4a972, $v85000fb0fd, $v036fb8e128, $v805b4b999d); else if ($v0184a6afcf != $v036fb8e128) $v7959970a41 = ssh2_sftp_chmod($v9423c4a972, $v85000fb0fd, $v036fb8e128); return $v7959970a41 && $this->isDir($v85000fb0fd); } public function removeRemoteFile($pd93e9b1d) { $pd93e9b1d = substr($pd93e9b1d, -1) == "/" ? preg_replace("/\\/+$/", "", $pd93e9b1d) : $pd93e9b1d; try { $this->exec("rm -rf '" . addcslashes($pd93e9b1d, "'") . "';"); } catch (Exception $paec2c009) {} $v872c4849e0 = $this->getFileInfo($pd93e9b1d); $v9423c4a972 = $this->sshToSftp(); if (!$v872c4849e0) return true; if (!empty($v872c4849e0["is_dir"]) && empty($v872c4849e0["is_link"])) { $v6ee393d9fb = $this->scanRemoteDir($pd93e9b1d); $v51b13e95c6 = true; if ($v6ee393d9fb) { $v6ee393d9fb = array_diff($v6ee393d9fb, array(".", "..")); foreach ($v6ee393d9fb as $v7dffdb5a5b) if (!$this->removeRemoteFile("$pd93e9b1d/$v7dffdb5a5b")) $v51b13e95c6 = false; } return $v51b13e95c6 ? ssh2_sftp_rmdir($v9423c4a972, $pd93e9b1d) : false; } return ssh2_sftp_unlink($v9423c4a972, $pd93e9b1d); } public function scanRemoteDir($v85000fb0fd) { if ($this->isDir($v85000fb0fd)) { $v9423c4a972 = $this->sshToSftp(); $v6ee393d9fb = array(); $pd9c6763b = ssh2_sftp_realpath($v9423c4a972, $v85000fb0fd); if (ini_get('allow_url_fopen')) { $v711cb781c4 = intval($v9423c4a972); $v657d4dd5ef = "ssh2.sftp://$v711cb781c4$pd9c6763b/"; return scandir($v657d4dd5ef); } else { $v7bd5d88a74 = trim( $this->exec("ls -a -1 '" . addcslashes($pd9c6763b, "'") . "';") ); $v6ee393d9fb = $v7bd5d88a74 ? explode("\n", $v7bd5d88a74) : array(); return $v6ee393d9fb; } } return false; } } ?>
