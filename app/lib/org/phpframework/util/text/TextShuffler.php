<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.util.text.TextSanitizer"); class TextShuffler { public static function shuffle($v70a24a74ac, $v3fb9f41470 = 1, $v5d3813882f = false) { switch ($v3fb9f41470) { case 2: return self::shuffle2($v70a24a74ac, $v5d3813882f); case 3: return self::shuffle3($v70a24a74ac, $v5d3813882f); case 4: return self::shuffle4($v70a24a74ac, $v5d3813882f); case 5: return self::shuffle5($v70a24a74ac, $v5d3813882f); } return self::shuffle1($v70a24a74ac, $v5d3813882f); } public static function unshuffle($v70a24a74ac, $v3fb9f41470 = 1, $v5d3813882f = false) { switch ($v3fb9f41470) { case 2: return self::unshuffle2($v70a24a74ac, $v5d3813882f); case 3: return self::unshuffle3($v70a24a74ac, $v5d3813882f); case 4: return self::unshuffle4($v70a24a74ac, $v5d3813882f); case 5: return self::unshuffle5($v70a24a74ac, $v5d3813882f); } return self::unshuffle1($v70a24a74ac, $v5d3813882f); } public static function autoShuffle($v70a24a74ac, $v5d3813882f = false) { $v327f72fb62 = ""; if (mb_strlen($v70a24a74ac)) { if (empty($v5d3813882f["disable_email"])) { $pbd1bc7b0 = mb_strpos($v70a24a74ac, "@"); if ($pbd1bc7b0 !== false) { $v473e4bc926 = mb_substr($v70a24a74ac, $pbd1bc7b0); $v70a24a74ac = mb_substr($v70a24a74ac, 0, $pbd1bc7b0); } } $v34f0a629d3 = mb_substr($v70a24a74ac, 0, 1); $v70a24a74ac = mb_substr($v70a24a74ac, 1); $v58ac916504 = ord(strtolower($v34f0a629d3)); if ($v58ac916504 >= 97 && $v58ac916504 <= 105) $v327f72fb62 = self::shuffle1($v70a24a74ac, $v5d3813882f); else if ($v58ac916504 >= 106 && $v58ac916504 <= 116) $v327f72fb62 = self::shuffle2($v70a24a74ac, $v5d3813882f); else if ($v58ac916504 >= 117 && $v58ac916504 <= 122) $v327f72fb62 = self::shuffle3($v70a24a74ac, $v5d3813882f); else if ($v58ac916504 <= 96) $v327f72fb62 = self::shuffle4($v70a24a74ac, $v5d3813882f); else $v327f72fb62 = self::shuffle5($v70a24a74ac, $v5d3813882f); $v327f72fb62 = $v34f0a629d3 . $v327f72fb62; if (empty($v5d3813882f["disable_email"]) && $v473e4bc926) $v327f72fb62 .= $v473e4bc926; } return $v327f72fb62; } public static function autoUnshuffle($v70a24a74ac, $v5d3813882f = false) { $v327f72fb62 = ""; if (mb_strlen($v70a24a74ac)) { if (empty($v5d3813882f["disable_email"])) { $pbd1bc7b0 = mb_strpos($v70a24a74ac, "@"); if ($pbd1bc7b0 !== false) { $v473e4bc926 = mb_substr($v70a24a74ac, $pbd1bc7b0); $v70a24a74ac = mb_substr($v70a24a74ac, 0, $pbd1bc7b0); } } $v34f0a629d3 = mb_substr($v70a24a74ac, 0, 1); $v70a24a74ac = mb_substr($v70a24a74ac, 1); $v58ac916504 = ord(strtolower($v34f0a629d3)); if ($v58ac916504 >= 97 && $v58ac916504 <= 105) $v327f72fb62 = self::unshuffle1($v70a24a74ac, $v5d3813882f); else if ($v58ac916504 >= 106 && $v58ac916504 <= 116) $v327f72fb62 = self::unshuffle2($v70a24a74ac, $v5d3813882f); else if ($v58ac916504 >= 117 && $v58ac916504 <= 122) $v327f72fb62 = self::unshuffle3($v70a24a74ac, $v5d3813882f); else if ($v58ac916504 <= 96) $v327f72fb62 = self::unshuffle4($v70a24a74ac, $v5d3813882f); else $v327f72fb62 = self::unshuffle5($v70a24a74ac, $v5d3813882f); $v327f72fb62 = $v34f0a629d3 . $v327f72fb62; if (empty($v5d3813882f["disable_email"]) && $v473e4bc926) $v327f72fb62 .= $v473e4bc926; } return $v327f72fb62; } public static function shuffle1($v70a24a74ac, $v5d3813882f = false) { $v327f72fb62 = ""; $pca4c319c = TextSanitizer::mbStrSplit($v70a24a74ac); $pc37695cb = count($pca4c319c); if ($pc37695cb) { $v870b348c33 = ceil($pc37695cb / 2); $v1b08a89324 = array_slice($pca4c319c, 0, $v870b348c33); $v182f7d984b = array_slice($pca4c319c, $v870b348c33); $pc37695cb = count($v182f7d984b); $v02a69d4e0f = ""; for ($v43dd7d0051 = $pc37695cb - 1; $v43dd7d0051 >= 0; $v43dd7d0051 -= 2) $v02a69d4e0f .= ($v43dd7d0051 - 1 >= 0 ? $v182f7d984b[$v43dd7d0051 - 1] : "") . $v182f7d984b[$v43dd7d0051]; for ($v43dd7d0051 = 0; $v43dd7d0051 < $v870b348c33; $v43dd7d0051 += 3) $v327f72fb62 = ($v43dd7d0051 + 1 < $v870b348c33 ? $v1b08a89324[$v43dd7d0051 + 1] : "") . ($v43dd7d0051 + 2 < $v870b348c33 ? $v1b08a89324[$v43dd7d0051 + 2] : "") . $v1b08a89324[$v43dd7d0051] . $v327f72fb62; $v327f72fb62 = $v02a69d4e0f . $v327f72fb62; } return $v327f72fb62; } public static function unshuffle1($v70a24a74ac, $v5d3813882f = false) { $v327f72fb62 = ""; $pca4c319c = TextSanitizer::mbStrSplit($v70a24a74ac); $pc37695cb = count($pca4c319c); if ($pc37695cb) { $v870b348c33 = ceil($pc37695cb / 2); $v1b08a89324 = array_slice($pca4c319c, $pc37695cb - $v870b348c33); $v182f7d984b = array_slice($pca4c319c, 0, $pc37695cb - $v870b348c33); $pc37695cb = count($v182f7d984b); for ($v43dd7d0051 = $v870b348c33 - 1; $v43dd7d0051 >= 0; $v43dd7d0051 -= 3) $v327f72fb62 .= $v1b08a89324[$v43dd7d0051] . ($v43dd7d0051 - 2 >= 0 ? $v1b08a89324[$v43dd7d0051 - 2] : "") . ($v43dd7d0051 - 1 >= 0 ? $v1b08a89324[$v43dd7d0051 - 1] : ""); $v02a69d4e0f = ""; for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051 += 2) $v02a69d4e0f = $v182f7d984b[$v43dd7d0051] . ($v43dd7d0051 + 1 < $pc37695cb ? $v182f7d984b[$v43dd7d0051 + 1] : "") . $v02a69d4e0f; $v327f72fb62 .= $v02a69d4e0f; } return $v327f72fb62; } public static function shuffle2($v70a24a74ac, $v5d3813882f = false) { $v327f72fb62 = ""; $pca4c319c = TextSanitizer::mbStrSplit($v70a24a74ac); $pc37695cb = count($pca4c319c); for ($v43dd7d0051 = $pc37695cb - 1; $v43dd7d0051 >= 0; $v43dd7d0051 -= 3) $v327f72fb62 .= ($v43dd7d0051 - 1 >= 0 ? $pca4c319c[$v43dd7d0051 - 1] : "") . ($v43dd7d0051 - 2 >= 0 ? $pca4c319c[$v43dd7d0051 - 2] : "") . $pca4c319c[$v43dd7d0051]; return $v327f72fb62; } public static function unshuffle2($v70a24a74ac, $v5d3813882f = false) { $v327f72fb62 = ""; $pca4c319c = TextSanitizer::mbStrSplit($v70a24a74ac); $pc37695cb = count($pca4c319c); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051 += 3) { if ($v43dd7d0051 + 3 <= $pc37695cb) $v327f72fb62 = ($v43dd7d0051 + 1 < $pc37695cb ? $pca4c319c[$v43dd7d0051 + 1] : "") . $pca4c319c[$v43dd7d0051] . ($v43dd7d0051 + 2 < $pc37695cb ? $pca4c319c[$v43dd7d0051 + 2] : "") . $v327f72fb62; else $v327f72fb62 = $pca4c319c[$v43dd7d0051] . $v327f72fb62; } return $v327f72fb62; } public static function shuffle3($v70a24a74ac, $v5d3813882f = false) { $v327f72fb62 = ""; $pca4c319c = TextSanitizer::mbStrSplit($v70a24a74ac); $pc37695cb = count($pca4c319c); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051 += 2) $v327f72fb62 .= ($v43dd7d0051 + 1 < $pc37695cb ? $pca4c319c[$v43dd7d0051 + 1] : "") . $pca4c319c[$v43dd7d0051]; return $v327f72fb62; } public static function unshuffle3($v70a24a74ac, $v5d3813882f = false) { return self::shuffle3($v70a24a74ac, $v5d3813882f); } public static function shuffle4($v70a24a74ac, $v5d3813882f = false) { $v327f72fb62 = ""; $pca4c319c = TextSanitizer::mbStrSplit($v70a24a74ac); $pc37695cb = count($pca4c319c); for ($v43dd7d0051 = $pc37695cb - 1; $v43dd7d0051 >= 0; $v43dd7d0051--) $v327f72fb62 .= $pca4c319c[$v43dd7d0051]; return $v327f72fb62; } public static function unshuffle4($v70a24a74ac, $v5d3813882f = false) { return self::shuffle4($v70a24a74ac, $v5d3813882f); } public static function shuffle5($v70a24a74ac, $v5d3813882f = false) { $v327f72fb62 = ""; $pca4c319c = TextSanitizer::mbStrSplit($v70a24a74ac); $pc37695cb = count($pca4c319c); if ($pc37695cb) { $v870b348c33 = ceil($pc37695cb / 2); $v1b08a89324 = array_slice($pca4c319c, 0, $v870b348c33); $v182f7d984b = array_slice($pca4c319c, $v870b348c33); for ($v43dd7d0051 = $v870b348c33 - 1; $v43dd7d0051 >= 0; $v43dd7d0051--) $v327f72fb62 .= $v1b08a89324[$v43dd7d0051]; $v327f72fb62 .= implode("", $v182f7d984b); } return $v327f72fb62; } public static function unshuffle5($v70a24a74ac, $v5d3813882f = false) { return self::shuffle5($v70a24a74ac, $v5d3813882f); } } ?>
