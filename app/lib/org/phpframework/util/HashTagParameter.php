<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
 class HashTagParameter { const SQL_HASH_TAG_PARAMETER_PARTIAL_REGEX = "#([\w \-\+\.\>\<]+)#"; const SQL_HASH_TAG_PARAMETER_FULL_REGEX = "/" . self::SQL_HASH_TAG_PARAMETER_PARTIAL_REGEX . "/u"; const HTML_TAG_PARAMETER_PARTIAL_REGEX = "([\w\"' \-\+\[\]\.\\\$\\\\]+)"; const HTML_HASH_TAG_PARAMETER_PARTIAL_REGEX = "#" . self::HTML_TAG_PARAMETER_PARTIAL_REGEX . "#"; const HTML_HASH_TAG_PARAMETER_FULL_REGEX = "/" . self::HTML_HASH_TAG_PARAMETER_PARTIAL_REGEX . "/u"; const HTML_SUPER_GLOBAL_PARTIAL_REGEX = "(_GET|_POST|_REQUEST|_FILES|_COOKIE|_ENV|_SERVER|_SESSION|GLOBALS)"; const HTML_SUPER_GLOBAL_HASH_TAG_PARAMETER_FULL_REGEX = "/#" . self::HTML_SUPER_GLOBAL_PARTIAL_REGEX . "(|\[" . self::HTML_TAG_PARAMETER_PARTIAL_REGEX . ")#/u"; const HTML_SUPER_GLOBAL_VAR_NAME_FULL_REGEX = "/^" . self::HTML_SUPER_GLOBAL_PARTIAL_REGEX . "($|\[)/"; public static function existsHTMLHashTagParameters($v39e1347c93) { $v5f7147fb39 = HashTagParameter::HTML_HASH_TAG_PARAMETER_FULL_REGEX; return $v39e1347c93 && is_string($v39e1347c93) && strpos($v39e1347c93, "#") !== false && preg_match($v5f7147fb39, $v39e1347c93); } public static function existsHTMLSuperGlobalHashTagParameters($v39e1347c93) { $v5f7147fb39 = HashTagParameter::HTML_SUPER_GLOBAL_HASH_TAG_PARAMETER_FULL_REGEX; return $v39e1347c93 && is_string($v39e1347c93) && strpos($v39e1347c93, "#") !== false && preg_match($v5f7147fb39, $v39e1347c93); } public static function replaceHTMLHashTagParametersWithValues($v39e1347c93, $v76b0aa2076, $v4a60aeae92 = null, $v9da91de4d8 = true) { $pf72c1d58 = self::getHTMLHashTagParametersValues($v39e1347c93, $v4a60aeae92, $v9da91de4d8, "values"); foreach ($pf72c1d58 as $paf27f6b9 => $v91a962d917) if ($v91a962d917) { eval('$v91a962d917 = ' . $v91a962d917 . ';'); $v39e1347c93 = str_replace($paf27f6b9, $v91a962d917, $v39e1347c93); } return $v39e1347c93; } public static function getHTMLHashTagParametersValues($v39e1347c93, $v4a60aeae92 = null, $v9da91de4d8 = true, $v2cb5a295f8 = "values") { $pf72c1d58 = array(); if ($v39e1347c93 && is_string($v39e1347c93) && strpos($v39e1347c93, "#") !== false) { $pb9be0c6b = array(); if (is_array($v4a60aeae92) && count($v4a60aeae92)) $pb9be0c6b = array_map(function($v956913c90f) { return substr($v956913c90f, 0, 1) == "/" ? $v956913c90f : "/#(\[|)(\"|')?" . preg_quote($v956913c90f) . "(\"|')?(\]|\[|#)/"; }, $v4a60aeae92); else if ($v4a60aeae92 && !is_array($v4a60aeae92)) $pb9be0c6b[] = substr($v4a60aeae92, 0, 1) == "/" ? $v4a60aeae92 : "/#(\[|)(\"|')?$v4a60aeae92(\"|')?(\]|\[|#)/"; $v5f7147fb39 = HashTagParameter::HTML_HASH_TAG_PARAMETER_FULL_REGEX; preg_match_all($v5f7147fb39, $v39e1347c93, $pbae7526c, PREG_OFFSET_CAPTURE); if (!empty($pbae7526c[1])) { $v8625b218a4 = $v9da91de4d8 ? array("_POST", "_GET", "_GLOBALS", "_ENV") : array(); $pc37695cb = count($pbae7526c[1]); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v6107abf109 = $pbae7526c[1][$v43dd7d0051][0]; $v91a962d917 = ""; $v75914b9861 = false; foreach ($v8625b218a4 as $pf4cc2238) if (stripos($v6107abf109, $pf4cc2238) === 0) { $v75914b9861 = true; break; } $pf938f1df = true; if ($pb9be0c6b) { $v3db8e2e94e = false; foreach ($pb9be0c6b as $v607356a497) if (preg_match($v607356a497, $pbae7526c[0][$v43dd7d0051][0])) { $v3db8e2e94e = true; break; } $pf938f1df = $v3db8e2e94e; } if (strpos($v6107abf109, "[") !== false || strpos($v6107abf109, "]") !== false) { preg_match_all("/([^\[\]]+)/u", trim($v6107abf109), $pcd395670, PREG_PATTERN_ORDER); $pcd395670 = isset($pcd395670[1]) ? $pcd395670[1] : null; if ($pcd395670) { if ($v75914b9861) $pf4cc2238 = array_shift($pcd395670); $pd28479e5 = count($pcd395670); $v9994512d98 = array(); for ($v9d27441e80 = 0; $v9d27441e80 < $pd28479e5; $v9d27441e80++) { $v48b10a467d = trim($pcd395670[$v9d27441e80]); if (strlen($v48b10a467d)) { if (strpos($v48b10a467d, "'") === false && strpos($v48b10a467d, '"') === false) { $pcd395670[$v9d27441e80] = '"' . $v48b10a467d . '"'; } $v9994512d98[] = $pcd395670[$v9d27441e80]; } } if ($v75914b9861) $v91a962d917 = '$' . strtoupper($pf4cc2238) . (count($v9994512d98) ? '[' . implode('][', $v9994512d98) . ']' : ''); else if ($pf938f1df) $v91a962d917 = '$' . $v2cb5a295f8 . (count($v9994512d98) ? '[' . implode('][', $v9994512d98) . ']' : ''); } } else if ($v75914b9861) $v91a962d917 = '$' . $v6107abf109; else if ($pf938f1df) $v91a962d917 = '$' . $v2cb5a295f8 . '["' . $v6107abf109 . '"]'; if ($v91a962d917) $pf72c1d58["#$v6107abf109#"] = $v91a962d917; } } } return $pf72c1d58; } } ?>
