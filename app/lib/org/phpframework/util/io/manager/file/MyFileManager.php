<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.util.io.handler.file.MyFolder"); include_once get_lib("org.phpframework.util.io.handler.file.MyFile"); include_once get_lib("org.phpframework.util.io.manager.MyIOManager"); class MyFileManager extends MyIOManager { private $v2b5dc39378; private $v72e718f28c; public function __construct() { $this->v2b5dc39378 = new MyFolder(); $this->v72e718f28c = new MyFile(); $this->v2b5dc39378->EXEC_ALLOWED = false; } public function add($v3fb9f41470, $v17be587282, $v5e813b295b, $v30857f7eca = array()) { $pbfa01ed1 = self::configurePath($this->getRootPath() . $v17be587282) . self::configureName($v5e813b295b); if($v3fb9f41470 == 1) { $this->v2b5dc39378->setFileName($pbfa01ed1); $v5c1c342594 = $this->v2b5dc39378->create(); } else { if(!$this->checkType($v5e813b295b)) return false; $this->v72e718f28c->setFileName($pbfa01ed1); $v5c1c342594 = $this->v72e718f28c->create(isset($v30857f7eca["content"]) ? $v30857f7eca["content"] : null); } return $v5c1c342594; } public function edit($v17be587282, $v5e813b295b, $v30857f7eca = array()) { $pbfa01ed1 = self::configurePath($this->getRootPath() . $v17be587282) . self::configureName($v5e813b295b); $this->v72e718f28c->setFileName($pbfa01ed1); return $this->v72e718f28c->create(isset($v30857f7eca["content"]) ? $v30857f7eca["content"] : null); } public function delete($v3fb9f41470, $v17be587282, $v5e813b295b) { $pbfa01ed1 = self::configurePath($this->getRootPath() . $v17be587282) . self::configureName($v5e813b295b); if($v3fb9f41470 == 1) { $this->v2b5dc39378->setFileName($pbfa01ed1); $v5c1c342594 = $this->v2b5dc39378->delete(); } else { $this->v72e718f28c->setFileName($pbfa01ed1); $v5c1c342594 = $this->v72e718f28c->delete(); } return $v5c1c342594; } public function copy($v3fb9f41470, $pc941b4ab, $v23d7f19208, $v525288e856, $v30857f7eca = array()) { $pfd8b0970 = !empty($v30857f7eca["dest_name"]) ? $v30857f7eca["dest_name"] : $v23d7f19208; $pfee4f441 = self::configurePath($this->getRootPath() . $pc941b4ab) . self::configureName($v23d7f19208); $v62fcc6685d = self::configurePath($this->getRootPath() . $v525288e856) . self::configureName($pfd8b0970); if($v3fb9f41470 == 1) { $this->v2b5dc39378->setFileName($pfee4f441); $v5c1c342594 = $this->v2b5dc39378->copy($v62fcc6685d); } else { $this->v72e718f28c->setFileName($pfee4f441); $v5c1c342594 = $this->v72e718f28c->copy($v62fcc6685d); } return $v5c1c342594; } public function move($v3fb9f41470, $pc941b4ab, $v23d7f19208, $v525288e856, $v30857f7eca = array()) { if($this->copy($v3fb9f41470, $pc941b4ab, $v23d7f19208, $v525288e856, $v30857f7eca)) return $this->delete($v3fb9f41470, $pc941b4ab, $v23d7f19208); return false; } public function rename($v17be587282, $v0c4b06ddf7, $pe6871e84, $v30857f7eca = array()) { $pbfa01ed1 = self::configurePath($this->getRootPath() . $v17be587282) . self::configureName($v0c4b06ddf7); $pe6871e84 = self::configureName($pe6871e84); $v3fb9f41470 = !empty($v30857f7eca["type"]) ? $v30857f7eca["type"] : 1; if($v3fb9f41470 != 1 && !$this->checkType($pe6871e84)) return false; $this->v72e718f28c->setFileName($pbfa01ed1); return $this->v72e718f28c->rename($pe6871e84); } public function getFile($v17be587282, $v5e813b295b) { $pbfa01ed1 = self::configurePath($this->getRootPath() . $v17be587282) . self::configureName($v5e813b295b); if(!$this->checkType($v5e813b295b)) return false; $this->v72e718f28c->setFileName($pbfa01ed1); return $this->v72e718f28c->get(); } public function getFileInfo($v17be587282, $v5e813b295b) { $pbfa01ed1 = self::configurePath($this->getRootPath() . $v17be587282) . self::configureName($v5e813b295b); if(!is_dir($pbfa01ed1) && !$this->checkType($v5e813b295b)) return false; $this->v72e718f28c->setFileName($pbfa01ed1); $v872c4849e0 = $this->v72e718f28c->getInfo(); $v872c4849e0["path"] = isset($v872c4849e0["path"]) ? substr($v872c4849e0["path"], strlen($this->getRootPath())) : null; return $v872c4849e0; } public function getFiles($v17be587282) { $pdcf670f6 = self::configurePath($this->getRootPath() . $v17be587282); $this->v2b5dc39378->setFileName($pdcf670f6); $v6ee393d9fb = $this->v2b5dc39378->getFiles(); $v9ad1385268 = array(); $v9ad1385268["files"] = $this->prepareFiles($v6ee393d9fb); $v9ad1385268["is_truncate"] = $v4170eebbfd; $v9ad1385268["last_marker"] = $v4170eebbfd ? $pacc2b83d : ""; return $v9ad1385268; } public function getFilesCount($v17be587282) { $pdcf670f6 = self::configurePath($this->getRootPath() . $v17be587282); $this->v2b5dc39378->setFileName($pdcf670f6); return $this->v2b5dc39378->getFilesCount(); } public function upload($v6eee6903b3, $v17be587282, $pe6871e84, $v30857f7eca = array()) { $v17be587282 = self::configurePath($this->getRootPath() . $v17be587282); $pe6871e84 = self::configureName($pe6871e84); if(!$this->checkType($pe6871e84)) return false; return $this->v72e718f28c->upload($v6eee6903b3, $v17be587282, $pe6871e84); } public function exists($v17be587282, $v5e813b295b) { $pbfa01ed1 = self::configurePath($this->getRootPath() . $v17be587282) . self::configureName($v5e813b295b); $this->v72e718f28c->setFileName($pbfa01ed1); return $this->v72e718f28c->exists(); } public function getMyIOHandler() { return $this->v72e718f28c; } } ?>
