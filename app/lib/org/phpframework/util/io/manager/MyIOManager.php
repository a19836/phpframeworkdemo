<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.util.io.manager.IMyIOManager"); abstract class MyIOManager implements IMyIOManager { public $options; private $v4ab372da3a; abstract public function getMyIOHandler(); public function setOptions($v5d3813882f) {$this->options = $v5d3813882f;} public function getOptions() {return $this->options;} public function setOption($pe238ca78, $v67db1bd535) {$this->options[$pe238ca78] = $v67db1bd535;} public function getOption($pe238ca78) {return isset($this->options[$pe238ca78]) ? $this->options[$pe238ca78] : null;} public function getRootPath() { return $this->v4ab372da3a; } public function setRootPath($v4ab372da3a, $v65b0ad2807 = false) { $v4ab372da3a = self::removeDuplicates($v4ab372da3a); if(!$v65b0ad2807) { $v4ab372da3a = substr($v4ab372da3a, strlen($v4ab372da3a) - 1) != "/" ? $v4ab372da3a . "/" : $v4ab372da3a; } $this->v4ab372da3a = $v4ab372da3a; } public static function configurePath($pa32be502, $v3497e41814 = false) { if(!$v3497e41814) { $pa32be502 = preg_replace("/[^\w\-\.\/]*/iu", "", $pa32be502); $pa32be502 = self::removeDuplicates($pa32be502); $pa32be502 = substr($pa32be502, strlen($pa32be502) - 1) != "/" ? $pa32be502 . "/" : $pa32be502; return $pa32be502; } return $pa32be502; } public static function configureName($v5e813b295b) { return preg_replace("/[^\w\-\.]*/i", "", trim($v5e813b295b)); } public static function removeDuplicates($pa32be502) { return preg_replace('/([\/]+)/', '/', $pa32be502); } public function prepareFiles($v6ee393d9fb) { $v9994512d98 = array_keys($v6ee393d9fb); $pc37695cb = count($v9994512d98); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $pbfa01ed1 = $v9994512d98[$v43dd7d0051]; $pa32be502 = isset($v6ee393d9fb[$pbfa01ed1]["path"]) ? $v6ee393d9fb[$pbfa01ed1]["path"] : null; $v6ee393d9fb[$pbfa01ed1]["path"] = substr($pa32be502, strlen($this->v4ab372da3a)); } return $v6ee393d9fb; } public function getFileNameExtension($v5e813b295b) { return $this->getMyIOHandler()->getFileExtension($v5e813b295b); } public function checkType($v5e813b295b) { $v5c1c342594 = true; $v91b215157d = isset($this->options["file_type_allowed"]) ? $this->options["file_type_allowed"] : null; if($v91b215157d) { $v3fb9f41470 = $this->getMyIOHandler()->getType($v5e813b295b); if(is_array($v91b215157d)) { $pc37695cb = count($v91b215157d); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { if($v91b215157d[$v43dd7d0051] == 2) { return true; } elseif($v3fb9f41470["id"] == $v91b215157d[$v43dd7d0051]) { return true; } } return false; } else { return $v91b215157d == 2 || $v3fb9f41470["id"] == $v91b215157d ? true : false; } } return $v5c1c342594; } public function checkMimeType($v71dafe3739) { $v5c1c342594 = true; $v91b215157d = isset($this->options["file_type_allowed"]) ? $this->options["file_type_allowed"] : null; if($v91b215157d) { $v15b1a693a1 = $this->getMyIOHandler(); if(is_array($v91b215157d)) { $pc37695cb = count($v91b215157d); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { if($v91b215157d[$v43dd7d0051] == 2) { return true; } elseif($v15b1a693a1->getFileExtensionByMimeType($v71dafe3739, $v91b215157d[$v43dd7d0051])) { return true; } } return false; } else { return $v91b215157d == 2 || $v15b1a693a1->getFileExtensionByMimeType($v71dafe3739, $v91b215157d) ? true : false; } } return $v5c1c342594; } public function createPath($pa32be502, $v30857f7eca = array()) { $v17be587282 = dirname($pa32be502) == "." ? "" : dirname($pa32be502); $v5e813b295b = basename($pa32be502); $v5c1c342594 = true; if(($v17be587282 || $v5e813b295b) && !$this->exists($v17be587282, $v5e813b295b)) { $v5c1c342594 = $this->createPath($v17be587282, $v30857f7eca); if($v5c1c342594) { $v5c1c342594 = $this->add(1, $v17be587282, $v5e813b295b, $v30857f7eca); } } return $v5c1c342594; } } ?>
