<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */ include_once get_lib("org.phpframework.util.io.handler.file.MyFileHandler"); class MyFolder extends MyFileHandler { public $invalid_files; const EXEC_ALLOWED = false; public function __construct($v250a1176c9 = false, $v30857f7eca = array()) { parent::__construct($v250a1176c9); $this->f7b354b22de(); $this->invalid_files = $this->getInvalidFiles(); if(isset($v30857f7eca["invalid_files"]) && is_array($v30857f7eca["invalid_files"])) $this->invalid_files = array_merge($this->invalid_files, $v30857f7eca["invalid_files"]); } public function create() { if($this->file_name) { return $this->exists() ? true : mkdir($this->file_name); } return false; } public function getFiles() { $v6ee393d9fb = array(); if (is_dir($this->file_name) && ($v89d33f4133 = opendir($this->file_name)) ) { while( ($v7dffdb5a5b = readdir($v89d33f4133)) !== false) if($this->f085037e150($v7dffdb5a5b)) { $v3fb9f41470 = $this->getType($this->file_name . $v7dffdb5a5b); $v6ee393d9fb[$v7dffdb5a5b] = array( "path" => $this->file_name . $v7dffdb5a5b, "name" => $v7dffdb5a5b, "type" => $v3fb9f41470["id"], "type_desc" => $v3fb9f41470["desc"] ); } closedir($v89d33f4133); } return $v6ee393d9fb; } public function getFilesRecursevly() { $v6ee393d9fb = $this->getFiles(); $v0c98cda30e = $this->getFolderType(); $v9994512d98 = array_keys($v6ee393d9fb); $pc37695cb = count($v9994512d98); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v7dffdb5a5b = $v6ee393d9fb[ $v9994512d98[$v43dd7d0051] ]; if($v7dffdb5a5b["type"] == $v0c98cda30e["id"]) { $pd48df47e = new MyFolder($v7dffdb5a5b["path"]); $v2cd5d67337 = $pd48df47e->getFilesRecursevly(); $v6ee393d9fb[ $v9994512d98[$v43dd7d0051] ]["files"] = $v2cd5d67337; } } return $v6ee393d9fb; } public function getFilesCount() { $v6ee393d9fb = $this->getFiles(); $v9994512d98 = array_keys($v6ee393d9fb); return count($v9994512d98); } public function delete() { if($this->exists()) { if(self::EXEC_ALLOWED && function_exists("exec")) { exec("rm -r ".$this->file_name, $pf7dd614f); return count($pf7dd614f) == 0 ? true : false; } else { $v5c1c342594 = true; if (is_dir($this->file_name) && ($v89d33f4133 = opendir($this->file_name)) ) { $v0c98cda30e = $this->getFolderType(); while( ($v7dffdb5a5b = readdir($v89d33f4133)) !== false) if($v7dffdb5a5b != "." && $v7dffdb5a5b != "..") { $pc0f3a0c5 = $this->file_name . $v7dffdb5a5b; $v3fb9f41470 = $this->getType($pc0f3a0c5); if($v3fb9f41470["id"] == $v0c98cda30e["id"]) { $pd48df47e = new MyFolder($pc0f3a0c5); if(!$pd48df47e->delete()) $v5c1c342594 = false; } else if(!unlink($pc0f3a0c5)) $v5c1c342594 = false; } closedir($v89d33f4133); } if($v5c1c342594) return rmdir($this->file_name); } } else return true; return false; } public function copy($v3806ce773c) { if($this->exists() && $v3806ce773c && $this->file_name != $v3806ce773c) { if(self::EXEC_ALLOWED && function_exists("exec")) { exec("cp -p -r ".$this->file_name." {$v3806ce773c}", $pf7dd614f); return count($pf7dd614f) == 0 ? true : false; } else { $pcbd63614 = new MyFolder($v3806ce773c); if($pcbd63614->exists() || (!$pcbd63614->exists() && $pcbd63614->create())) { $v0c98cda30e = $this->getFolderType(); $v5c1c342594 = true; $v6ee393d9fb = $this->getFiles(); $v9994512d98 = array_keys($v6ee393d9fb); $pc37695cb = count($v9994512d98); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb && $v5c1c342594; $v43dd7d0051++) { $v7dffdb5a5b = $v6ee393d9fb[ $v9994512d98[$v43dd7d0051] ]; $v4a172902eb = $v3806ce773c . $v7dffdb5a5b["name"]; if($v7dffdb5a5b["type"] == $v0c98cda30e["id"]) { $v6f15d6d768 = new MyFolder($v4a172902eb); if(!$v6f15d6d768->exists() && !$v6f15d6d768->create()) $v5c1c342594 = false; $pc9e58a1a = new MyFolder($v7dffdb5a5b["path"]); if($v5c1c342594 && !$pc9e58a1a->copy($v6f15d6d768->file_name)) $v5c1c342594 = false; } else { $v3a3060fe4b = new MyFile($v7dffdb5a5b["path"]); if(!$v3a3060fe4b->copy($v4a172902eb)) $v5c1c342594 = false; } } return $v5c1c342594; } } } return false; } private function f7b354b22de() { if(!empty($this->file_name) && substr($this->file_name,strlen($this->file_name)-1) != "/") $this->file_name .= "/"; } private function f085037e150($v250a1176c9) { $v250a1176c9 = basename($v250a1176c9); return array_search($v250a1176c9, $this->invalid_files) === false ? true : false; } public function setFileName($v250a1176c9) { $this->file_name = $v250a1176c9; $this->f7b354b22de(); } } ?>
