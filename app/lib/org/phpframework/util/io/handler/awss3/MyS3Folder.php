<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.util.io.handler.awss3.MyS3Handler"); include_once get_lib("org.phpframework.util.io.handler.awss3.MyS3File"); class MyS3Folder extends MyS3Handler { public $invalid_files = array("..", ".svn"); private $v19cbfb3aee = "/"; private $v1da936ab40; public function __construct($v614e1f4104, $v253839514f, $v30857f7eca = array()) { parent::__construct($v614e1f4104, $v253839514f); if(is_array($v30857f7eca["invalid_files"])) $this->invalid_files = array_merge($this->invalid_files, $v30857f7eca["invalid_files"]); $this->v1da936ab40 = new MyS3File($v614e1f4104, $v253839514f); } public function getFiles($v4907c60569, $pdcf670f6 = null, $v6124659e37 = null, $v46f968c5b7 = null) { $v0c98cda30e = $this->getFolderType(); $pb8a2e3ca = new S3Request("GET", $v4907c60569, ""); if ($pdcf670f6 !== null && $pdcf670f6 !== "") { $pdcf670f6 = $this->f8c19add638($pdcf670f6); $pb8a2e3ca->setParameter("prefix", $pdcf670f6); } if ($v6124659e37 !== null && $v6124659e37 !== "") $pb8a2e3ca->setParameter("marker", $v6124659e37); if ($v46f968c5b7 !== null && $v46f968c5b7 !== "") $pb8a2e3ca->setParameter("max-keys", $v46f968c5b7); if ($this->v19cbfb3aee !== null && $this->v19cbfb3aee !== "") $pb8a2e3ca->setParameter("delimiter", $this->v19cbfb3aee); $v7bd5d88a74 = $pb8a2e3ca->getResponse(); if ($v7bd5d88a74->error === false && $v7bd5d88a74->code !== 200) $v7bd5d88a74->error = array("code" => $v7bd5d88a74->code, "message" => "Unexpected HTTP status"); if ($v7bd5d88a74->error !== false) { trigger_error(sprintf("S3::getBucket(): [%s] %s", $v7bd5d88a74->error["code"], $v7bd5d88a74->error["message"]), E_USER_WARNING); return false; } $pacc2b83d = null; $v4170eebbfd = null; $v6ee393d9fb = array(); if(isset($v7bd5d88a74->body)) { $v37339f624a = strlen($pdcf670f6); if (isset($v7bd5d88a74->body->Contents)) { foreach ($v7bd5d88a74->body->Contents as $v9a8b7dc209) { $v250a1176c9 = substr((string)$v9a8b7dc209->Key, $v37339f624a); if($this->f085037e150(basename($v250a1176c9)) && $v250a1176c9 != ".") { $v3fb9f41470 = $this->getType($v250a1176c9); if($v3fb9f41470["id"] == $v0c98cda30e["id"]) { $pe2ea577f = dirname($v250a1176c9); $v6ee393d9fb[$pe2ea577f] = array( "path" => $pdcf670f6 . $pe2ea577f, "name" => basename($pe2ea577f), "type" => $v3fb9f41470["id"], "type_desc" => $v3fb9f41470["desc"] ); } else { $v6ee393d9fb[$v250a1176c9] = array( "path" => $pdcf670f6 . $v250a1176c9, "name" => basename($v250a1176c9), "time" => strtotime((string)$v9a8b7dc209->LastModified), "size" => (int)$v9a8b7dc209->Size, "hash" => substr((string)$v9a8b7dc209->ETag, 1, -1), "type" => $v3fb9f41470["id"], "type_desc" => $v3fb9f41470["desc"] ); } } $pacc2b83d = (string)$v9a8b7dc209->Key; } } if (isset($v7bd5d88a74->body->CommonPrefixes)) { foreach ($v7bd5d88a74->body->CommonPrefixes as $v9a8b7dc209) { $pe2ea577f = substr((string)$v9a8b7dc209->Prefix, $v37339f624a); if($this->f085037e150(basename($pe2ea577f))) { $pe2ea577f = $this->v19cbfb3aee && substr($pe2ea577f, strlen($pe2ea577f) - 1) == $this->v19cbfb3aee ? substr($pe2ea577f, 0, strlen($pe2ea577f) - strlen($this->v19cbfb3aee)) : $pe2ea577f; $v6ee393d9fb[$pe2ea577f] = array( "name" => basename($pe2ea577f), "path" => $pdcf670f6 . $pe2ea577f, "type" => $v0c98cda30e["id"], "type_desc" => $v0c98cda30e["desc"] ); } $pacc2b83d = (string)$v9a8b7dc209->Prefix; } } $v4170eebbfd = (string)$v7bd5d88a74->body->IsTruncated == "true" ? true : false; } if ($v46f968c5b7 == null && $pacc2b83d !== null && $v4170eebbfd) do { $v9fa64d01df = $this->getFiles($v4907c60569, $pdcf670f6, $pacc2b83d, $v46f968c5b7); if(is_array($v9fa64d01df)) { $v6ee393d9fb = array_merge($v6ee393d9fb, $v9fa64d01df["files"]); $v4170eebbfd = $v9fa64d01df["is_truncate"]; $pacc2b83d = $v9fa64d01df["last_marker"]; } } while ($v9fa64d01df !== false && $v4170eebbfd); $v9ad1385268["files"] = $v6ee393d9fb; $v9ad1385268["is_truncate"] = $v4170eebbfd; $v9ad1385268["last_marker"] = $v4170eebbfd ? $pacc2b83d : ""; return $v9ad1385268; } public function getFilesRecursevly($v4907c60569, $pdcf670f6 = null) { $pdcf670f6 = $this->f8c19add638($pdcf670f6); $v1bac646f6c = $this->v19cbfb3aee; $this->v19cbfb3aee = ""; $v9ad1385268 = $this->getFiles($v4907c60569, $pdcf670f6); $this->v19cbfb3aee = $v1bac646f6c; $pf8cf3784 = array(); $pf8cf3784["files"] = $this->f569e8c7d65($v9ad1385268["files"], "."); $pf8cf3784["is_truncate"] = false; $pf8cf3784["last_marker"] = ""; return $pf8cf3784; } public function getFilesCount($v4907c60569, $pdcf670f6 = null) { $v9ad1385268 = $this->getFiles($v4907c60569, $pdcf670f6); $v9994512d98 = array_keys($v9ad1385268["files"]); return count($v9994512d98); } public function delete($v4907c60569, $pdcf670f6 = null) { $pdcf670f6 = $this->f8c19add638($pdcf670f6); $v1bac646f6c = $this->v19cbfb3aee; $this->v19cbfb3aee = ""; $v6ee393d9fb = $this->getFiles($v4907c60569, $pdcf670f6); $this->v19cbfb3aee = $v1bac646f6c; $v0c98cda30e = $this->getFolderType(); $v5c1c342594 = true; foreach($v6ee393d9fb["files"] as $v67db1bd535) { $pa32be502 = $v67db1bd535["type"] == $v0c98cda30e["id"] ? $v67db1bd535["path"] . "/." : $v67db1bd535["path"]; if(!$this->v1da936ab40->delete($v4907c60569, $pa32be502)) $v5c1c342594 = false; } if($v5c1c342594) $v5c1c342594 = $this->v1da936ab40->delete($v4907c60569, $pdcf670f6 . "."); return $v5c1c342594; } public function copy($paf30694d, $v610ffcd737, $pb6689abe, $v338d556056, $v8b27c73d0e = "p") { if($paf30694d == $pb6689abe && $v610ffcd737 == $v338d556056) return false; $v5c1c342594 = true; $v6ee393d9fb = $this->getFilesRecursevly($paf30694d, $v610ffcd737); $v6ee393d9fb = $v6ee393d9fb["files"]; $v9994512d98 = array_keys($v6ee393d9fb); $pc37695cb = count($v9994512d98); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v7dffdb5a5b = $v6ee393d9fb[ $v9994512d98[$v43dd7d0051] ]; $pc0f3a0c5 = substr($v7dffdb5a5b["path"], strlen($v610ffcd737)); $pc302e3e3 = $v338d556056 . $pc0f3a0c5; if(!$this->v1da936ab40->copy($paf30694d, $v7dffdb5a5b["path"], $pb6689abe, $pc302e3e3, $v8b27c73d0e)) $v5c1c342594 = false; } return $v5c1c342594; } private function f569e8c7d65($v6ee393d9fb, $v3875aea213, $v8a4df75785 = 0) { $v95f2faaab2 = array(); if(is_array($v6ee393d9fb)) { $v0c98cda30e = $this->getFolderType(); $v9994512d98 = array_keys($v6ee393d9fb); $pc37695cb = count($v9994512d98); for($v43dd7d0051 = $v8a4df75785; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v250a1176c9 = $v9994512d98[$v43dd7d0051]; $pe2ea577f = dirname($v250a1176c9); if($pe2ea577f == $v3875aea213) { $v67db1bd535 = $v6ee393d9fb[$v9994512d98[$v43dd7d0051]]; if($v67db1bd535["type"] == $v0c98cda30e["id"]) { $v67db1bd535["subfiles"] = $this->f569e8c7d65($v6ee393d9fb, $v250a1176c9, $v43dd7d0051 + 1); } $v3ffda1ef79 = basename($v250a1176c9); $v95f2faaab2[$v3ffda1ef79] = $v67db1bd535; } } } return $v95f2faaab2; } private function f8c19add638($pdcf670f6) { if ($pdcf670f6 !== null && $pdcf670f6 !== "") { $pdcf670f6 .= substr($pdcf670f6, strlen($pdcf670f6) - strlen($this->v19cbfb3aee)) != $this->v19cbfb3aee ? $this->v19cbfb3aee : ""; } return $pdcf670f6; } private function f085037e150($v250a1176c9) { $v250a1176c9 = basename($v250a1176c9); return array_search($v250a1176c9, $this->invalid_files) === false ? true : false; } } ?>
