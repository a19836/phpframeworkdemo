<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
include_once get_lib("org.phpframework.xmlfile.XMLFileParser"); include get_lib("org.phpframework.module.exception.ModulePathException"); class ModulePathHandler { public static function getModuleFolderPath($pcd8c70bc, $v810cb863ed, $pa2bba2ac, &$pe61ee068, $v30857f7eca, $pad21ece4) { $v11506aed93 = self::getModulePath($pcd8c70bc, $v810cb863ed, $pa2bba2ac, $pe61ee068, $v30857f7eca, $pad21ece4, true); if ($v11506aed93) { if (is_dir($v11506aed93)) return $v11506aed93; launch_exception(new ModulePathException(2, array(get_class($pad21ece4->getLayer()), $v11506aed93))); return false; } } public static function getModuleFilePath($pcd8c70bc, $v810cb863ed, $pa2bba2ac, &$pe61ee068, $v30857f7eca, $pad21ece4) { $v11506aed93 = self::getModulePath($pcd8c70bc, $v810cb863ed, $pa2bba2ac, $pe61ee068, $v30857f7eca, $pad21ece4, false); if ($v11506aed93) { if (file_exists($v11506aed93)) return $v11506aed93; launch_exception(new ModulePathException(2, array(get_class($pad21ece4->getLayer()), $v11506aed93))); return false; } } public static function getModulePath($pcd8c70bc, $v810cb863ed, $pa2bba2ac, &$pe61ee068, $v30857f7eca, $pad21ece4, $pab3bfc5f) { if (!$pcd8c70bc) { launch_exception(new ModulePathException(3, get_class($pad21ece4->getLayer()))); return false; } if (isset($pe61ee068[$pcd8c70bc])) { if (!file_exists($pe61ee068[$pcd8c70bc]) && file_exists($pa2bba2ac . $pe61ee068[$pcd8c70bc])) return $pa2bba2ac . $pe61ee068[$pcd8c70bc] . ($pab3bfc5f ? "/" : ""); return $pe61ee068[$pcd8c70bc]; } if ($pad21ece4->cachedModulesPathExists()) $pe61ee068 = $pad21ece4->getCachedModulesPath(); else { $pcdded98a = self::getRelativeModulesPath($v810cb863ed, $v30857f7eca); foreach($pcdded98a as $pbfa01ed1 => $v67db1bd535) if ($v67db1bd535 && empty($pe61ee068[$pbfa01ed1])) $pe61ee068[$pbfa01ed1] = $pa2bba2ac . $v67db1bd535 . ($pab3bfc5f ? "/" : ""); $pad21ece4->setCachedModulesPath($pe61ee068); } if (isset($pe61ee068[$pcd8c70bc]) && !file_exists($pe61ee068[$pcd8c70bc]) && file_exists($pa2bba2ac . $pe61ee068[$pcd8c70bc])) $pe61ee068[$pcd8c70bc] = $pa2bba2ac . $pe61ee068[$pcd8c70bc] . ($pab3bfc5f ? "/" : ""); else if (!isset($pe61ee068[$pcd8c70bc]) && file_exists($pa2bba2ac . $pcd8c70bc)) $pe61ee068[$pcd8c70bc] = $pa2bba2ac . $pcd8c70bc . ($pab3bfc5f ? "/" : ""); if (isset($pe61ee068[$pcd8c70bc]) && $pe61ee068[$pcd8c70bc]) { $pad21ece4->setCachedModulesPath($pe61ee068); return $pe61ee068[$pcd8c70bc]; } $v1358251cc9 = strtolower(trim($pcd8c70bc)); if ($pe61ee068) foreach ($pe61ee068 as $pbfa01ed1 => $v67db1bd535) if (strtolower(trim($pbfa01ed1)) == $v1358251cc9) { $pe61ee068[$pcd8c70bc] = $v67db1bd535; $pad21ece4->setCachedModulesPath($pe61ee068); return $v67db1bd535; } $v11506aed93 = self::getModulePathFromFileSystem($pcd8c70bc, $pa2bba2ac, $pab3bfc5f); if ($v11506aed93 && file_exists($v11506aed93)) { $pe61ee068[$pcd8c70bc] = $v11506aed93; $pad21ece4->setCachedModulesPath($pe61ee068); return $v11506aed93; } launch_exception(new ModulePathException(1, array(get_class($pad21ece4->getLayer()), $pcd8c70bc))); return false; } public static function getModulePathFromFileSystem($pcd8c70bc, $pa2bba2ac, $pab3bfc5f) { $v11506aed93 = false; $v1358251cc9 = strtolower(trim($pcd8c70bc)); $v943d04e731 = array(); if (is_dir($pa2bba2ac) && ($v89d33f4133 = opendir($pa2bba2ac)) ) { while( ($v7dffdb5a5b = readdir($v89d33f4133)) !== false) { if (is_dir($pa2bba2ac . "/" . $v7dffdb5a5b)) { $v795b31a7d3[] = $v7dffdb5a5b; if (strtolower(trim($v7dffdb5a5b)) == $v1358251cc9) { $v11506aed93 = $pa2bba2ac . "/" . $v7dffdb5a5b . ($pab3bfc5f ? "/" : ""); $v11506aed93 = preg_replace("/\/+/", "/", $v11506aed93); break; } } } closedir($v89d33f4133); } if (empty($v11506aed93)) { $v1b2635f9b7 = $pcd8c70bc; $pa601b049 = $pa2bba2ac; do { $v1695c62df3 = false; $pbd1bc7b0 = strpos($v1b2635f9b7, "."); if ($pbd1bc7b0 > 0) { $v873b3f8d0d = substr($v1b2635f9b7, 0, $pbd1bc7b0); $v6eed40cc27 = substr($v1b2635f9b7, $pbd1bc7b0 + 1); $v5cd4aba550 = self::getModulePathFromFileSystem($v873b3f8d0d, $pa601b049, $pab3bfc5f); if ($v5cd4aba550) { if (file_exists($v5cd4aba550 . "/" . $v6eed40cc27)) { $v11506aed93 = $v5cd4aba550 . "/" . $v6eed40cc27 . ($pab3bfc5f ? "/" : ""); $v11506aed93 = preg_replace("/\/+/", "/", $v11506aed93); } else if (strpos($v6eed40cc27, ".") > 0) { $pa601b049 = $v5cd4aba550; $v1b2635f9b7 = $v6eed40cc27; $v1695c62df3 = true; } } } } while($v1695c62df3); } return $v11506aed93; } public static function getRelativeModulesPath($pf3dc0762, $v30857f7eca) { $v538cb1a1f7 = get_lib("org.phpframework.xmlfile.schema.modules", "xsd"); $v50d32a6fc4 = XMLFileParser::parseXMLFileToArray($pf3dc0762, array("vars" => $v30857f7eca), $v538cb1a1f7); $pa266c7f5 = is_array($v50d32a6fc4) ? array_keys($v50d32a6fc4) : array(); $pa266c7f5 = isset($pa266c7f5[0]) ? $pa266c7f5[0] : null; $v3a888dc41c = $pa266c7f5 && isset($v50d32a6fc4[$pa266c7f5][0]["childs"]["module"]) ? $v50d32a6fc4[$pa266c7f5][0]["childs"]["module"] : null; $pe61ee068 = array(); $pc37695cb = $v3a888dc41c ? count($v3a888dc41c) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $pc8b88eb4 = $v3a888dc41c[$v43dd7d0051]; $v1cbfbb49c5 = XMLFileParser::getAttribute($pc8b88eb4, "id"); $v67db1bd535 = XMLFileParser::getValue($pc8b88eb4); $pe61ee068[$v1cbfbb49c5] = $v67db1bd535; } return $pe61ee068; } } ?>
