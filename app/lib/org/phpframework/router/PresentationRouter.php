<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
include_once get_lib("org.phpframework.router.exception.PresentationRouterException"); include_once get_lib("org.phpframework.xmlfile.XMLFileParser"); class PresentationRouter { private $pac960331; public $settings; private $pd3623f40; private $v08d9602741; public function __construct($v30857f7eca = array()) { $this->settings = $v30857f7eca; $this->pac960331 = array(); } public function setPresentationLayer($pd3623f40) { $this->pd3623f40 = $pd3623f40; } public function getPresentationLayer() { return $this->pd3623f40; } public function load() { if (empty($this->settings["routers_path"])) launch_exception(new PresentationRouterException(1, "PresentationRouter->settings[routers_path]")); if (empty($this->settings["routers_file_name"])) launch_exception(new PresentationRouterException(1, "PresentationRouter->settings[routers_file_name]")); $pf3dc0762 = $this->pd3623f40->getSelectedPresentationSetting("presentation_path") . $this->settings["routers_path"] . $this->settings["routers_file_name"]; if(file_exists($pf3dc0762)) { $v00ba50906a = $this->pd3623f40->getSelectedPresentationId(); if($this->pd3623f40->getModuleCacheLayer()->cachedModuleRoutersExists($v00ba50906a)) { $this->pac960331 = $this->pd3623f40->getModuleCacheLayer()->getCachedModuleRouters($v00ba50906a); } else { $v538cb1a1f7 = get_lib("org.phpframework.xmlfile.schema.routers", "xsd"); $v50d32a6fc4 = XMLFileParser::parseXMLFileToArray($pf3dc0762, false, $v538cb1a1f7); $pa266c7f5 = is_array($v50d32a6fc4) ? array_keys($v50d32a6fc4) : array(); $pa266c7f5 = isset($pa266c7f5[0]) ? $pa266c7f5[0] : null; $v7d90134003 = $pa266c7f5 && isset($v50d32a6fc4[$pa266c7f5][0]["childs"]["router"]) ? $v50d32a6fc4[$pa266c7f5][0]["childs"]["router"] : null; $pac960331 = array(); $pc37695cb = $v7d90134003 ? count($v7d90134003) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v291a0c3575 = $v7d90134003[$v43dd7d0051]; $v391cc249fc = XMLFileParser::getAttribute($v291a0c3575, "to_search"); $v2c5062f1e7 = XMLFileParser::getAttribute($v291a0c3575, "to_replace"); $pac960331[] = array($v391cc249fc, $v2c5062f1e7); } $this->pac960331 = $pac960331; $this->pd3623f40->getModuleCacheLayer()->setCachedModuleRouters($v00ba50906a, $this->pac960331); } } else { $this->pac960331 = array(); } } public function parse($v6f3a2700dd) { $v2e0a199198 = substr($v6f3a2700dd, strlen($v6f3a2700dd) - 1) == "/" ? substr($v6f3a2700dd, 0, strlen($v6f3a2700dd) - 1) : $v6f3a2700dd; $pf5471f4c = $this->f0b54ec59b3($v2e0a199198); if($pf5471f4c == $v2e0a199198) { $pf5471f4c = $this->f0b54ec59b3($v6f3a2700dd); if($pf5471f4c == $v6f3a2700dd) { $v91c08a49b9 = substr($v6f3a2700dd, strlen($v6f3a2700dd) - 1) != "/" ? $v6f3a2700dd."/" : $v6f3a2700dd; $pf5471f4c = $this->f0b54ec59b3($v91c08a49b9); } } return $pf5471f4c; } private function f0b54ec59b3($v6f3a2700dd) { $pc37695cb = count($this->pac960331); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v24ae7766cb = $this->pac960331[$v43dd7d0051]; $v16cdc8e993 = isset($v24ae7766cb[0]) ? $v24ae7766cb[0] : null; $pf5471f4c = isset($v24ae7766cb[1]) ? $v24ae7766cb[1] : null; $v5f7147fb39 = $this->med0ef0adfbf7($v16cdc8e993); if(preg_match_all($v5f7147fb39, $v6f3a2700dd, $pbae7526c)) { $pa293a3d3 = array(); $pc37695cb = count($pbae7526c); for($v9d27441e80 = 1; $v9d27441e80 < $pc37695cb; $v9d27441e80++) $pa293a3d3[] = $pbae7526c[$v9d27441e80][0]; $pf5471f4c = str_replace("&lt;?", "<?", $pf5471f4c); $pf5471f4c = str_replace("?&gt;", "?>", $pf5471f4c); $v761f4d757f = array("input" => $pa293a3d3); $pf5471f4c = PHPScriptHandler::parseContent($pf5471f4c, $v761f4d757f); if(strpos($pf5471f4c, "?") !== false) { $v9cd205cadb = explode("?", $pf5471f4c); $pf5471f4c = $v9cd205cadb[0]; $pc2defd39 = isset($v9cd205cadb[1]) ? $v9cd205cadb[1] : null; $this->me98b59dcd564($pc2defd39); } return $pf5471f4c; } } return $v6f3a2700dd; } private function me98b59dcd564($pc2defd39) { $v9cd205cadb = explode("&", $pc2defd39); $pc37695cb = count($v9cd205cadb); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v1d2d80ed32 = $v9cd205cadb[$v43dd7d0051]; $v9528dfc5db = explode("=", $v1d2d80ed32); $v847e7d0a83 = trim($v9528dfc5db[0]); $v67db1bd535 = isset($v9528dfc5db[1]) ? urldecode($v9528dfc5db[1]) : null; if ($v847e7d0a83) $_GET[$v847e7d0a83] = $v67db1bd535; } } private function med0ef0adfbf7($v16cdc8e993) { $v5f7147fb39 = "/^" . preg_quote($v16cdc8e993, "/") . "$/iu"; return $v5f7147fb39; } } ?>
