<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.sqlmap.SQLMapClient"); include get_lib("org.phpframework.sqlmap.SQLMapQueryHandler"); include get_lib("org.phpframework.sqlmap.SQLMapResultHandler"); include_once get_lib("org.phpframework.sqlmap.SQLMapIncludesHandler"); include get_lib("org.phpframework.sqlmap.ibatis.IBatisClientCache"); include get_lib("org.phpframework.sqlmap.ibatis.exception.IBatisException"); class IBatisClient extends SQLMapClient { private $v1858b40c12; private $pab442502; public function __construct() { parent::__construct(); $this->v1858b40c12 = new SQLMapQueryHandler(); $this->pab442502 = new SQLMapResultHandler(); $this->setSQLMapClientCache(new IBatisClientCache()); } public function loadXML($v45952cf45c) { if ($this->getSQLMapClientCache()->cachedXMLElmExists($v45952cf45c)) { $v50d32a6fc4 = $this->getSQLMapClientCache()->getCachedXMLElm($v45952cf45c); $this->setNodesData($v50d32a6fc4); } else { $v538cb1a1f7 = get_lib("org.phpframework.xmlfile.schema.ibatis_sql_mapping", "xsd"); $v50d32a6fc4 = XMLFileParser::parseXMLFileToArray($v45952cf45c, false, $v538cb1a1f7); $pa266c7f5 = is_array($v50d32a6fc4) ? array_keys($v50d32a6fc4) : array(); $pa266c7f5 = isset($pa266c7f5[0]) ? $pa266c7f5[0] : null; if ($pa266c7f5 && !empty($v50d32a6fc4[$pa266c7f5][0]["childs"])) { $v50d32a6fc4 = self::getDataAccessNodesConfigured($v50d32a6fc4[$pa266c7f5][0]["childs"]); } else { $v50d32a6fc4 = array(); } $this->setNodesData($v50d32a6fc4); $this->getSQLMapClientCache()->setCachedXMLElm($v45952cf45c, $v50d32a6fc4); } } public function getQuery($pc221318a, $v71571534b0) { $pc221318a = strtolower($pc221318a); $pc28d161b = array("insert", "update", "delete", "select", "procedure"); if(in_array($pc221318a, $pc28d161b)) { $v50d32a6fc4 = $this->getNodesData(); if(isset($v50d32a6fc4[$pc221318a][$v71571534b0])) { return $v50d32a6fc4[$pc221318a][$v71571534b0]; } else { launch_exception(new IBatisException(2, array($pc221318a, $v71571534b0))); } } else { launch_exception(new IBatisException(1, array($pc221318a, $pc28d161b))); } return false; } public function getQuerySQL($v9d1744e29c, $v9367d5be85 = false, $v5d3813882f = false) { if($v9d1744e29c) { $this->f476e34bf68($v9d1744e29c, $v9367d5be85); $v3c76382d93 = XMLFileParser::getValue($v9d1744e29c); $v579230f9a8 = isset($v5d3813882f["auto_add_slashes"]) ? $v5d3813882f["auto_add_slashes"] : XMLFileParser::getAttribute($v9d1744e29c, "auto_add_slashes"); $v579230f9a8 = strtolower($v579230f9a8); $v579230f9a8 = empty($v579230f9a8) || (strlen($v579230f9a8) > 0 && ($v579230f9a8 == "0" || in_array($v579230f9a8, array("false", "no", "off")))) ? false : true; $this->v1858b40c12->configureQuery($v3c76382d93, $v9367d5be85, $v579230f9a8); if($this->getErrorHandler()->ok()) { return $v3c76382d93; } } return false; } public function getLibsOfResultClassAndMap($v9d1744e29c) { $v21ff8db28c = XMLFileParser::getAttribute($v9d1744e29c, "result_class"); $pce128343 = XMLFileParser::getAttribute($v9d1744e29c, "result_map"); if($pce128343) { $v8ce36c307f = $this->getNodesData(); if(isset($v8ce36c307f["result_map"][$pce128343])) { $pce128343 = $v8ce36c307f["result_map"][$pce128343]; } else { launch_exception(new SQLMapResultException(4)); } } $pc06f1034 = SQLMapIncludesHandler::getLibsOfResultClassAndMap($v21ff8db28c, $pce128343); return $pc06f1034; } public function execQuery($v9d1744e29c, $v9367d5be85 = false, $v5d3813882f = false) { if($v9d1744e29c) { $v3c76382d93 = $this->getQuerySQL($v9d1744e29c, $v9367d5be85, $v5d3813882f); $pc221318a = isset($v9d1744e29c["name"]) ? strtolower($v9d1744e29c["name"]) : null; $v21ff8db28c = XMLFileParser::getAttribute($v9d1744e29c, "result_class"); $pce128343 = XMLFileParser::getAttribute($v9d1744e29c, "result_map"); $v1e607bd044 = XMLFileParser::getAttribute($v9d1744e29c, "hard_coded_ai_pk"); if($v21ff8db28c && $pce128343) launch_exception(new IBatisException(4, XMLFileParser::getAttribute($v9d1744e29c, "id"))); if($this->getErrorHandler()->ok()) { if($pc221318a == "select") { return $this->mb316fcc1da82($v3c76382d93, $v21ff8db28c, $pce128343, $v5d3813882f); } elseif($pc221318a == "procedure") { return $this->f4271a67722($v3c76382d93, $v21ff8db28c, $pce128343, $v5d3813882f); } else { if ($v1e607bd044 && (!$v5d3813882f || is_array($v5d3813882f))) { if (!is_array($v5d3813882f)) $v5d3813882f = array(); $v5d3813882f["hard_coded_ai_pk"] = $v1e607bd044; } return $this->ma95d179add73($v3c76382d93, $v5d3813882f); } } } return false; } private function f4271a67722($v3c76382d93, $v21ff8db28c, $pce128343, $v5d3813882f) { $v539082ff30 = $this->getData($v3c76382d93, $v5d3813882f); if(count($v539082ff30) && $this->getErrorHandler()->ok()) { $this->pab442502->transformData($v539082ff30, $v21ff8db28c, $pce128343, $this->getNodesData()); return $v539082ff30; } return false; } private function mb316fcc1da82($v3c76382d93, $v21ff8db28c, $pce128343, $v5d3813882f) { if (is_array($v5d3813882f) && !empty($v5d3813882f["sort"])) { $this->pab442502->configureSortOptions($v5d3813882f["sort"], $pce128343, $this->getNodesData()); } $v539082ff30 = $this->getData($v3c76382d93, $v5d3813882f); if(count($v539082ff30) && $this->getErrorHandler()->ok()) { $this->pab442502->transformData($v539082ff30, $v21ff8db28c, $pce128343, $this->getNodesData()); return $v539082ff30; } return false; } private function ma95d179add73($v3c76382d93, $v5d3813882f) { $v5c1c342594 = $this->setData($v3c76382d93, $v5d3813882f); if($this->getErrorHandler()->ok()) { return $v5c1c342594 ? true : false; } elseif(is_a($v5c1c342594, "Exception")) return $v5c1c342594; return false; } private function f476e34bf68($v9d1744e29c, &$v9367d5be85) { if($v9d1744e29c) { $v217e7cf3c0 = XMLFileParser::getAttribute($v9d1744e29c, "parameter_class"); $v2967293505 = XMLFileParser::getAttribute($v9d1744e29c, "parameter_map"); if($v217e7cf3c0 && $v2967293505) { launch_exception(new IBatisException(3, XMLFileParser::getAttribute($v9d1744e29c, "id"))); } $this->v1858b40c12->transformData($v9367d5be85, $v217e7cf3c0, $v2967293505, $this->getNodesData()); } } } ?>
