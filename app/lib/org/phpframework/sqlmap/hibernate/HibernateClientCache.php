<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.sqlmap.SQLMapClientCache"); class HibernateClientCache extends SQLMapClientCache { const CACHE_DIR_NAME = "__system/hibernate/"; const PHP_CLASS_SUFFIX_PATH = "phpclasses/"; public function cachedPHPClassExists($v1335217393) { $pf3dc0762 = $this->getCachedPHPClassPath($v1335217393); if($pf3dc0762 && $this->isCachePHPClassValid($pf3dc0762)) { return true; } return false; } public function setCachedPHPClass($v1335217393, $v539082ff30) { $pf3dc0762 = $this->getCachedPHPClassPath($v1335217393); if($pf3dc0762) { if(($v7dffdb5a5b = fopen($pf3dc0762, "w"))) { $v5c1c342594 = fputs($v7dffdb5a5b, $v539082ff30); fclose($v7dffdb5a5b); return $v5c1c342594 === false ? false : true; } } return false; } public function initCacheDirPath($v17be587282) { if(!$this->cache_root_path) { if($v17be587282) { CacheHandlerUtil::configureFolderPath($v17be587282); $v17be587282 .= self::CACHE_DIR_NAME; if(CacheHandlerUtil::preparePath($v17be587282)) { CacheHandlerUtil::configureFolderPath($v17be587282); $this->cache_root_path = $v17be587282; CacheHandlerUtil::preparePath($this->cache_root_path . self::PHP_CLASS_SUFFIX_PATH); } } } } public function getCachedPHPClassPath($v1335217393) { if($this->cache_root_path && $v1335217393) { return $this->cache_root_path . self::PHP_CLASS_SUFFIX_PATH . $v1335217393 . ".php"; } return false; } public function isCachePHPClassValid($pf3dc0762) { if($pf3dc0762 && file_exists($pf3dc0762)) return filemtime($pf3dc0762) + $this->cache_ttl < time() ? false : true; return false; } } ?>
