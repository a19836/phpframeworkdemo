<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
include_once get_lib("org.phpframework.sqlmap.SQLMap"); include_once get_lib("org.phpframework.util.MyArray"); class HibernateClassHandler extends SQLMap { private $v1c4e9bcf02; private $pdb735a1c; public function __construct() { parent::__construct(); } public function setRDBBroker($pdb735a1c) { $this->pdb735a1c = $pdb735a1c; } public function setHibernateClientCache($v1c4e9bcf02) { $this->v1c4e9bcf02 = $v1c4e9bcf02; } public function getClassFilePath($pf79ea8fc, $pf232dd5a, $v5d3813882f = false) { $pf3dc0762 = $this->v1c4e9bcf02->getCachedPHPClassPath($pf79ea8fc); if ($this->v1c4e9bcf02->cachedPHPClassExists($pf79ea8fc)) return $pf3dc0762; else { $pae77d38c = $this->f023f92cd61($pf79ea8fc, $pf232dd5a, $v5d3813882f); if ($this->v1c4e9bcf02->setCachedPHPClass($pf79ea8fc, $pae77d38c)) return $pf3dc0762; } return false; } private function f023f92cd61($pf79ea8fc, $pf232dd5a, $v5d3813882f = false) { $v99ac1f1816 = XMLFileParser::getAttribute($pf232dd5a, "extends"); $pc661dc6b = XMLFileParser::getAttribute($pf232dd5a, "table"); $v55c0c0e582 = XMLFileParser::getAttribute($pf232dd5a, "name"); $v55c0c0e582 = $v55c0c0e582 ? $v55c0c0e582 : $pf79ea8fc; if($v99ac1f1816) { $v77f1de838b = $v99ac1f1816; $pbbf7c473 = explode(".", $v99ac1f1816); $pbbf7c473 = $pbbf7c473[count($pbbf7c473) - 1]; $pbbf7c473 = explode("(", $pbbf7c473); $pbbf7c473 = $pbbf7c473[0]; } else { $v77f1de838b = "org.phpframework.sqlmap.hibernate.HibernateModel"; $pbbf7c473 = "HibernateModel"; } $v217e7cf3c0 = XMLFileParser::getAttribute($pf232dd5a, "parameter_class"); $v2967293505 = isset($pf232dd5a["childs"]["parameter_map"][0]) ? $pf232dd5a["childs"]["parameter_map"][0] : null; $v21ff8db28c = XMLFileParser::getAttribute($pf232dd5a, "result_class"); $pce128343 = isset($pf232dd5a["childs"]["result_map"][0]) ? $pf232dd5a["childs"]["result_map"][0] : null; $v32f28291a1 = isset($pf232dd5a["childs"]["id"]) ? $pf232dd5a["childs"]["id"] : null; $pef349725 = !empty($v2967293505["parameter"]) ? $v2967293505["parameter"] : array(); $peb011cd3 = isset($pf232dd5a["childs"]["relationships"]["many_to_one"]) ? $pf232dd5a["childs"]["relationships"]["many_to_one"] : null; $pf40bba44 = isset($pf232dd5a["childs"]["relationships"]["many_to_many"]) ? $pf232dd5a["childs"]["relationships"]["many_to_many"] : null; $pdb5afb26 = isset($pf232dd5a["childs"]["relationships"]["one_to_many"]) ? $pf232dd5a["childs"]["relationships"]["one_to_many"] : null; $v338b04e388 = isset($pf232dd5a["childs"]["relationships"]["one_to_one"]) ? $pf232dd5a["childs"]["relationships"]["one_to_one"] : null; $v1612a5ddce = isset($pf232dd5a["childs"]["queries"]) ? $pf232dd5a["childs"]["queries"] : null; $v6dcfcf75f7 = $this->pdb735a1c->getFunction("listTableFields", $pc661dc6b, $v5d3813882f); $v3b17ed57b4 = $v32f28291a1; $pb6c78833 = $this->mdddc86a46df5($pef349725); $paeec5f17 = self::assignResultMapToRelations($peb011cd3, $pf232dd5a); $v16eae71807 = self::assignResultMapToRelations($pf40bba44, $pf232dd5a); $v55c4f470cd = self::assignResultMapToRelations($pdb5afb26, $pf232dd5a); $pa5daae6a = self::assignResultMapToRelations($v338b04e388, $pf232dd5a); $v4e9f2aa41c = $v1612a5ddce; $v3b17ed57b4 = $this->mbd53f8176295($v3b17ed57b4, $v6dcfcf75f7, $pb6c78833); $pb6c78833 = $this->mbf2fc3bc9efd($pb6c78833, $v3b17ed57b4); $v5cdc9cec4a = $this->me5f16e9847b0($pb6c78833, $v6dcfcf75f7); $v3b17ed57b4 = is_array($v3b17ed57b4) ? $v3b17ed57b4 : array(); $v6dcfcf75f7 = is_array($v6dcfcf75f7) ? $v6dcfcf75f7 : array(); $paeec5f17 = is_array($paeec5f17) ? $paeec5f17 : array(); $v16eae71807 = is_array($v16eae71807) ? $v16eae71807 : array(); $v55c4f470cd = is_array($v55c4f470cd) ? $v55c4f470cd : array(); $pa5daae6a = is_array($pa5daae6a) ? $pa5daae6a : array(); $v4e9f2aa41c = is_array($v4e9f2aa41c) ? $v4e9f2aa41c : array(); $v5cdc9cec4a = is_array($v5cdc9cec4a) ? $v5cdc9cec4a : array(); if($v217e7cf3c0 && $v2967293505) { launch_exception(new HibernateException(4, XMLFileParser::getAttribute($pf232dd5a, "name"))); } if($v21ff8db28c && $pce128343) { launch_exception(new HibernateException(5, XMLFileParser::getAttribute($pf232dd5a, "name"))); } $v067674f4e4 = "<?php
include_once get_lib('{$v77f1de838b}');

class $pf79ea8fc extends $pbbf7c473 {
	
	public function __construct() {
		parent::__construct();
		
		\$this->setDefaultOptions(".MyArray::arrayToString( $v5d3813882f ).");
		
		\$this->setObjName('".$v55c0c0e582."');
		\$this->setTableName('".$pc661dc6b."');
		\$this->setExtendClassName('".$pbbf7c473."');
		\$this->setExtendClassPath('".$v77f1de838b."');
		
		\$this->setParameterClass('".$v217e7cf3c0."');
		\$this->setParameterMap(".MyArray::arrayToString( $v2967293505 ).");
		\$this->setResultClass('".$v21ff8db28c."');
		\$this->setResultMap(".MyArray::arrayToString( $pce128343 ).");
		
		\$this->setIds(".MyArray::arrayToString( $v3b17ed57b4 ).");
		\$this->setTableAttributes(".MyArray::arrayToString( $v6dcfcf75f7 ).");
		\$this->setManyToOne(".MyArray::arrayToString( $paeec5f17 ).");
		\$this->setManyToMany(".MyArray::arrayToString( $v16eae71807 ).");
		\$this->setOneToMany(".MyArray::arrayToString( $v55c4f470cd ).");
		\$this->setOneToOne(".MyArray::arrayToString( $pa5daae6a ).");
		\$this->setQueries(".MyArray::arrayToString( $v4e9f2aa41c ).");
		\$this->setPropertiesToAttributes(".MyArray::arrayToString( $v5cdc9cec4a ).");
		
		\$this->setNodesData( \$this->getQueries() );
	}
}
?>"; return $v067674f4e4; } public static function convertIds($pf72c1d58) { $pee2c7e7a = array("hidden", "assign", "increment", "select", "procedure", "md5"); $v2f228af834 = array(); $pc37695cb = $pf72c1d58 ? count($pf72c1d58) : 0; for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v342a134247 = $pf72c1d58[$v43dd7d0051]; $pf527d5ab = XMLFileParser::getAttribute($v342a134247, "column"); if ($pf527d5ab) { $v18965d86d8 = array("output_name" => $pf527d5ab); $v3a031888ca = isset($v342a134247["childs"]["generator"][0]) ? $v342a134247["childs"]["generator"][0] : null; if ($v3a031888ca) { $v3fb9f41470 = strtolower(XMLFileParser::getAttribute($v3a031888ca, "type")); if (!in_array($v3fb9f41470, $pee2c7e7a)) launch_exception(new HibernateException(3, array($v3fb9f41470, $pee2c7e7a))); $v18965d86d8["generator"] = array("type" => $v3fb9f41470); $v67db1bd535 = XMLFileParser::getValue($v3a031888ca); if (strlen($v67db1bd535)) $v18965d86d8["generator"]["value"] = $v67db1bd535; } $v2f228af834[$pf527d5ab] = $v18965d86d8; } } return $v2f228af834; } private function mbd53f8176295($v3b17ed57b4, $v6dcfcf75f7, $pb6c78833) { if (is_array($v6dcfcf75f7) && is_array($v3b17ed57b4)) { foreach ($v6dcfcf75f7 as $v9c2d11442d => $v7cbef54ec2) { if (!empty($v7cbef54ec2["primary_key"])) { if (!$v3b17ed57b4[$v9c2d11442d]) $v3b17ed57b4[$v9c2d11442d] = array("output_name" => $v9c2d11442d); } } } if (is_array($pb6c78833) && is_array($v3b17ed57b4)) { $v2c030878dd = array_keys($v3b17ed57b4); $pc37695cb = count($v2c030878dd); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v9a0e7d73e4 = $v2c030878dd[$v43dd7d0051]; $v09c2fbe197 = $v3b17ed57b4[$v9a0e7d73e4]; $v9414599e36 = isset($v09c2fbe197["output_name"]) ? $v09c2fbe197["output_name"] : null; foreach ($pb6c78833 as $v88841232ef => $v8fab9843f7) { $pe428d808 = isset($v8fab9843f7["output_name"]) ? $v8fab9843f7["output_name"] : null; if ($pe428d808 == $v9414599e36) { unset($v3b17ed57b4[$v9a0e7d73e4]); $v3b17ed57b4[$v88841232ef] = $v09c2fbe197; break; } } } } return $v3b17ed57b4; } private function mdddc86a46df5($pf72c1d58) { $v2f228af834 = array(); $pc37695cb = $pf72c1d58 ? count($pf72c1d58) : 0; for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v342a134247 = $pf72c1d58[$v43dd7d0051]; if (is_array($v342a134247)) { $v700315c4d3 = array(); $pfcd50318 = ""; foreach ($v342a134247 as $pbfa01ed1 => $v67db1bd535) { $pbfa01ed1 = strtolower($pbfa01ed1); if ($pbfa01ed1 == "input_name") { $pfcd50318 = $v67db1bd535; } else { $v700315c4d3[$pbfa01ed1] = $v67db1bd535; } } if ($pfcd50318) { $v2f228af834[ $pfcd50318 ] = $v700315c4d3; } } } return $v2f228af834; } private function mbf2fc3bc9efd($pb6c78833, $v3b17ed57b4) { if (is_array($pb6c78833) && is_array($v3b17ed57b4)) { foreach ($v3b17ed57b4 as $v9a0e7d73e4 => $v09c2fbe197) { if ($v9a0e7d73e4) { $v7959970a41 = false; foreach ($pb6c78833 as $v88841232ef => $v8fab9843f7) { $pe428d808 = isset($v8fab9843f7["output_name"]) ? $v8fab9843f7["output_name"] : null; if ($pe428d808 == $v9a0e7d73e4) { $v7959970a41 = true; break; } } if (!$v7959970a41) $pb6c78833[ $v9a0e7d73e4 ] = array( "output_name" => isset($v09c2fbe197["output_name"]) ? $v09c2fbe197["output_name"] : null ); } } } return $pb6c78833; } public static function assignResultMapToRelations($pf72c1d58, $pf232dd5a) { if (is_array($pf72c1d58)) { foreach ($pf72c1d58 as $v8f40ad5766 => $v342a134247) { if (!empty($v342a134247["result_map"])) { $v5903f00766 = $v342a134247["result_map"]; $pf72c1d58[$v8f40ad5766]["result_map"] = $pf232dd5a["childs"]["relationships"]["result_map"][$v5903f00766]; } } } return $pf72c1d58; } public static function convertRelations($pf72c1d58, $pf232dd5a) { $v2f228af834 = array(); $v651d593e1f = array_keys($pf72c1d58) !== range(0, count($pf72c1d58) - 1); if ($v651d593e1f) $pf72c1d58 = array($pf72c1d58); $pc37695cb = count($pf72c1d58); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v342a134247 = $pf72c1d58[$v43dd7d0051]; $v016220e8f0 = XMLFileParser::getAttribute($v342a134247, "name"); if ($v016220e8f0) { $v21ff8db28c = XMLFileParser::getAttribute($v342a134247, "result_class"); $v5903f00766 = XMLFileParser::getAttribute($v342a134247, "result_map"); if ($v21ff8db28c && $v5903f00766) { launch_exception(new HibernateException(9, $v016220e8f0)); } $v3561c1653f = array(); if ($v21ff8db28c) $v3561c1653f["result_class"] = $v21ff8db28c; if ($v5903f00766) $v3561c1653f["result_map"] = $v5903f00766; $v50d32a6fc4 = isset($v342a134247["childs"]["attribute"]) ? $v342a134247["childs"]["attribute"] : null; $v9f714b9298 = $v50d32a6fc4 ? count($v50d32a6fc4) : 0; if ($v9f714b9298) { $ped0a6251 = array(); for ($v9d27441e80 = 0; $v9d27441e80 < $v9f714b9298; $v9d27441e80++) { $v6694236c2c = $v50d32a6fc4[$v9d27441e80]; $ped0a6251[] = XMLFileParser::getAttributes($v6694236c2c, array("name", "column", "table")); } $v3561c1653f["attribute"] = $ped0a6251; } $v50d32a6fc4 = isset($v342a134247["childs"]["key"]) ? $v342a134247["childs"]["key"] : null; $v9f714b9298 = $v50d32a6fc4 ? count($v50d32a6fc4) : 0; if ($v9f714b9298) { $v9994512d98 = array(); for ($v9d27441e80 = 0; $v9d27441e80 < $v9f714b9298; $v9d27441e80++) { $v6694236c2c = $v50d32a6fc4[$v9d27441e80]; $v9994512d98[] = XMLFileParser::getAttributes($v6694236c2c, array("pcolumn", "ptable", "fcolumn", "ftable", "join", "value")); } $v3561c1653f["key"] = $v9994512d98; } $v50d32a6fc4 = isset($v342a134247["childs"]["condition"]) ? $v342a134247["childs"]["condition"] : null; $v9f714b9298 = $v50d32a6fc4 ? count($v50d32a6fc4) : 0; if ($v9f714b9298) { $paf1bc6f6 = array(); for ($v9d27441e80 = 0; $v9d27441e80 < $v9f714b9298; $v9d27441e80++) { $v6694236c2c = $v50d32a6fc4[$v9d27441e80]; $paf1bc6f6[] = XMLFileParser::getAttributes($v6694236c2c, array("column", "operator", "table", "refcolumn", "reftable", "value")); } $v3561c1653f["condition"] = $paf1bc6f6; } $v50d32a6fc4 = isset($v342a134247["childs"]["sort"]) ? $v342a134247["childs"]["sort"] : null; $v9f714b9298 = $v50d32a6fc4 ? count($v50d32a6fc4) : 0; if ($v9f714b9298) { $v04003a4f53 = array(); for ($v9d27441e80 = 0; $v9d27441e80 < $v9f714b9298; $v9d27441e80++) { $v6694236c2c = $v50d32a6fc4[$v9d27441e80]; $v04003a4f53[] = XMLFileParser::getAttributes($v6694236c2c, array("column", "table", "order")); } $v3561c1653f["sort"] = $v04003a4f53; } $v3561c1653f["limit"] = XMLFileParser::getAttribute($v342a134247, "limit"); $v3561c1653f["start"] = XMLFileParser::getAttribute($v342a134247, "start"); $v2f228af834[$v016220e8f0] = $v3561c1653f; } else launch_exception(new HibernateException(8)); } return $v2f228af834; } private function me5f16e9847b0($pb6c78833, $v6dcfcf75f7) { $v07a4643edf = array(); if (is_array($v6dcfcf75f7)) { if (is_array($pb6c78833)) { $pc561e8c1 = array_keys($v6dcfcf75f7); foreach ($pb6c78833 as $pbfa01ed1 => $v67db1bd535) { $v1c301b29c5 = isset($v67db1bd535["output_name"]) ? $v67db1bd535["output_name"] : null; if (in_array($v1c301b29c5, $pc561e8c1)) { $v07a4643edf[$pbfa01ed1] = $v1c301b29c5; } } } $v21ba7c7ed4 = array_flip($v07a4643edf); foreach ($v6dcfcf75f7 as $pbfa01ed1 => $v67db1bd535) { if (!isset($v21ba7c7ed4[$pbfa01ed1])) { $v07a4643edf[$pbfa01ed1] = $pbfa01ed1; } } } return $v07a4643edf; } } ?>
