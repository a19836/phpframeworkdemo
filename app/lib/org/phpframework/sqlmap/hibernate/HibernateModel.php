<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include get_lib("org.phpframework.sqlmap.hibernate.HibernateModelBase"); include get_lib("org.phpframework.sqlmap.hibernate.IHibernateModel"); class HibernateModel extends HibernateModelBase implements IHibernateModel { private $v9c2b052326 = array(); public function __construct() { parent::__construct(); } public function insert($v539082ff30, &$v32f28291a1 = false, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v22d751efed = $v539082ff30; $this->QueryHandler->transformData($v539082ff30, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($v539082ff30, $this->table_attributes); $v5c1c342594 = false; if (is_array($v539082ff30)) { $this->prepareIdsToInsert($v539082ff30, $v5d3813882f); if ($this->getErrorHandler()->ok()) { $v5c1c342594 = $this->getFunction("insertObject", array($this->table_name, $v539082ff30, $v5d3813882f), $v5d3813882f); if ($v5c1c342594 === true) { $v32f28291a1 = array(); foreach ($this->ids as $pbfa01ed1 => $v67db1bd535) { $v32f28291a1[$pbfa01ed1] = !empty($v539082ff30[$pbfa01ed1]) ? $v539082ff30[$pbfa01ed1] : $this->getInsertedId($v5d3813882f); } } } } if($this->mddd6909fa068()) $this->getCacheLayer()->check($this->module_id, $this->service_id.".insert", $v22d751efed, $v5c1c342594, $v5d3813882f); return $v5c1c342594; } public function insertAll($v539082ff30, &$v806a006822 = false, &$v32f28291a1 = false, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v5c1c342594 = true; $v806a006822 = array(); $v32f28291a1 = array(); $pc37695cb = $v539082ff30 ? count($v539082ff30) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v806a006822[$v43dd7d0051] = $this->insert($v539082ff30[$v43dd7d0051], $v1286a9d105, $v5d3813882f); $v32f28291a1[$v43dd7d0051] = $v1286a9d105; if($v806a006822[$v43dd7d0051] !== true) $v5c1c342594 = false; } if($this->mddd6909fa068()) $this->getCacheLayer()->check($this->module_id, $this->service_id.".insertAll", $v539082ff30, $v5c1c342594, $v5d3813882f); return $v5c1c342594; } public function update($v539082ff30, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v22d751efed = $v539082ff30; $this->QueryHandler->transformData($v539082ff30, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($v539082ff30, $this->table_attributes); $v5c1c342594 = false; if (is_array($v539082ff30)) { $pc5527c54 = array(); foreach ($this->ids as $pbfa01ed1 => $v67db1bd535) { $v1c301b29c5 = isset($v67db1bd535["output_name"]) ? $v67db1bd535["output_name"] : null; if (isset($v539082ff30[$v1c301b29c5])) $pc5527c54[] = $v1c301b29c5; } if (count($pc5527c54) > 0) { $paf1bc6f6 = array(); foreach ($v539082ff30 as $pbfa01ed1 => $v67db1bd535) if (in_array($pbfa01ed1, $pc5527c54)) $paf1bc6f6[$pbfa01ed1] = $v67db1bd535; $pfdbbc383 = array(); foreach ($v539082ff30 as $pbfa01ed1 => $v67db1bd535) if (!in_array($pbfa01ed1, $pc5527c54)) $pfdbbc383[$pbfa01ed1] = $v67db1bd535; if ($this->getErrorHandler()->ok()) { $pebb3f429 = is_array($v5d3813882f) ? $v5d3813882f : array(); $pebb3f429["conditions_join"] = "and"; $pebb3f429["all"] = true; $v5c1c342594 = $this->getFunction("updateObject", array($this->table_name, $pfdbbc383, $paf1bc6f6, $pebb3f429), $v5d3813882f); } } } if ($this->mddd6909fa068()) { $this->getCacheLayer()->check($this->module_id, $this->service_id.".update", $v22d751efed, $v5c1c342594, $v5d3813882f); } return $v5c1c342594; } public function updateAll($v539082ff30, &$v806a006822 = false, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v5c1c342594 = true; $v806a006822 = array(); $pc37695cb = $v539082ff30 ? count($v539082ff30) : 0; for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v806a006822[$v43dd7d0051] = $this->update($v539082ff30[$v43dd7d0051], $v5d3813882f); if ($v806a006822[$v43dd7d0051] !== true) $v5c1c342594 = false; } if ($this->mddd6909fa068()) { $this->getCacheLayer()->check($this->module_id, $this->service_id.".updateAll", $v539082ff30, $v5c1c342594, $v5d3813882f); } return $v5c1c342594; } public function insertOrUpdate($v539082ff30, &$v32f28291a1 = false, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $pca049f76 = $v539082ff30; $this->QueryHandler->transformData($pca049f76, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($pca049f76, $this->table_attributes); $v5c1c342594 = false; if (is_array($pca049f76)) { $v04446aef99 = false; foreach ($this->ids as $pbfa01ed1 => $v67db1bd535) { $v49bdd49c66 = isset($v67db1bd535["output_name"]) ? $v67db1bd535["output_name"] : null; if (isset($pca049f76[$v49bdd49c66]) && strlen($pca049f76[$v49bdd49c66]) > 0) { $v04446aef99 = true; break; } } $v5c1c342594 = $v04446aef99 ? $this->update($v539082ff30, $v5d3813882f) : $this->insert($v539082ff30, $v32f28291a1, $v5d3813882f); foreach ($this->ids as $pbfa01ed1 => $v67db1bd535) { $v49bdd49c66 = isset($v67db1bd535["output_name"]) ? $v67db1bd535["output_name"] : null; if (isset($pca049f76[$v49bdd49c66]) && strlen($pca049f76[$v49bdd49c66]) > 0 && (!isset($v32f28291a1[$pbfa01ed1]) || !strlen($v32f28291a1[$pbfa01ed1])) ) { $v32f28291a1[$pbfa01ed1] = $pca049f76[$v49bdd49c66]; } } } if($this->mddd6909fa068()) { $this->getCacheLayer()->check($this->module_id, $this->service_id.".insertOrUpdate", $v539082ff30, $v5c1c342594, $v5d3813882f); } return $v5c1c342594; } public function insertOrUpdateAll($v539082ff30, &$v806a006822 = false, &$v32f28291a1 = false, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v5c1c342594 = true; $v806a006822 = array(); $v32f28291a1 = array(); $pc37695cb = $v539082ff30 ? count($v539082ff30) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v806a006822[$v43dd7d0051] = $this->insertOrUpdate($v539082ff30[$v43dd7d0051], $v4e7991511c, $v5d3813882f); $v32f28291a1[$v43dd7d0051] = $v4e7991511c; if($v806a006822[$v43dd7d0051] !== true) $v5c1c342594 = false; } if($this->mddd6909fa068()) { $this->getCacheLayer()->check($this->module_id, $this->service_id.".insertOrUpdateAll", $v539082ff30, $v5c1c342594, $v5d3813882f); } return $v5c1c342594; } public function updateByConditions($v539082ff30, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v22d751efed = $v539082ff30; $pfdbbc383 = isset($v539082ff30["attributes"]) ? $v539082ff30["attributes"] : null; $paf1bc6f6 = isset($v539082ff30["conditions"]) ? $v539082ff30["conditions"] : null; $v7fd392376f = isset($v539082ff30["conditions_join"]) ? $v539082ff30["conditions_join"] : null; $pefeda58c = isset($v539082ff30["all"]) ? $v539082ff30["all"] : null; $this->QueryHandler->transformData($pfdbbc383, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($pfdbbc383, $this->table_attributes); $this->QueryHandler->transformData($paf1bc6f6, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($paf1bc6f6, $this->table_attributes); $v5c1c342594 = false; if(is_array($pfdbbc383)) { if($this->getErrorHandler()->ok()) { $pebb3f429 = is_array($v5d3813882f) ? $v5d3813882f : array(); $pebb3f429["conditions_join"] = $v7fd392376f; $pebb3f429["all"] = $pefeda58c; $v5c1c342594 = $this->getFunction("updateObject", array($this->table_name, $pfdbbc383, $paf1bc6f6, $pebb3f429), $v5d3813882f); } } if($this->mddd6909fa068()) { $this->getCacheLayer()->check($this->module_id, $this->service_id.".updateByConditions", $v22d751efed, $v5c1c342594, $v5d3813882f); } return $v5c1c342594; } public function updatePrimaryKeys($v539082ff30, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v22d751efed = $v539082ff30; $v587d93a3a7 = array(); $v65a396e40d = array(); $v90786ceb50 = array(); foreach ($v539082ff30 as $pbfa01ed1 => $v67db1bd535) { if (substr($pbfa01ed1, 0, 4) == "old_") $v587d93a3a7[ substr($pbfa01ed1, 4) ] = $v67db1bd535; else if (substr($pbfa01ed1, 0, 4) == "new_") $v65a396e40d[ substr($pbfa01ed1, 4) ] = $v67db1bd535; else $v90786ceb50[$pbfa01ed1] = $v67db1bd535; } $this->QueryHandler->transformData($v587d93a3a7, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($v587d93a3a7, $this->table_attributes); $this->QueryHandler->transformData($v65a396e40d, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($v65a396e40d, $this->table_attributes); $this->QueryHandler->transformData($v90786ceb50, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($v90786ceb50, $this->table_attributes); $v5c1c342594 = false; if(is_array($v587d93a3a7) && is_array($v65a396e40d)) { $pa6d59152 = array(); $v2ec88caaa6 = array(); foreach($this->ids as $pbfa01ed1 => $v67db1bd535) { $v49bdd49c66 = isset($v67db1bd535["output_name"]) ? $v67db1bd535["output_name"] : null; if (isset($v587d93a3a7[$v49bdd49c66])) $pa6d59152[] = $v49bdd49c66; if (isset($v65a396e40d[$v49bdd49c66])) $v2ec88caaa6[] = $v49bdd49c66; if (array_key_exists($v49bdd49c66, $v90786ceb50)) unset($v90786ceb50[$v49bdd49c66]); } if(count($pa6d59152) > 0 && count($v2ec88caaa6) > 0) { $pfdbbc383 = array(); foreach($v65a396e40d as $pbfa01ed1 => $v67db1bd535) if (in_array($pbfa01ed1, $v2ec88caaa6)) $pfdbbc383[$pbfa01ed1] = $v67db1bd535; foreach($v90786ceb50 as $pbfa01ed1 => $v67db1bd535) if (isset($v90786ceb50[$pbfa01ed1])) $pfdbbc383[$pbfa01ed1] = $v67db1bd535; $paf1bc6f6 = array(); foreach($v587d93a3a7 as $pbfa01ed1 => $v67db1bd535) if (in_array($pbfa01ed1, $pa6d59152)) $paf1bc6f6[$pbfa01ed1] = $v67db1bd535; if($this->getErrorHandler()->ok()) { $pebb3f429 = is_array($v5d3813882f) ? $v5d3813882f : array(); $pebb3f429["conditions_join"] = "and"; $pebb3f429["all"] = false; $v5c1c342594 = $this->getFunction("updateObject", array($this->table_name, $pfdbbc383, $paf1bc6f6, $pebb3f429), $v5d3813882f); } } } if($this->mddd6909fa068()) { $this->getCacheLayer()->check($this->module_id, $this->service_id.".updatePrimaryKeys", $v22d751efed, $v5c1c342594, $v5d3813882f); } return $v5c1c342594; } public function delete($v539082ff30, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v22d751efed = $v539082ff30; if (is_array($v539082ff30) || is_object($v539082ff30)) { $this->QueryHandler->transformData($v539082ff30, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($v539082ff30, $this->table_attributes); } $paf1bc6f6 = $this->mfe2f17955b41($v539082ff30); $v5c1c342594 = false; if (count(array_keys($paf1bc6f6)) && $this->getErrorHandler()->ok()) { $pebb3f429 = is_array($v5d3813882f) ? $v5d3813882f : array(); $pebb3f429["conditions_join"] = "and"; $pebb3f429["all"] = false; $v5c1c342594 = $this->getFunction("deleteObject", array($this->table_name, $paf1bc6f6, $pebb3f429), $v5d3813882f); } if($this->mddd6909fa068()) { $this->getCacheLayer()->check($this->module_id, $this->service_id.".delete", $v22d751efed, $v5c1c342594, $v5d3813882f); } return $v5c1c342594; } public function deleteAll($v539082ff30, &$v806a006822 = false, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v5c1c342594 = true; $v806a006822 = array(); $pc37695cb = $v539082ff30 ? count($v539082ff30) : 0; for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v806a006822[$v43dd7d0051] = $this->delete($v539082ff30[$v43dd7d0051], $v5d3813882f); if ($v806a006822[$v43dd7d0051] !== true) { $v5c1c342594 = false; } } if($this->mddd6909fa068()) { $this->getCacheLayer()->check($this->module_id, $this->service_id.".deleteAll", $v539082ff30, $v5c1c342594, $v5d3813882f); } return $v5c1c342594; } public function deleteByConditions($v539082ff30, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v22d751efed = $v539082ff30; $paf1bc6f6 = isset($v539082ff30["conditions"]) ? $v539082ff30["conditions"] : null; $v7fd392376f = isset($v539082ff30["conditions_join"]) ? $v539082ff30["conditions_join"] : null; $pefeda58c = isset($v539082ff30["all"]) ? $v539082ff30["all"] : null; $this->QueryHandler->transformData($paf1bc6f6, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($paf1bc6f6, $this->table_attributes); $v5c1c342594 = false; if ($this->getErrorHandler()->ok() && $v3c76382d93) { $pebb3f429 = is_array($v5d3813882f) ? $v5d3813882f : array(); $pebb3f429["conditions_join"] = $v7fd392376f; $pebb3f429["all"] = $pefeda58c; $v5c1c342594 = $this->getFunction("deleteObject", array($this->table_name, $paf1bc6f6, $pebb3f429), $v5d3813882f); } if($this->mddd6909fa068()) { $this->getCacheLayer()->check($this->module_id, $this->service_id.".deleteByConditions", $v22d751efed, $v5c1c342594, $v5d3813882f); } return $v5c1c342594; } public function findById($v32f28291a1, $v539082ff30 = array(), $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v539082ff30 = is_array($v539082ff30) ? $v539082ff30 : array(); MyArray::arrKeysToLowerCase($v539082ff30); $v69f1629ff2 = isset($v539082ff30["relationships"]) ? $v539082ff30["relationships"] : null; $v20b8676a9f = $this->service_id.".findById"; $pf7fafc51 = array($v32f28291a1, $v539082ff30); $v18521bca9a = $this->mddd6909fa068(); if($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f)) { $pc06f1034 = SQLMapIncludesHandler::getLibsOfResultClassAndMap($this->result_class, $this->result_map); if($v69f1629ff2) { $v8538adc1fc = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->one_to_many); $pd7d3ade6 = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->many_to_many); $v26a0dfd6f6 = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->many_to_one); $v38322cc44e = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->one_to_one); $pc06f1034 = array_merge($pc06f1034, $v8538adc1fc, $pd7d3ade6, $v26a0dfd6f6, $v38322cc44e); } SQLMapIncludesHandler::includeLibsOfResultClassAndMap($pc06f1034); return $this->getCacheLayer()->get($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f); } if (is_array($v32f28291a1) || is_object($v32f28291a1)) { $this->QueryHandler->transformData($v32f28291a1, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($v32f28291a1, $this->table_attributes); } $paf1bc6f6 = $this->mfe2f17955b41($v32f28291a1); $v9ad1385268 = false; if(is_array($paf1bc6f6) && count(array_keys($paf1bc6f6))) { $v539082ff30["conditions"] = $paf1bc6f6; $v539082ff30["start"] = 0; $v539082ff30["limit"] = 1; $pee4c7870 = $this->mea1f3fe9fd75($v539082ff30, $v5d3813882f); $v9ad1385268 = isset($pee4c7870[0]) ? $pee4c7870[0] : null; } if($v18521bca9a) { $this->getCacheLayer()->check($this->module_id, $v20b8676a9f, $pf7fafc51, $v9ad1385268, $v5d3813882f); } return $v9ad1385268; } public function find($v539082ff30 = array(), $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v539082ff30 = is_array($v539082ff30) ? $v539082ff30 : array(); MyArray::arrKeysToLowerCase($v539082ff30); $v69f1629ff2 = isset($v539082ff30["relationships"]) ? $v539082ff30["relationships"] : null; $v20b8676a9f = $this->service_id.".find"; $pf7fafc51 = $v539082ff30; $v18521bca9a = $this->mddd6909fa068(); if($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f)) { $pc06f1034 = SQLMapIncludesHandler::getLibsOfResultClassAndMap($this->result_class, $this->result_map); if($v69f1629ff2) { $v8538adc1fc = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->one_to_many); $pd7d3ade6 = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->many_to_many); $v26a0dfd6f6 = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->many_to_one); $v38322cc44e = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->one_to_one); $pc06f1034 = array_merge($pc06f1034, $v8538adc1fc, $pd7d3ade6, $v26a0dfd6f6, $v38322cc44e); } SQLMapIncludesHandler::includeLibsOfResultClassAndMap($pc06f1034); return $this->getCacheLayer()->get($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f); } $paf1bc6f6 = isset($v539082ff30["conditions"]) ? $v539082ff30["conditions"] : null; if($paf1bc6f6) { if(is_array($paf1bc6f6) || is_object($paf1bc6f6)) { $this->QueryHandler->transformData($paf1bc6f6, $this->parameter_class, $this->parameter_map, false, true); self::configureAttributeConditions($paf1bc6f6, $this->table_attributes); } if(!is_array($paf1bc6f6)) { $paf1bc6f6 = $this->mfe2f17955b41($paf1bc6f6); } } $v539082ff30["conditions"] = $paf1bc6f6; $pee4c7870 = $this->mea1f3fe9fd75($v539082ff30, $v5d3813882f); if($v18521bca9a) { $this->getCacheLayer()->check($this->module_id, $v20b8676a9f, $pf7fafc51, $pee4c7870, $v5d3813882f); } return $pee4c7870; } public function count($v539082ff30 = array(), $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v539082ff30 = is_array($v539082ff30) ? $v539082ff30 : array(); MyArray::arrKeysToLowerCase($v539082ff30); unset($v539082ff30["relationships"]); unset($v539082ff30["attributes"]); unset($v539082ff30["sort"]); $v20b8676a9f = $this->service_id.".count"; $pf7fafc51 = $v539082ff30; $v18521bca9a = $this->mddd6909fa068(); if($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f)) { return $this->getCacheLayer()->get($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f); } $paf1bc6f6 = isset($v539082ff30["conditions"]) ? $v539082ff30["conditions"] : null; if($paf1bc6f6) { if(is_array($paf1bc6f6) || is_object($paf1bc6f6)) { $this->QueryHandler->transformData($paf1bc6f6, $this->parameter_class, $this->parameter_map, false, true); self::configureAttributeConditions($paf1bc6f6, $this->table_attributes); } if(!is_array($paf1bc6f6)) { $paf1bc6f6 = $this->mfe2f17955b41($paf1bc6f6); } } $v539082ff30["conditions"] = $paf1bc6f6; $v16ac35fd79 = $this->f9a840f1354($v539082ff30, $v5d3813882f); if($v18521bca9a) { $this->getCacheLayer()->check($this->module_id, $v20b8676a9f, $pf7fafc51, $v16ac35fd79, $v5d3813882f); } return $v16ac35fd79; } public function findRelationships($pa5b8420a, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v20b8676a9f = $this->service_id.".findRelationships"; $pf7fafc51 = $pa5b8420a; $v18521bca9a = $this->mddd6909fa068(); if($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f)) { $v8538adc1fc = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->one_to_many); $pd7d3ade6 = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->many_to_many); $v26a0dfd6f6 = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->many_to_one); $v38322cc44e = SQLMapIncludesHandler::getRelationshipsLibsOfResultClassAndMap($this->one_to_one); $pc06f1034 = array_merge($v8538adc1fc, $pd7d3ade6, $v26a0dfd6f6, $v38322cc44e); SQLMapIncludesHandler::includeLibsOfResultClassAndMap($pc06f1034); return $this->getCacheLayer()->get($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f); } if($pa5b8420a) { if(is_array($pa5b8420a) || is_object($pa5b8420a)) { $this->QueryHandler->transformData($pa5b8420a, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($pa5b8420a, $this->table_attributes); } if(!is_array($pa5b8420a)) { $pa5b8420a = $this->mfe2f17955b41($pa5b8420a); } } $v987a981e39 = $this->f73b3fe16bf($pa5b8420a, $v5d3813882f); if($v18521bca9a) { $this->getCacheLayer()->check($this->module_id, $v20b8676a9f, $pf7fafc51, $v987a981e39, $v5d3813882f); } return $v987a981e39; } public function findRelationship($v016220e8f0, $pa5b8420a, $v5d3813882f = false) { $v10c59e20bd = false; if (isset($this->one_to_many[$v016220e8f0])) { $v10c59e20bd = $this->one_to_many[$v016220e8f0]; } else if (isset($this->many_to_many[$v016220e8f0])) { $v10c59e20bd = $this->many_to_many[$v016220e8f0]; } else if (isset($this->many_to_one[$v016220e8f0])) { $v10c59e20bd = $this->many_to_one[$v016220e8f0]; } else if (isset($this->one_to_one[$v016220e8f0])) { $v10c59e20bd = $this->one_to_one[$v016220e8f0]; } if ($v10c59e20bd) { $this->f84f0cf432d($v5d3813882f); $v20b8676a9f = $this->service_id.".findRelationship.".$v016220e8f0; $pf7fafc51 = array($v016220e8f0, $pa5b8420a); $v18521bca9a = $this->mddd6909fa068(); if($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f)) { $v21ff8db28c = isset($v10c59e20bd["result_class"]) ? $v10c59e20bd["result_class"] : null; $pce128343 = isset($v10c59e20bd["result_map"]) ? $v10c59e20bd["result_map"] : null; $pc06f1034 = SQLMapIncludesHandler::getLibsOfResultClassAndMap($v21ff8db28c, $pce128343); SQLMapIncludesHandler::includeLibsOfResultClassAndMap($pc06f1034); return $this->getCacheLayer()->get($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f); } if($pa5b8420a) { if(is_array($pa5b8420a) || is_object($pa5b8420a)) { $this->QueryHandler->transformData($pa5b8420a, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($pa5b8420a, $this->table_attributes); } if(!is_array($pa5b8420a)) { $pa5b8420a = $this->mfe2f17955b41($pa5b8420a); } } $v9ad1385268 = $this->f1141907b37($v016220e8f0, $v10c59e20bd, $pa5b8420a, $v5d3813882f); if($v18521bca9a) { $this->getCacheLayer()->check($this->module_id, $v20b8676a9f, $pf7fafc51, $v9ad1385268, $v5d3813882f); } return $v9ad1385268; } return false; } public function countRelationships($pa5b8420a, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v20b8676a9f = $this->service_id.".countRelationships"; $pf7fafc51 = $pa5b8420a; $v18521bca9a = $this->mddd6909fa068(); if($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f)) { return $this->getCacheLayer()->get($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f); } if($pa5b8420a) { if(is_array($pa5b8420a) || is_object($pa5b8420a)) { $this->QueryHandler->transformData($pa5b8420a, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($pa5b8420a, $this->table_attributes); } if(!is_array($pa5b8420a)) { $pa5b8420a = $this->mfe2f17955b41($pa5b8420a); } } $v987a981e39 = $this->f5d947688c0($pa5b8420a, $v5d3813882f); if($v18521bca9a) { $this->getCacheLayer()->check($this->module_id, $v20b8676a9f, $pf7fafc51, $v987a981e39, $v5d3813882f); } return $v987a981e39; } public function countRelationship($v016220e8f0, $pa5b8420a, $v5d3813882f = false) { $v10c59e20bd = false; if (isset($this->one_to_many[$v016220e8f0])) { $v10c59e20bd = $this->one_to_many[$v016220e8f0]; } else if (isset($this->many_to_many[$v016220e8f0])) { $v10c59e20bd = $this->many_to_many[$v016220e8f0]; } else if (isset($this->many_to_one[$v016220e8f0])) { $v10c59e20bd = $this->many_to_one[$v016220e8f0]; } else if (isset($this->one_to_one[$v016220e8f0])) { $v10c59e20bd = $this->one_to_one[$v016220e8f0]; } if ($v10c59e20bd) { $this->f84f0cf432d($v5d3813882f); $v20b8676a9f = $this->service_id.".countRelationship.".$v016220e8f0; $pf7fafc51 = array($v016220e8f0, $pa5b8420a); $v18521bca9a = $this->mddd6909fa068(); if($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f)) { return $this->getCacheLayer()->get($this->module_id, $v20b8676a9f, $pf7fafc51, $v5d3813882f); } if($pa5b8420a) { if(is_array($pa5b8420a) || is_object($pa5b8420a)) { $this->QueryHandler->transformData($pa5b8420a, $this->parameter_class, $this->parameter_map); self::configureAttributeConditions($pa5b8420a, $this->table_attributes); } if(!is_array($pa5b8420a)) { $pa5b8420a = $this->mfe2f17955b41($pa5b8420a); } } $v16ac35fd79 = $this->me90b9da40287($v016220e8f0, $v10c59e20bd, $pa5b8420a, $v5d3813882f); if($v18521bca9a) { $this->getCacheLayer()->check($this->module_id, $v20b8676a9f, $pf7fafc51, $v16ac35fd79, $v5d3813882f); } return $v16ac35fd79; } return false; } private function mfe2f17955b41($v539082ff30) { $v539082ff30 = is_array($v539082ff30) ? $v539082ff30 : array($v539082ff30); $v3631977890 = array(); foreach($this->ids as $v67db1bd535) { $v3631977890[] = isset($v67db1bd535["output_name"]) ? $v67db1bd535["output_name"] : null; } $paf1bc6f6 = array(); foreach($v539082ff30 as $pbfa01ed1 => $v67db1bd535) { if(is_numeric($pbfa01ed1)) { $pbfa01ed1 = isset($v3631977890[$pbfa01ed1]) ? $pbfa01ed1 : 0; if(!empty($v3631977890[$pbfa01ed1])) { $paf1bc6f6[ $v3631977890[$pbfa01ed1] ] = $v67db1bd535; } } else if(in_array($pbfa01ed1, $v3631977890)) { $paf1bc6f6[$pbfa01ed1] = $v67db1bd535; } unset($v3631977890[$pbfa01ed1]); } return $paf1bc6f6; } private function mea1f3fe9fd75($v539082ff30 = array(), $v5d3813882f = false) { $v69f1629ff2 = isset($v539082ff30["relationships"]) ? $v539082ff30["relationships"] : null; $pfdbbc383 = isset($v539082ff30["attributes"]) ? $v539082ff30["attributes"] : null; $paf1bc6f6 = isset($v539082ff30["conditions"]) ? $v539082ff30["conditions"] : null; $v7fd392376f = isset($v539082ff30["conditions_join"]) ? $v539082ff30["conditions_join"] : null; $v04003a4f53 = !empty($v5d3813882f["sort"]) && empty($v539082ff30["sort"]) ? $v5d3813882f["sort"] : (isset($v539082ff30["sort"]) ? $v539082ff30["sort"] : null); $v7e4b517c18 = !empty($v5d3813882f["start"]) && (!isset($v539082ff30["start"]) || !is_numeric($v539082ff30["start"])) ? $v5d3813882f["start"] : (isset($v539082ff30["start"]) ? $v539082ff30["start"] : null); $v552b831ecd = !empty($v5d3813882f["limit"]) && (!isset($v539082ff30["limit"]) || !is_numeric($v539082ff30["limit"])) ? $v5d3813882f["limit"] : (isset($v539082ff30["limit"]) ? $v539082ff30["limit"] : null); if($v69f1629ff2) { $v12bbc4489a = self::getIdsNotInAttributes($pfdbbc383, $this->ids); $pfdbbc383 = is_array($pfdbbc383) ? array_merge($pfdbbc383, $v12bbc4489a) : $v12bbc4489a; } $pfdbbc383 = self::convertPropertiesToAttributes($pfdbbc383, $this->properties_to_attributes); $v04003a4f53 = self::convertSortPropertiesToAttributes($v04003a4f53, $this->properties_to_attributes); $v3c76382d93 = $this->getFunction("buildTableFindSQL", array($this->table_name, $pfdbbc383, $paf1bc6f6, array( "conditions_join" => $v7fd392376f, "sorts" => $v04003a4f53, )), $v5d3813882f); if($this->getErrorHandler()->ok() && $v3c76382d93) { $v9ab58eee1e = !empty($v5d3813882f) ? $v5d3813882f : array(); $v9ab58eee1e["limit"] = $v552b831ecd; $v9ab58eee1e["start"] = $v7e4b517c18; unset($v9ab58eee1e["sort"]); $v0565564551 = $this->getData($v3c76382d93, $v9ab58eee1e); if($this->getErrorHandler()->ok()) { $pee4c7870 = array(); $pc37695cb = count($v0565564551["result"]); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v700315c4d3 = $v0565564551["result"][$v43dd7d0051]; $v9ad1385268 = array(); if($v69f1629ff2) { $v73f776eaad = self::getObjDataIds($v700315c4d3, $this->ids); if($v73f776eaad) $v9ad1385268 = $this->f73b3fe16bf($v73f776eaad, $v5d3813882f); $v7989ae2e8c = self::deleteIdsNotInAttributesFromObjData($v700315c4d3, $v12bbc4489a); } else $v7989ae2e8c = $v700315c4d3; $pd12fa078 = array("fields" => $v0565564551["fields"], "result" => array($v7989ae2e8c)); $this->ResultHandler->transformData($pd12fa078, $this->result_class, $this->result_map); $v7989ae2e8c = $pd12fa078[0]; if (!empty($v5d3813882f["separated_by_objects"])) $v9ad1385268[$this->obj_name] = $v7989ae2e8c; else if ($v69f1629ff2) $v9ad1385268 = array_merge($v7989ae2e8c, $v9ad1385268); else $v9ad1385268 = $v7989ae2e8c; $pee4c7870[] = $v9ad1385268; } return $pee4c7870; } } return false; } private function f9a840f1354($v539082ff30 = array(), $v5d3813882f = false) { $paf1bc6f6 = isset($v539082ff30["conditions"]) ? $v539082ff30["conditions"] : null; $v7fd392376f = isset($v539082ff30["conditions_join"]) ? $v539082ff30["conditions_join"] : null; $v7e4b517c18 = !empty($v5d3813882f["start"]) && (!isset($v539082ff30["start"]) || !is_numeric($v539082ff30["start"])) ? $v5d3813882f["start"] : (isset($v539082ff30["start"]) ? $v539082ff30["start"] : null); $v552b831ecd = !empty($v5d3813882f["limit"]) && (!isset($v539082ff30["limit"]) || !is_numeric($v539082ff30["limit"])) ? $v5d3813882f["limit"] : (isset($v539082ff30["limit"]) ? $v539082ff30["limit"] : null); if($this->getErrorHandler()->ok()) { $pebb3f429 = is_array($v5d3813882f) ? $v5d3813882f : array(); $pebb3f429["limit"] = $v552b831ecd; $pebb3f429["start"] = $v7e4b517c18; $pebb3f429["conditions_join"] = $v7fd392376f; unset($pebb3f429["sort"]); return $this->getFunction("countObjects", array($this->table_name, $paf1bc6f6, $pebb3f429), $v5d3813882f); } return false; } private function f73b3fe16bf($pa5b8420a, $v5d3813882f = false) { $v987a981e39 = array(); $pf72c1d58 = array($this->one_to_many, $this->many_to_many, $this->many_to_one, $this->one_to_one); $pc37695cb = count($pf72c1d58); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v342a134247 = $pf72c1d58[$v43dd7d0051]; if (is_array($v342a134247)) { foreach($v342a134247 as $v016220e8f0 => $v10c59e20bd) { $v5ff976a2e7 = $this->f1141907b37($v016220e8f0, $v10c59e20bd, $pa5b8420a, $v5d3813882f); if($v5ff976a2e7 && count($v5ff976a2e7) && $v5ff976a2e7[0]) { $v987a981e39[$v016220e8f0] = $v5ff976a2e7; } } } } return $v987a981e39; } private function f1141907b37($v016220e8f0, $v10c59e20bd, $v4ec0135323 = array(), $v5d3813882f = false) { if($v10c59e20bd) { $v0f42a36d3f = $this->HibernateModelCache->getCachedSQLName(str_replace("/", "_", $this->module_id).".".$this->service_id.".".$v016220e8f0."_relationships", $v4ec0135323, $v5d3813882f); $v3c76382d93 = ""; if($this->HibernateModelCache->cachedSQLExists($v0f42a36d3f)) { $v3c76382d93 = $this->HibernateModelCache->getCachedSQL($v0f42a36d3f); } if(!$v3c76382d93) { $v9994512d98 = isset($v10c59e20bd["key"]) ? $v10c59e20bd["key"] : null; $pfdbbc383 = isset($v10c59e20bd["attribute"]) ? $v10c59e20bd["attribute"] : null; $paf1bc6f6 = isset($v10c59e20bd["condition"]) ? $v10c59e20bd["condition"] : null; $pe4b1434e = isset($v10c59e20bd["group_by"]) ? $v10c59e20bd["group_by"] : null; $v04003a4f53 = !empty($v5d3813882f["sort"]) && empty($v10c59e20bd["sort"]) ? $v5d3813882f["sort"] : (isset($v10c59e20bd["sort"]) ? $v10c59e20bd["sort"] : null); $pb895977a = array(); if(is_array($v4ec0135323)) foreach ($v4ec0135323 as $pe5c5e2fe => $v956913c90f) $pb895977a[$pe5c5e2fe] = "#$pe5c5e2fe#"; $v3c76382d93 = $this->getFunction("buildTableFindRelationshipSQL", array($this->table_name, array( "keys" => $v9994512d98, "attributes" => $pfdbbc383, "conditions" => $paf1bc6f6, "groups_by" => $pe4b1434e, "sorts" => $v04003a4f53, ), $pb895977a), $v5d3813882f); $this->HibernateModelCache->setCachedSQL($v0f42a36d3f, $v3c76382d93); } if(is_array($v4ec0135323)) foreach($v4ec0135323 as $pf10d1558 => $v82b772cc16) $v3c76382d93 = str_replace(array("'#$pf10d1558#'", "#$pf10d1558#"), DBSQLConverter::createBaseExprValue($v82b772cc16), $v3c76382d93); $v9ab58eee1e = !empty($v5d3813882f) ? $v5d3813882f : array(); $v9ab58eee1e["limit"] = !empty($v5d3813882f["limit"]) && (!isset($v10c59e20bd["limit"]) || !is_numeric($v10c59e20bd["limit"])) ? $v5d3813882f["limit"] : (isset($v10c59e20bd["limit"]) ? $v10c59e20bd["limit"] : null); $v9ab58eee1e["start"] = !empty($v5d3813882f["start"]) && (!isset($v10c59e20bd["start"]) || !is_numeric($v10c59e20bd["start"])) ? $v5d3813882f["start"] : (isset($v10c59e20bd["start"]) ? $v10c59e20bd["start"] : null); unset($v9ab58eee1e["sort"]); $v0565564551 = $this->getData($v3c76382d93, $v9ab58eee1e); if($this->getErrorHandler()->ok()) { $v21ff8db28c = isset($v10c59e20bd["result_class"]) ? $v10c59e20bd["result_class"] : null; $pce128343 = isset($v10c59e20bd["result_map"]) ? $v10c59e20bd["result_map"] : null; $this->ResultHandler->transformData($v0565564551, $v21ff8db28c, $pce128343); return $v0565564551; } } return false; } private function f5d947688c0($pa5b8420a, $v5d3813882f = false) { $v987a981e39 = array(); $pf72c1d58 = array($this->one_to_many, $this->many_to_many, $this->many_to_one, $this->one_to_one); $pc37695cb = count($pf72c1d58); for ($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v342a134247 = $pf72c1d58[$v43dd7d0051]; if (is_array($v342a134247)) { foreach($v342a134247 as $v016220e8f0 => $v10c59e20bd) { $v5ff976a2e7 = $this->me90b9da40287($v016220e8f0, $v10c59e20bd, $pa5b8420a, $v5d3813882f); if($v5ff976a2e7 && count($v5ff976a2e7) && $v5ff976a2e7[0]) { $v987a981e39[$v016220e8f0] = $v5ff976a2e7; } } } } return $v987a981e39; } private function me90b9da40287($v016220e8f0, $v10c59e20bd, $v4ec0135323 = array(), $v5d3813882f = false) { if($v10c59e20bd) { $v0f42a36d3f = $this->HibernateModelCache->getCachedSQLName(str_replace("/", "_", $this->module_id).".".$this->service_id.".".$v016220e8f0."_count_relationships", $v4ec0135323, $v5d3813882f); $v3c76382d93 = ""; if($this->HibernateModelCache->cachedSQLExists($v0f42a36d3f)) { $v3c76382d93 = $this->HibernateModelCache->getCachedSQL($v0f42a36d3f); } if(!$v3c76382d93) { $v9994512d98 = isset($v10c59e20bd["key"]) ? $v10c59e20bd["key"] : null; $pfdbbc383 = isset($v10c59e20bd["attribute"]) ? $v10c59e20bd["attribute"] : null; $paf1bc6f6 = isset($v10c59e20bd["condition"]) ? $v10c59e20bd["condition"] : null; $pe4b1434e = isset($v10c59e20bd["group_by"]) ? $v10c59e20bd["group_by"] : null; $pb895977a = array(); if(is_array($v4ec0135323)) foreach ($v4ec0135323 as $pe5c5e2fe => $v956913c90f) $pb895977a[$pe5c5e2fe] = "#$pe5c5e2fe#"; $v3c76382d93 = $this->getFunction("buildTableCountRelationshipSQL", array($this->table_name, array( "keys" => $v9994512d98, "attributes" => $pfdbbc383, "conditions" => $paf1bc6f6, "groups_by" => $pe4b1434e, ), $pb895977a), $v5d3813882f); $this->HibernateModelCache->setCachedSQL($v0f42a36d3f, $v3c76382d93); } if(is_array($v4ec0135323)) foreach($v4ec0135323 as $pf10d1558 => $v82b772cc16) $v3c76382d93 = str_replace(array("'#$pf10d1558#'", "#$pf10d1558#"), DBSQLConverter::createBaseExprValue($v82b772cc16), $v3c76382d93); $v9ab58eee1e = !empty($v5d3813882f) ? $v5d3813882f : array(); $v9ab58eee1e["limit"] = !empty($v5d3813882f["limit"]) && (!isset($v10c59e20bd["limit"]) || !is_numeric($v10c59e20bd["limit"])) ? $v5d3813882f["limit"] : (isset($v10c59e20bd["limit"]) ? $v10c59e20bd["limit"] : null); $v9ab58eee1e["start"] = !empty($v5d3813882f["start"]) && (!isset($v10c59e20bd["start"]) || !is_numeric($v10c59e20bd["start"])) ? $v5d3813882f["start"] : (isset($v10c59e20bd["start"]) ? $v10c59e20bd["start"] : null); unset($v9ab58eee1e["sort"]); $v0565564551 = $this->getData($v3c76382d93, $v9ab58eee1e); if($this->getErrorHandler()->ok()) { return isset($v0565564551["result"][0]["total"]) ? $v0565564551["result"][0]["total"] : null; } } return false; } public function callQuerySQL($pc221318a, $v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { $v9d1744e29c = $this->SQLClient->getQuery($pc221318a, $v71571534b0); return $this->SQLClient->getQuerySQL($v9d1744e29c, $v9367d5be85, $v5d3813882f); } public function callQuery($pc221318a, $v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); $v20b8676a9f = $this->service_id . "." . $v71571534b0; $v9d1744e29c = $this->SQLClient->getQuery($pc221318a, $v71571534b0); $v18521bca9a = $this->mddd6909fa068(); if($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid($this->module_id, $v20b8676a9f, $v9367d5be85, $v5d3813882f)) { $pc06f1034 = $this->SQLClient->getLibsOfResultClassAndMap($v9d1744e29c); SQLMapIncludesHandler::includeLibsOfResultClassAndMap($pc06f1034); return $this->getCacheLayer()->get($this->module_id, $v20b8676a9f, $v9367d5be85, $v5d3813882f); } $v9ad1385268 = $this->SQLClient->execQuery($v9d1744e29c, $v9367d5be85, $v5d3813882f); if($this->getErrorHandler()->ok()) { if($v18521bca9a) { $this->getCacheLayer()->check($this->module_id, $v20b8676a9f, $v9367d5be85, $v9ad1385268, $v5d3813882f); } } return $v9ad1385268; } public function callInsertSQL($v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuerySQL("insert", $v71571534b0, $v9367d5be85, $v5d3813882f); } public function callInsert($v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuery("insert", $v71571534b0, $v9367d5be85, $v5d3813882f); } public function callUpdateSQL($v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuerySQL("update", $v71571534b0, $v9367d5be85, $v5d3813882f); } public function callUpdate($v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuery("update", $v71571534b0, $v9367d5be85, $v5d3813882f); } public function callDeleteSQL($v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuerySQL("delete", $v71571534b0, $v9367d5be85, $v5d3813882f); } public function callDelete($v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuery("delete", $v71571534b0, $v9367d5be85, $v5d3813882f); } public function callSelectSQL($v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuerySQL("select", $v71571534b0, $v9367d5be85, $v5d3813882f); } public function callSelect($v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuery("select", $v71571534b0, $v9367d5be85, $v5d3813882f); } public function callProcedureSQL($v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuerySQL("procedure", $v71571534b0, $v9367d5be85, $v5d3813882f); } public function callProcedure($v71571534b0, $v9367d5be85 = false, $v5d3813882f = false) { return $this->callQuery("procedure", $v71571534b0, $v9367d5be85, $v5d3813882f); } public function getFunction($v9d33ecaf56, $v9367d5be85 = false, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); return $this->RDBBroker->getFunction($v9d33ecaf56, $v9367d5be85, $v5d3813882f); } public function getData($v3c76382d93, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); return $this->RDBBroker->getData($v3c76382d93, $v5d3813882f); } public function setData($v3c76382d93, $v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); return $this->RDBBroker->setData($v3c76382d93, $v5d3813882f); } public function getInsertedId($v5d3813882f = false) { $this->f84f0cf432d($v5d3813882f); return $this->RDBBroker->getInsertedId($v5d3813882f); } private function f84f0cf432d(&$v5d3813882f) { $v5d3813882f = $v5d3813882f ? $v5d3813882f : array(); $v5d3813882f = array_merge($this->v9c2b052326, $v5d3813882f); } public function setDefaultOptions($v5d3813882f) { if (array_key_exists("limit", $v5d3813882f)) unset($v5d3813882f["limit"]); if (array_key_exists("start", $v5d3813882f)) unset($v5d3813882f["start"]); $this->v9c2b052326 = $v5d3813882f ? $v5d3813882f : array(); } public function getDefaultOptions() { return $this->v9c2b052326; } private function mddd6909fa068() { return $v18521bca9a = $this->getCacheLayer() ? true : false; } protected static function deleteIdsNotInAttributesFromObjData($v539082ff30, $v12bbc4489a) { foreach($v12bbc4489a as $pf527d5ab) { if (array_key_exists($pf527d5ab, $v539082ff30)) unset($v539082ff30[$pf527d5ab]); } return $v539082ff30; } protected static function getIdsNotInAttributes($pfdbbc383, $v32f28291a1) { $v12bbc4489a = array(); if($pfdbbc383) { foreach($v32f28291a1 as $pf527d5ab => $v1cbfbb49c5) { if(!in_array($pf527d5ab, $pfdbbc383)) { $v12bbc4489a[] = $pf527d5ab; } } } return $v12bbc4489a; } protected static function getObjDataIds($v539082ff30, $v32f28291a1) { $pc5527c54 = array(); foreach($v32f28291a1 as $pbfa01ed1 => $v1cbfbb49c5) { if (array_key_exists($pbfa01ed1, $v539082ff30)) { $v49bdd49c66 = isset($v1cbfbb49c5["output_name"]) ? $v1cbfbb49c5["output_name"] : null; $pc5527c54[$v49bdd49c66] = $v539082ff30[$pbfa01ed1]; } } return $pc5527c54; } protected static function configureAttributeConditions(&$paf1bc6f6, $pfaffed55) { if(is_array($paf1bc6f6)) { foreach($paf1bc6f6 as $pbfa01ed1 => $v67db1bd535) { if(!isset($pfaffed55[$pbfa01ed1])) unset($paf1bc6f6[$pbfa01ed1]); } } } protected static function convertPropertiesToAttributes($pfdbbc383, $v07a4643edf) { if ($v07a4643edf) { if (is_array($pfdbbc383) && count($pfdbbc383)) { $pa3d4d908 = array(); foreach ($pfdbbc383 as $v5e45ec9bb9) if (!empty($v07a4643edf[$v5e45ec9bb9])) $pa3d4d908[ $v07a4643edf[$v5e45ec9bb9] ] = $v5e45ec9bb9; $pfdbbc383 = $pa3d4d908; } if (!is_array($pfdbbc383) || !count($pfdbbc383)) $pfdbbc383 = array_flip($v07a4643edf); } return $pfdbbc383; } protected static function convertSortPropertiesToAttributes($v04003a4f53, $v07a4643edf) { if ($v07a4643edf && is_array($v04003a4f53) && count($v04003a4f53)) { $pc96fdc59 = array(); foreach ($v04003a4f53 as $pd69fb7d0 => $v629e3f04ae) { if (is_array($v629e3f04ae)) { $pf1c499cb = ""; foreach ($v629e3f04ae as $pbfa01ed1 => $v67db1bd535) if (strtolower($pbfa01ed1) == "column" && $v67db1bd535 && !empty($v07a4643edf[$v67db1bd535])) { $v629e3f04ae[$pbfa01ed1] = $v07a4643edf[$v67db1bd535]; $pc96fdc59[] = $v629e3f04ae; break; } } } $v04003a4f53 = $pc96fdc59; } return $v04003a4f53; } } ?>
