<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.xmlfile.XMLFileParser"); class BeanXMLParser { const AK = "T/9BrU8a/67O79LODQW6BwCRgp9U0u8RTxNMJa61HbD4NM23tJoRMrh1rLArgCRh"; public static function parseXML($pae77d38c, $pc5a892eb = array(), $pc8957804 = false) { $v538cb1a1f7 = get_lib("org.phpframework.xmlfile.schema.beans", "xsd"); $v50d32a6fc4 = XMLFileParser::parseXMLContentToArray($pae77d38c, $pc5a892eb, $pc8957804, $v538cb1a1f7); $pa266c7f5 = is_array($v50d32a6fc4) ? array_keys($v50d32a6fc4) : array(); $pa266c7f5 = $pa266c7f5[0]; $v2615b92fce = is_array($v50d32a6fc4[$pa266c7f5][0]["childs"]) ? $v50d32a6fc4[$pa266c7f5][0]["childs"] : array(); $v1e9dc98c41 = array(); if(is_array($v2615b92fce)) { foreach($v2615b92fce as $pea9a6eb9 => $v9ec926d66b) { if(is_array($v9ec926d66b)) { foreach($v9ec926d66b as $v907103293e) { switch($pea9a6eb9) { case "var": $pdec569fb = array("name" => self::ma2780d5f62c1($v907103293e)); $v6da63250f5 = self::f7603069b15($v907103293e); if($v6da63250f5) $pdec569fb["reference"] = $v6da63250f5; else $pdec569fb["value"] = self::f6eca8a63b4($v907103293e); $v1e9dc98c41[]["var"] = $pdec569fb; break; case "bean": $pdec569fb = array(); foreach($v907103293e["@"] as $v3ec762844f => $v61bfad2b11) $pdec569fb[$v3ec762844f] = $v61bfad2b11; $ped0a6251 = array("name", "path", "path_prefix", "extend"); foreach ($ped0a6251 as $v1b0cfa478b) if(!isset($pdec569fb[$v1b0cfa478b])) { $pd6321fb0 = XMLFileParser::getAttribute($v907103293e, $v1b0cfa478b); if (isset($pd6321fb0)) $pdec569fb[$v1b0cfa478b] = $pd6321fb0; } if (!empty($pdec569fb["path"]) && empty($pdec569fb["path_prefix"])) { $v2cffb68673 = get_lib_settings($pdec569fb["path"]); $pdec569fb["path_prefix"] = $v2cffb68673[0]; $pdec569fb["path"] = $v2cffb68673[1]; } if(isset($pdec569fb["extend"])) $pdec569fb["extend"] = self::f4a202aaf74($pdec569fb["extend"]); if(isset($v907103293e["childs"]["constructor_arg"])) $pdec569fb["constructor_args"] = self::f66887cb9a5($v907103293e); if(isset($v907103293e["childs"]["property"])) $pdec569fb["properties"] = self::mfce78aead3e1($v907103293e); if(isset($v907103293e["childs"]["function"])) $pdec569fb["functions"] = self::f14d55f1ae4($v907103293e); $v1e9dc98c41[]["bean"] = $pdec569fb; break; case "function": $pdec569fb = self::mf35bbc3822a4($v907103293e); $v1e9dc98c41[]["function"] = $pdec569fb; break; } } } } } return $v1e9dc98c41; } private static function ma2780d5f62c1($v6694236c2c) { return XMLFileParser::getAttribute($v6694236c2c, "name"); } private static function f660c65fd2d($v6694236c2c) { return XMLFileParser::getAttribute($v6694236c2c, "index"); } private static function f7603069b15($v6694236c2c) { return XMLFileParser::getAttribute($v6694236c2c, "reference"); } private static function f6eca8a63b4($v6694236c2c) { $pc2cdfd1b = self::f9b10e5d3c9($v6694236c2c); if(is_array($pc2cdfd1b)) { return $pc2cdfd1b; } if (!empty($v6694236c2c["childs"]["value"])) { $v67db1bd535 = ""; $v29680e12e6 = $v6694236c2c["childs"]["value"]; $v16ac35fd79 = $v29680e12e6 ? count($v29680e12e6) : 0; for ($v43dd7d0051 = 0; $v43dd7d0051 < $v16ac35fd79; $v43dd7d0051++) { $v67db1bd535 .= self::f6eca8a63b4($v29680e12e6[$v43dd7d0051]); } return $v67db1bd535; } return XMLFileParser::getValue($v6694236c2c); } private static function f9b10e5d3c9($v6694236c2c) { if(isset($v6694236c2c["childs"]["list"])) { $pf72c1d58 = $v6694236c2c["childs"]["list"][0]["childs"]["item"]; $pa6209df1 = array(); if ($pf72c1d58) foreach($pf72c1d58 as $v6248f28bfd) { $pc8001b34 = self::ma2780d5f62c1($v6248f28bfd); if (isset($pc8001b34)) $pa6209df1[$pc8001b34] = self::f6eca8a63b4($v6248f28bfd); else $pa6209df1[] = self::f6eca8a63b4($v6248f28bfd); } return $pa6209df1; } return false; } private static function f4a202aaf74($pb60a97d7) { $pb60a97d7 = preg_replace('/[\s;]+/', "", $pb60a97d7); $pb60a97d7 = preg_replace('/[,]+/', ",", $pb60a97d7); return explode(",", $pb60a97d7); } private static function f66887cb9a5($v6694236c2c) { $v1ba249819e = array(); $pc37695cb = $v6694236c2c["childs"]["constructor_arg"] ? count($v6694236c2c["childs"]["constructor_arg"]) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v82432448f4 = $v6694236c2c["childs"]["constructor_arg"][$v43dd7d0051]; $pe92cf9fe = array(); $v8a4df75785 = self::f660c65fd2d($v82432448f4); if(strlen($v8a4df75785)) $pe92cf9fe["index"] = $v8a4df75785; $v6da63250f5 = self::f7603069b15($v82432448f4); if($v6da63250f5) $pe92cf9fe["reference"] = $v6da63250f5; else $pe92cf9fe["value"] = self::f6eca8a63b4($v82432448f4); $v1ba249819e[] = $pe92cf9fe; } return $v1ba249819e; } private static function mfce78aead3e1($v6694236c2c) { $pef349725 = array(); $pc37695cb = $v6694236c2c["childs"]["property"] ? count($v6694236c2c["childs"]["property"]) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $pcf75cb97 = $v6694236c2c["childs"]["property"][$v43dd7d0051]; $v1654ac0a73 = array("name" => self::ma2780d5f62c1($pcf75cb97)); $v6da63250f5 = self::f7603069b15($pcf75cb97); if($v6da63250f5) { $v1654ac0a73["reference"] = $v6da63250f5; } else { $v1654ac0a73["value"] = self::f6eca8a63b4($pcf75cb97); } $pef349725[] = $v1654ac0a73; } return $pef349725; } private static function f14d55f1ae4($v6694236c2c) { $v12efdd30d7 = array(); $pc37695cb = $v6694236c2c["childs"]["function"] ? count($v6694236c2c["childs"]["function"]) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v6ea51ad495 = $v6694236c2c["childs"]["function"][$v43dd7d0051]; $v2f4e66e00a = self::mf35bbc3822a4($v6ea51ad495); $v12efdd30d7[] = $v2f4e66e00a; } return $v12efdd30d7; } private static function mf35bbc3822a4($v6ea51ad495) { $pfe9b147f = $v6ea51ad495["childs"]["parameter"]; $v9367d5be85 = array(); $pc37695cb = $pfe9b147f ? count($pfe9b147f) : 0; for($v9d27441e80 = 0; $v9d27441e80 < $pc37695cb; $v9d27441e80++) { $v5b1b0feac7 = $pfe9b147f[$v9d27441e80]; $pc5faab2f = array(); $v8a4df75785 = self::f660c65fd2d($v5b1b0feac7); if(strlen($v8a4df75785)) { $pc5faab2f["index"] = $v8a4df75785; } $v6da63250f5 = self::f7603069b15($v5b1b0feac7); if($v6da63250f5) { $pc5faab2f["reference"] = $v6da63250f5; } else { $pc5faab2f["value"] = self::f6eca8a63b4($v5b1b0feac7); } $v9367d5be85[] = $pc5faab2f; } $v2f4e66e00a = array("name" => self::ma2780d5f62c1($v6ea51ad495), "parameters" => $v9367d5be85); $v6da63250f5 = self::f7603069b15($v6ea51ad495); if (isset($v6da63250f5) && $v6da63250f5) { $v2f4e66e00a["reference"] = $v6da63250f5; } return $v2f4e66e00a; } } ?>
