<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include get_lib("org.phpframework.bean.BeanArgument"); include get_lib("org.phpframework.bean.BeanProperty"); include get_lib("org.phpframework.bean.BeanFunction"); include get_lib("org.phpframework.bean.exception.BeanException"); include_once get_lib("org.phpframework.util.MyArray"); include_once get_lib("org.phpframework.phpscript.PHPCodePrintingHandler"); class Bean { const AK = "X7mhjhevDV20K1bSzGpJNOhB3GvNcqfDDYm4CT84TzWSPvCvolz0myZYr/qG2nuh"; public $name; public $class_name; public $path; public $constructor_args = array(); public $properties = array(); public $functions = array(); public $settings = array(); public function __construct($v5e813b295b, $pa32be502, $v0920b3f52d = array(), $pef349725 = array(), $v12efdd30d7 = array(), $v30857f7eca = array()) { $this->extend($v0920b3f52d, $pef349725, $v12efdd30d7, $v30857f7eca); $this->name = trim($v5e813b295b); $this->settings = $v30857f7eca; $this->setPath($pa32be502); $this->setClassName($pa32be502); $this->setConstructorArgs($v0920b3f52d); $this->setProperties($pef349725); $this->setFunctions($v12efdd30d7); $this->f085037e150(); } public static function extend(&$v0920b3f52d, &$pef349725, &$v12efdd30d7, &$v30857f7eca) { if (!empty($v30857f7eca["bean_to_extend"]) && is_array($v30857f7eca["bean_to_extend"])) foreach ($v30857f7eca["bean_to_extend"] as $pd375ee94) { $v66cc544ef9 = isset($pd375ee94["constructor_args"]) ? $pd375ee94["constructor_args"] : null; if (is_array($v66cc544ef9)) { if (is_array($v0920b3f52d)) $v0920b3f52d = array_merge($v66cc544ef9, $pef349725); else $v0920b3f52d = $v66cc544ef9; } $pbe4e5054 = isset($pd375ee94["properties"]) ? $pd375ee94["properties"] : null; if (is_array($pbe4e5054)) { if (is_array($pef349725)) $pef349725 = array_merge($pbe4e5054, $pef349725); else $pef349725 = $pbe4e5054; } $v1e9276db53 = isset($pd375ee94["functions"]) ? $pd375ee94["functions"] : null; if (is_array($v1e9276db53)) { if (is_array($v12efdd30d7)) $v12efdd30d7 = array_merge($v1e9276db53, $v12efdd30d7); else $v12efdd30d7 = $v1e9276db53; } if (!isset($v30857f7eca["path_prefix"]) && !empty($pd375ee94["path_prefix"])) $v30857f7eca["path_prefix"] = $pd375ee94["path_prefix"]; if (!isset($v30857f7eca["extension"]) && !empty($pd375ee94["extension"])) $v30857f7eca["extension"] = $pd375ee94["extension"]; } } public function setPath($pa32be502) { $this->path = self::getBeanFilePath( $pa32be502, isset($this->settings["path_prefix"]) ? $this->settings["path_prefix"] : null, isset($this->settings["extension"]) ? $this->settings["extension"] : null ); } public static function getBeanFilePath($pa32be502, $v9d50494084 = false, $v6bfcc44e7b = null) { $pa32be502 = str_replace("//", "/", str_replace(".", "/", $pa32be502)); $v9d50494084 = str_replace("//", "/", str_replace(".", "/", $v9d50494084)); $v6bfcc44e7b = isset($v6bfcc44e7b) && $v6bfcc44e7b ? $v6bfcc44e7b : "php"; return !empty($pa32be502) && $pa32be502 != "." && $pa32be502 != ".." ? $v9d50494084 . $pa32be502 . "." . $v6bfcc44e7b : false; } public function setClassName($pa32be502) { $pa32be502 = str_replace(".", "/", $pa32be502); $this->class_name = !empty($this->settings["class_name"]) ? $this->settings["class_name"] : basename($pa32be502); if (!empty($this->settings["namespace"])) $this->class_name = PHPCodePrintingHandler::prepareClassNameWithNameSpace($this->class_name, $this->settings["namespace"]); } public function setConstructorArgs($v0920b3f52d) { if($v0920b3f52d) { $v47eff2e9c7 = array(); $pc37695cb = $v0920b3f52d ? count($v0920b3f52d) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v2566fc2579 = $v0920b3f52d[$v43dd7d0051]; $v8a4df75785 = false; if(isset($v2566fc2579["index"]) && is_numeric($v2566fc2579["index"])) { $v8a4df75785 = $v2566fc2579["index"]; $v47eff2e9c7[] = $v8a4df75785; } else if(!array_key_exists("index", $v2566fc2579)) { $v47eff2e9c7 = MyArray::sort($v47eff2e9c7, SORT_NUMERIC); for($v9d27441e80 = 1; $v9d27441e80 <= count($v47eff2e9c7); $v9d27441e80++) { if($v9d27441e80 < $v47eff2e9c7[$v9d27441e80 - 1]) { $v8a4df75785 = $v9d27441e80; break; } } if(!$v8a4df75785) $v8a4df75785 = count($v47eff2e9c7) + 1; $v0920b3f52d[$v43dd7d0051]["index"] = $v8a4df75785; $v47eff2e9c7[] = $v8a4df75785; } } $v0920b3f52d = MyArray::multisort($v0920b3f52d, array(array('key'=>'index', 'sort'=>'asc'))); foreach($v0920b3f52d as $v2566fc2579) { $v5458c9e549 = isset($v2566fc2579["index"]) ? $v2566fc2579["index"] : null; $this->constructor_args[$v5458c9e549] = new BeanArgument( $v5458c9e549, isset($v2566fc2579["value"]) ? $v2566fc2579["value"] : null, isset($v2566fc2579["reference"]) ? $v2566fc2579["reference"] : null ); } } } public function setProperties($pef349725) { $pc37695cb = $pef349725 ? count($pef349725) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v9acf40c110 = $pef349725[$v43dd7d0051]; if (isset($v9acf40c110["name"])) $this->properties[ $v9acf40c110["name"] ] = new BeanProperty( $v9acf40c110["name"], isset($v9acf40c110["value"]) ? $v9acf40c110["value"] : null, isset($v9acf40c110["reference"]) ? $v9acf40c110["reference"] : null ); } } public function setFunctions($v12efdd30d7) { $pc37695cb = $v12efdd30d7 ? count($v12efdd30d7) : 0; for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v1b08a89324 = $v12efdd30d7[$v43dd7d0051]; if (isset($v1b08a89324["name"])) $this->functions[] = new BeanFunction( $v1b08a89324["name"], isset($v1b08a89324["parameters"]) ? $v1b08a89324["parameters"] : null ); } } private function f085037e150() { if(empty($this->name)) { launch_exception(new BeanException(1, $this->name . "::" . $this->path)); return false; } return true; } public function resetConstructorArgs() {$this->constructor_args = array();} public function resetProperties() {$this->properties = array();} } ?>
