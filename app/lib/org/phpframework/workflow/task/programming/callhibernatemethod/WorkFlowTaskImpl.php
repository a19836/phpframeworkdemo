<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
namespace WorkFlowTask\programming\callhibernatemethod; include_once get_lib("org.phpframework.workflow.WorkFlowTask"); class WorkFlowTaskImpl extends \WorkFlowTask { private static $v42484fc504 = array( "insert" => array("data", "ids", "options"), "insertAll" => array("data", "statuses", "ids", "options"), "update" => array("data", "options"), "updateAll" => array("data", "statuses", "options"), "insertOrUpdate" => array("data", "ids", "options"), "insertOrUpdateAll" => array("data", "statuses", "ids", "options"), "delete" => array("data", "options"), "deleteAll" => array("data", "statuses", "options"), "updatePrimaryKeys" => array("data", "options"), "findById" => array("data", "data_options", "options"), "find" => array("data", "options"), "count" => array("data", "options"), "findRelationships" => array("parent_ids", "options"), "findRelationship" => array("rel_name", "parent_ids", "options"), "countRelationships" => array("parent_ids", "options"), "countRelationship" => array("rel_name", "parent_ids", "options"), "callQuerySQL" => array("query_type", "query_id", "data", "options"), "callQuery" => array("query_type", "query_id", "data", "options"), "callInsertSQL" => array("query_id", "data", "options"), "callInsert" => array("query_id", "data", "options"), "callUpdateSQL" => array("query_id", "data", "options"), "callUpdate" => array("query_id", "data", "options"), "callDeleteSQL" => array("query_id", "data", "options"), "callDelete" => array("query_id", "data", "options"), "callSelectSQL" => array("query_id", "data", "options"), "callSelect" => array("query_id", "data", "options"), "callProcedureSQL" => array("query_id", "data", "options"), "callProcedure" => array("query_id", "data", "options"), "getFunction" => array("function_name", "data", "options"), "getData" => array("sql", "options"), "setData" => array("sql", "options"), "getInsertedId" => array("options"), ); public function __construct() { $this->priority = 2; } public function createTaskPropertiesFromCodeStmt($v5faa4b8a01, $pb16df866, &$v6939304e91 = null, &$v1f377b389c = null) { $v9073377656 = $pb16df866->getObjectMethodProps($v5faa4b8a01); if ($v9073377656) { $v603bd47baf = $v9073377656["method_name"]; if (isset(self::$v42484fc504[$v603bd47baf]) && empty($v9073377656["method_static"])) { $v7959970a41 = $v5c1c342594 = is_array($pb16df866->shared_objects["hibernate_vars"]) && in_array($v9073377656["method_obj"], $pb16df866->shared_objects["hibernate_vars"]); $v067674f4e4 = "<?php\n" . $v9073377656["method_obj"] . "\n?>"; if (!$v5c1c342594) { $pa47d2196 = $pb16df866->getParsedCodeAsArray($v067674f4e4); $v5c1c342594 = $pa47d2196["task"][0]["childs"]["tag"][0]["value"] == "callhibernateobject"; } if ($v5c1c342594) { if ($v7959970a41) { $v9073377656["broker_method_obj_type"] = "exists_hbn_var"; } else { $pda8b441b = $pb16df866->getPHPParserEmulative()->parse($v067674f4e4); $v9c94aa6d3d = $pb16df866->getObjectMethodProps($pda8b441b[0]); $v9073377656["method_obj"] = $v9c94aa6d3d["method_obj"]; $v9073377656["module_id"] = self::getConfiguredParsedType($v9c94aa6d3d["method_args"][0]["value"]); $v9073377656["module_id_type"] = $v9c94aa6d3d["method_args"][0]["type"]; $v9073377656["service_id"] = self::getConfiguredParsedType($v9c94aa6d3d["method_args"][1]["value"]); $v9073377656["service_id_type"] = $v9c94aa6d3d["method_args"][1]["type"]; $v9073377656["options"] = $v9c94aa6d3d["method_args"][2]["value"]; $v9073377656["options_type"] = self::getConfiguredParsedType($v9c94aa6d3d["method_args"][2]["type"], array("", "string", "variable", "array")); } $v9073377656["service_method"] = $v9073377656["method_name"]; $v9073377656["service_method_type"] = "string"; if ($v9073377656["options_type"] == "array") { $v9e594c5485 = $pb16df866->getPHPParserEmulative()->parse("<?php\n" . $v9073377656["options"] . "\n?>"); $v9073377656["options"] = $pb16df866->getArrayItems($v9e594c5485[0]->items); } $v390ebba395 = self::$v42484fc504[$v603bd47baf]; $v390ebba395 = $v390ebba395 ? $v390ebba395 : array(); foreach ($v390ebba395 as $v36a8e7d2ce => $v3e2ea7c182) { $v2be41c2bd2 = strtolower($v3e2ea7c182); $v9073377656["sma_" . $v2be41c2bd2] = $v9073377656["method_args"][$v36a8e7d2ce]["value"]; $v9073377656["sma_" . $v2be41c2bd2 . "_type"] = $v9073377656["method_args"][$v36a8e7d2ce]["type"]; if ($v9073377656["sma_" . $v2be41c2bd2 . "_type"] == "array") { $pdfadc555 = $pb16df866->getPHPParserEmulative()->parse("<?php\n" . $v9073377656["sma_" . $v2be41c2bd2] . "\n?>"); $v9073377656["sma_" . $v2be41c2bd2] = $pb16df866->getArrayItems($pdfadc555[0]->items); } if ($v2be41c2bd2 == "data" || $v2be41c2bd2 == "data_options" || $v2be41c2bd2 == "parent_ids" || $v2be41c2bd2 == "options") $v9073377656["sma_" . $v2be41c2bd2 . "_type"] = self::getConfiguredParsedType($v9073377656["sma_" . $v2be41c2bd2 . "_type"], array("", "string", "variable", "array")); else $v9073377656["sma_" . $v2be41c2bd2 . "_type"] = self::getConfiguredParsedType($v9073377656["sma_" . $v2be41c2bd2 . "_type"]); } unset($v9073377656["method_name"]); unset($v9073377656["method_args"]); unset($v9073377656["method_static"]); $v9073377656["label"] = "Call " . ($v9073377656["service_id"] ? self::prepareTaskPropertyValueLabelFromCodeStmt($v9073377656["service_id"]) . "." : "") . self::prepareTaskPropertyValueLabelFromCodeStmt($v9073377656["service_method"]) . ($v9073377656["module_id"] ? " in " . self::prepareTaskPropertyValueLabelFromCodeStmt($v9073377656["module_id"]) : ""); $v9073377656["exits"] = array( self::DEFAULT_EXIT_ID => array( "color" => "#426efa", ), ); return $v9073377656; } } } } public function parseProperties(&$v7f5911d32d) { $v3c3af72a1c = $v7f5911d32d["raw_data"]; $v6f41d73021 = $v3c3af72a1c["childs"]["properties"][0]["childs"]["options_type"][0]["value"]; if ($v6f41d73021 == "array") { $v5d3813882f = $v3c3af72a1c["childs"]["properties"][0]["childs"]["options"]; $v5d3813882f = self::parseArrayItems($v5d3813882f); } else { $v5d3813882f = $v3c3af72a1c["childs"]["properties"][0]["childs"]["options"][0]["value"]; } $pef349725 = array( "broker_method_obj_type" => $v3c3af72a1c["childs"]["properties"][0]["childs"]["broker_method_obj_type"][0]["value"], "method_obj" => $v3c3af72a1c["childs"]["properties"][0]["childs"]["method_obj"][0]["value"], "module_id" => $v3c3af72a1c["childs"]["properties"][0]["childs"]["module_id"][0]["value"], "module_id_type" => $v3c3af72a1c["childs"]["properties"][0]["childs"]["module_id_type"][0]["value"], "service_id" => $v3c3af72a1c["childs"]["properties"][0]["childs"]["service_id"][0]["value"], "service_id_type" => $v3c3af72a1c["childs"]["properties"][0]["childs"]["service_id_type"][0]["value"], "options" => $v5d3813882f, "options_type" => $v6f41d73021, "service_method" => $v3c3af72a1c["childs"]["properties"][0]["childs"]["service_method"][0]["value"], "service_method_type" => $v3c3af72a1c["childs"]["properties"][0]["childs"]["service_method_type"][0]["value"], ); $v9073377656 = $v3c3af72a1c["childs"]["properties"][0]["childs"]; if (is_array($v9073377656)) { foreach ($v9073377656 as $v5e45ec9bb9 => $pd6321fb0) { if (substr($v5e45ec9bb9, 0, 4) == "sma_") { if (substr($v5e45ec9bb9, -5) == "_type") { $pef349725[$v5e45ec9bb9] = $pd6321fb0[0]["value"]; } else { $pef349725[$v5e45ec9bb9] = $v9073377656[$v5e45ec9bb9 . "_type"][0]["value"] == "array" ? self::parseArrayItems($pd6321fb0) : $pd6321fb0[0]["value"]; } } } } $pef349725 = self::parseResultVariableProperties($v3c3af72a1c, $pef349725); return $pef349725; } public function printCode($v1d696dbd12, $v56dcda6d50, $v54bb17785b = "", $v5d3813882f = null) { $v539082ff30 = $this->data; $pef349725 = $v539082ff30["properties"]; $v067674f4e4 = ""; if (($pef349725["broker_method_obj_type"] == "exists_hbn_var" || ($pef349725["module_id"] && $pef349725["service_id"])) && $pef349725["service_method"]) { $v1cfba8c105 = self::getPropertiesResultVariableCode($pef349725); $pb537c4d4 = $pef349725["method_obj"]; if ($pb537c4d4) { $v0ee64549f2 = strpos($pb537c4d4, "::"); $pd6f5fc01 = strpos($pb537c4d4, "->"); $pb537c4d4 = substr($pb537c4d4, 0, 1) != '$' && (!$v0ee64549f2 || ($pd6f5fc01 && $v0ee64549f2 > $pd6f5fc01)) ? '$' . $pb537c4d4 : $pb537c4d4; $pb537c4d4 .= "->"; } $v9c29bc9d47 = self::getVariableValueCode($pef349725["service_method"], $pef349725["service_method_type"]); $v9c29bc9d47 = $pef349725["service_method_type"] == "string" ? str_replace('"', '', $v9c29bc9d47) : $v9c29bc9d47; $v390ebba395 = self::$v42484fc504[$v9c29bc9d47]; $v390ebba395 = $v390ebba395 ? $v390ebba395 : array(); $v86066462c3 = ""; foreach ($v390ebba395 as $v36a8e7d2ce => $v3e2ea7c182) { $v2be41c2bd2 = strtolower($v3e2ea7c182); $v3fb9f41470 = $pef349725["sma_" . $v2be41c2bd2 . "_type"]; $v67db1bd535 = $pef349725["sma_" . $v2be41c2bd2]; $pea70e132 = $v3fb9f41470 == "array" ? self::getArrayString($v67db1bd535) : self::getVariableValueCode($v67db1bd535, $v3fb9f41470); $pea70e132 = isset($pea70e132) && strlen($pea70e132) ? $pea70e132 : "null"; $v86066462c3 .= ($v86066462c3 ? ", " : "") . $pea70e132; } $v067674f4e4 = $v54bb17785b . $v1cfba8c105; $v067674f4e4 .= $pb537c4d4; if ($pef349725["broker_method_obj_type"] != "exists_hbn_var") { $pad771b18 = $pef349725["options_type"]; if ($pad771b18 == "array") $pebb3f429 = self::getArrayString($pef349725["options"]); else $pebb3f429 = self::getVariableValueCode($pef349725["options"], $pad771b18); $v067674f4e4 .= "callObject("; $v067674f4e4 .= self::getVariableValueCode($pef349725["module_id"], $pef349725["module_id_type"]) . ", "; $v067674f4e4 .= self::getVariableValueCode($pef349725["service_id"], $pef349725["service_id_type"]); $v067674f4e4 .= $pebb3f429 && $pebb3f429 != "null" ? ", " . $pebb3f429 : ""; $v067674f4e4 .= ")->"; } $v067674f4e4 .= "$v9c29bc9d47(" . $v86066462c3 . ");\n"; } return $v067674f4e4 . self::printTask($v1d696dbd12, $v539082ff30["exits"][self::DEFAULT_EXIT_ID], $v56dcda6d50, $v54bb17785b, $v5d3813882f); } } ?>
