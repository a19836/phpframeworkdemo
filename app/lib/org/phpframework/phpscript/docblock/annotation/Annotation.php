<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
namespace DocBlockParser\Annotation; include_once get_lib("org.phpframework.object.ObjectHandler"); include_once get_lib("org.phpframework.object.ObjTypeHandler"); include_once get_lib("org.phpframework.phpscript.docblock.annotation.exception.AnnotationException"); abstract class Annotation { protected $vectors; protected $is_input = false; protected $is_output = false; protected $args; protected $errors = array(); public abstract function parseArgs($v6da2e4df28, $v86066462c3); public abstract function checkMethodAnnotations(&$v5730eacfdc, $pcc2d93a5); private $v37e6ee1556 = false; protected static function getConfiguredArgs($v86066462c3) { $v6beb66fea4 = array(); if (is_array($v86066462c3)) { if (isset($v86066462c3["default"])) $v4bfe0500a2 = $v86066462c3["default"]; if (isset($v86066462c3["type"])) $v3fb9f41470 = $v86066462c3["type"]; if (isset($v86066462c3["mandatory"])) $v18d8ec0406 = $v86066462c3["mandatory"]; if (isset($v86066462c3["notnull"]) || isset($v86066462c3["not_null"])) $pf6e8b316 = isset($v86066462c3["notnull"]) ? $v86066462c3["notnull"] : $v86066462c3["not_null"]; if (isset($v86066462c3["add_sql_slashes"])) $v64a24c63c3 = $v86066462c3["add_sql_slashes"]; if (isset($v86066462c3["sanitize_html"])) $v665cc68459 = $v86066462c3["sanitize_html"]; if (isset($v86066462c3["min_length"])) $v065c8e242b = $v86066462c3["min_length"]; else if (isset($v86066462c3["min_size"])) $v065c8e242b = $v86066462c3["min_size"]; if (isset($v86066462c3["max_length"])) $pa9e1f4ff = $v86066462c3["max_length"]; else if (isset($v86066462c3["max_size"])) $pa9e1f4ff = $v86066462c3["max_size"]; else if (isset($v86066462c3["length"])) $pa9e1f4ff = $v86066462c3["length"]; else if (isset($v86066462c3["size"])) $pa9e1f4ff = $v86066462c3["size"]; if (isset($v86066462c3["min_words"])) $v99c0c61b52 = $v86066462c3["min_words"]; if (isset($v86066462c3["max_words"])) $pde534d34 = $v86066462c3["max_words"]; if (isset($v86066462c3["min_value"])) $pfd5c64b3 = $v86066462c3["min_value"]; if (isset($v86066462c3["max_value"])) $v44a91e0a65 = $v86066462c3["max_value"]; foreach ($v86066462c3 as $pe5c5e2fe => $v956913c90f) { if (is_numeric($pe5c5e2fe)) { $pf09bd9b7 = strtolower($v956913c90f); if ($pf09bd9b7 == "notnull" || $pf09bd9b7 == "not_null" || $pf09bd9b7 == "@notnull" || $pf09bd9b7 == "@not_null") $pf6e8b316 = true; else if (strpos($pf09bd9b7, "@notnull") === 0 || strpos($pf09bd9b7, "@not_null") === 0) $pf6e8b316 = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@default") === 0) $v4bfe0500a2 = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@mandatory") === 0) $v18d8ec0406 = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@type") === 0) $v3fb9f41470 = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@addsqlslashes") === 0) $v64a24c63c3 = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@sanitizehtml") === 0) $v665cc68459 = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@minlength") === 0 || strpos($pf09bd9b7, "@minsize") === 0) $v065c8e242b = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@maxlength") === 0 || strpos($pf09bd9b7, "@length") === 0 || strpos($pf09bd9b7, "@maxsize") === 0 || strpos($pf09bd9b7, "@size") === 0) $pa9e1f4ff = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@minwords") === 0) $v99c0c61b52 = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@maxwords") === 0) $pde534d34 = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@minvalue") === 0) $pfd5c64b3 = self::mc1a67e0e0caa($v956913c90f); else if (strpos($pf09bd9b7, "@maxvalue") === 0) $v44a91e0a65 = self::mc1a67e0e0caa($v956913c90f); else if (trim(substr($v956913c90f, 0, 1)) == "@") { $pa051dc1c = self::mb6ab8890eca8($v956913c90f); $v6beb66fea4["others"][$pa051dc1c][] = $v956913c90f; } } } if (isset($v4bfe0500a2)) $v6beb66fea4["default"] = self::parseValue($v4bfe0500a2); if (isset($v18d8ec0406)) $v6beb66fea4["mandatory"] = self::parseValue($v18d8ec0406) ? true : false; if (isset($v3fb9f41470)) $v6beb66fea4["type"] = $v3fb9f41470; if (isset($pf6e8b316) && $pf6e8b316) $v6beb66fea4["not_null"] = self::parseValue($pf6e8b316) ? true : false; if (isset($v64a24c63c3)) $v6beb66fea4["add_sql_slashes"] = self::parseValue($v64a24c63c3) ? true : false; if (isset($v665cc68459)) $v6beb66fea4["sanitize_html"] = self::parseValue($v665cc68459) ? true : false; if (isset($v065c8e242b) && is_numeric($v065c8e242b)) $v6beb66fea4["min_length"] = $v065c8e242b; if (isset($pa9e1f4ff) && is_numeric($pa9e1f4ff)) $v6beb66fea4["max_length"] = $pa9e1f4ff; if (isset($v99c0c61b52) && is_numeric($v99c0c61b52)) $v6beb66fea4["min_words"] = $v99c0c61b52; if (isset($pde534d34) && is_numeric($pde534d34)) $v6beb66fea4["max_words"] = $pde534d34; if (isset($pfd5c64b3) && is_numeric($pfd5c64b3)) $v6beb66fea4["min_value"] = $pfd5c64b3; if (isset($v44a91e0a65) && is_numeric($v44a91e0a65)) $v6beb66fea4["max_value"] = $v44a91e0a65; if (isset($v86066462c3["desc"])) $v6beb66fea4["desc"] = self::parseValue($v86066462c3["desc"]); } return $v6beb66fea4; } protected function checkValueAnnotations(&$peca0c1a2, &$v687583a48f = false) { if (is_array($this->args)) { $pa7e1c001 = $peca0c1a2; if (isset($this->args["default"]) && !isset($peca0c1a2)) { $peca0c1a2 = $this->getDefaultValue($this->args["default"], $v5c1c342594); $v687583a48f = $peca0c1a2 != $pa7e1c001; if (!$v5c1c342594) return false; } if (isset($this->args["not_null"]) && !$this->ma7512e5eaef9($peca0c1a2)) return false; if (isset($peca0c1a2)) { $pae40e9cc = (is_array($peca0c1a2) && count($peca0c1a2) == 0) || (!is_array($peca0c1a2) && !is_object($peca0c1a2) && mb_strlen($peca0c1a2) == 0); if (!empty($this->args["type"]) && !$pae40e9cc && !$this->f2a4bc82dca($peca0c1a2, $this->args["type"])) return false; if (isset($this->args["min_length"]) && !$this->mfc555b55eb25($peca0c1a2, $this->args["min_length"])) return false; if (isset($this->args["max_length"]) && !$this->f51929e61e1($peca0c1a2, $this->args["max_length"])) { if (is_string($peca0c1a2)) { $pa9e1f4ff = $this->args["max_length"]; if (!empty($this->args["others"]["lstrcut"])) { $peca0c1a2 = substr($peca0c1a2, 0, $pa9e1f4ff); $v687583a48f = $peca0c1a2 != $pa7e1c001; } else if (!empty($this->args["others"]["mstrcut"])) { $pabe9f1e0 = (int) ($pa9e1f4ff / 2); $peca0c1a2 = substr($peca0c1a2, 0, $pabe9f1e0) . substr($peca0c1a2, -$pabe9f1e0); $v687583a48f = $peca0c1a2 != $pa7e1c001; } else if (!empty($this->args["others"]["rstrcut"])) { $peca0c1a2 = substr($peca0c1a2, -$pa9e1f4ff); $v687583a48f = $peca0c1a2 != $pa7e1c001; } else return false; } else return false; } if (is_string($peca0c1a2)) { if (isset($this->args["min_words"]) && !$this->f76db9c942f($peca0c1a2, $this->args["min_words"])) return false; if (isset($this->args["max_words"]) && !$this->mab3da36ef2d7($peca0c1a2, $this->args["max_words"])) return false; } if (is_numeric($peca0c1a2)) { if (isset($this->args["min_value"]) && !$this->f80cf4b6719($peca0c1a2, $this->args["min_value"])) return false; if (isset($this->args["max_value"]) && !$this->f5c69c1b5da($peca0c1a2, $this->args["max_value"])) return false; } if (isset($this->args["add_sql_slashes"]) && !$this->f9267f40ff5($peca0c1a2) && is_string($peca0c1a2)) { $peca0c1a2 = addcslashes($peca0c1a2, "\\'"); $v687583a48f = $peca0c1a2 != $pa7e1c001; } if (isset($this->args["sanitize_html"])) { if (!$this->v37e6ee1556) include_once get_lib("org.phpframework.util.web.html.XssSanitizer"); $this->v37e6ee1556 = true; $peca0c1a2 = \XssSanitizer::sanitizeHtml($peca0c1a2); $v687583a48f = $peca0c1a2 != $pa7e1c001; } } } return true; } private static function mb6ab8890eca8($v39e1347c93) { preg_match_all("/^@(\w+)([^\w]*)/u", $v39e1347c93, $pbae7526c, PREG_PATTERN_ORDER); if (!empty($pbae7526c[0])) return self::parseValue($pbae7526c[1][0]); return null; } private static function mc1a67e0e0caa($v39e1347c93) { preg_match_all("/^@(\w+)(\s*)\(([^\)]*)\)/u", $v39e1347c93, $pbae7526c, PREG_PATTERN_ORDER); if (!empty($pbae7526c[0])) return self::parseValue($pbae7526c[3][0]); return null; } private function mfc555b55eb25($v67db1bd535, $v0911c6122e) { if (isset($v67db1bd535) && ((is_array($v67db1bd535) && count($v67db1bd535) >= $v0911c6122e) || (!is_array($v67db1bd535) && !is_object($v67db1bd535) && mb_strlen($v67db1bd535) >= $v0911c6122e))) return true; $this->errors[] = self::f11e198cb32($v67db1bd535) . " length is smaller than $v0911c6122e"; return false; } private function f51929e61e1($v67db1bd535, $v0911c6122e) { if (!isset($v67db1bd535) || (is_array($v67db1bd535) && count($v67db1bd535) <= $v0911c6122e) || (!is_array($v67db1bd535) && !is_object($v67db1bd535) && mb_strlen($v67db1bd535) <= $v0911c6122e)) return true; $this->errors[] = self::f11e198cb32($v67db1bd535) . " length is bigger than $v0911c6122e"; return false; } private function f76db9c942f($v67db1bd535, $v0911c6122e) { if (isset($v67db1bd535) && !is_array($v67db1bd535) && !is_object($v67db1bd535) && count(preg_split('/\s+/', trim($v67db1bd535))) >= $v0911c6122e) return true; $this->errors[] = self::f11e198cb32($v67db1bd535) . " words count is smaller than $v0911c6122e"; return false; } private function mab3da36ef2d7($v67db1bd535, $v0911c6122e) { if (isset($v67db1bd535) && !is_array($v67db1bd535) && !is_object($v67db1bd535) && count(preg_split('/\s+/', trim($v67db1bd535))) <= $v0911c6122e) return true; $this->errors[] = self::f11e198cb32($v67db1bd535) . " words count is bigger than $v0911c6122e"; return false; } private function f80cf4b6719($v67db1bd535, $v956913c90f) { if (isset($v67db1bd535) && is_numeric($v67db1bd535) && $v67db1bd535 >= $v956913c90f) return true; $this->errors[] = self::f11e198cb32($v67db1bd535) . " is smaller than $v956913c90f"; return false; } private function f5c69c1b5da($v67db1bd535, $v956913c90f) { if (isset($v67db1bd535) && is_numeric($v67db1bd535) && $v67db1bd535 <= $v956913c90f) return true; $this->errors[] = self::f11e198cb32($v67db1bd535) . " is bigger than $v956913c90f"; return false; } private function ma7512e5eaef9($v67db1bd535) { if (isset($v67db1bd535)) return true; $this->errors[] = self::f11e198cb32($v67db1bd535) . " cannot be null"; return false; } private function f2a4bc82dca($v67db1bd535, $v3fb9f41470) { $v9cd205cadb = explode("|", $v3fb9f41470); $v4159504aa3 = array(); foreach ($v9cd205cadb as $pc37695cb) { $pc37695cb = trim($pc37695cb); if ($pc37695cb) { if (strtolower($pc37695cb) == "mixed") return true; $v4159504aa3[] = $pc37695cb; } } if ($v4159504aa3) { foreach ($v4159504aa3 as $pc37695cb) { $pc37695cb = \ObjTypeHandler::convertSimpleTypeIntoCompositeType($pc37695cb); try { $v972f1a5c2b = \ObjectHandler::createInstance($pc37695cb); if (\ObjectHandler::checkIfObjType($v972f1a5c2b) && $v972f1a5c2b->setInstance($v67db1bd535)) return true; } catch (\Exception $paec2c009) { global $GlobalErrorHandler; $GlobalErrorHandler && $GlobalErrorHandler->start(); } } $this->errors[] = self::f11e198cb32($v67db1bd535) . " is not a " . implode(" or ", $v4159504aa3); return false; } return true; } private function md54b956210af($v3fb9f41470) { $v9cd205cadb = explode("|", $v3fb9f41470); $v4159504aa3 = array(); foreach ($v9cd205cadb as $pc37695cb) { $pc37695cb = trim($pc37695cb); if ($pc37695cb) { if (strtolower($pc37695cb) == "mixed") return false; $v4159504aa3[] = $pc37695cb; } } if ($v4159504aa3) { foreach ($v4159504aa3 as $pc37695cb) { $pc37695cb = \ObjTypeHandler::convertSimpleTypeIntoCompositeType($pc37695cb); if (!\ObjTypeHandler::isPHPTypeNumeric($pc37695cb)) return false; } return true; } return false; } private function f9267f40ff5($v67db1bd535) { return is_string($v67db1bd535) && preg_match('~[^\x20-\x7E\t\r\n]~', $v67db1bd535) > 0; } private function f11e198cb32($v67db1bd535) { return preg_replace_callback('/\\\\u([0-9a-fA-F]{4})/', function ($v87ae7286da) { return mb_convert_encoding(pack('H*', $v87ae7286da[1]), 'UTF-8', 'UCS-2BE'); }, json_encode($v67db1bd535)); } protected static function parseValue($v67db1bd535) { $v67db1bd535 = trim($v67db1bd535); if ($v67db1bd535) { $pff5830e4 = substr($v67db1bd535, 0, 1); $pf548ad60 = substr($v67db1bd535, -1); if ($pff5830e4 == "[" || $pff5830e4 == "{") $v67db1bd535 = json_decode($v67db1bd535); else if ($pff5830e4 == '$') eval ('$v67db1bd535 = ' . $v67db1bd535 . ';'); else if (($pff5830e4 == '"' && $pf548ad60 == '"') || ($pff5830e4 == "'" && $pf548ad60 == "'")) $v67db1bd535 = substr($v67db1bd535, 1, -1); else { $pf09bd9b7 = strtolower($v67db1bd535); if ($pf09bd9b7 == "true") $v67db1bd535 = true; else if ($pf09bd9b7 == "false") $v67db1bd535 = false; else if ($pf09bd9b7 == "null") $v67db1bd535 = null; } } return $v67db1bd535; } protected function getDefaultValue($v67db1bd535, &$v5c1c342594) { $v5c1c342594 = true; if (substr($v67db1bd535, 0, 1) == "@") { try { $v5c1c342594 = eval('$v67db1bd535 = ' . substr($v67db1bd535, 1) . '; return 1;'); } catch (Exception $paec2c009) { $v5c1c342594 = false; launch_exception(new AnnotationException(1, $paec2c009, array($pe96e65ba, substr($v67db1bd535, 1)))); } if (!$v5c1c342594) { $pe96e65ba = $this->is_input ? 'param: ' . $this->args["name"] : 'return'; $this->errors[] = "Error in annotation ' . $pe96e65ba . ', when executing php function: " . substr($v67db1bd535, 1); } } return $v67db1bd535; } public function getVectors() { return $this->vectors; } public function isInput() { return $this->is_input; } public function isOutput() { return $this->is_output; } public function getArgs() { return $this->args; } public function getErrors() { return $this->errors; } } ?>
