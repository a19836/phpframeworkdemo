<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

include_once get_lib("org.phpframework.db.IDB"); include_once get_lib("org.phpframework.db.DBSQLConverter"); include_once get_lib("org.phpframework.db.DBStatic"); include_once get_lib("org.phpframework.db.DBDAO"); include_once get_lib("org.phpframework.db.exception.SQLException"); abstract class DB implements IDB { use DBStatic; use DBSQLConverter; use DBDAO; const FETCH_ASSOC = 1; const FETCH_NUM = 2; const FETCH_BOTH = 3; const FETCH_OBJECT = 4; protected $db_selected = false; protected $link = null; protected $options = null; protected $default_php_extension_type = ""; abstract public function parseDSN($v56c929bbd8); abstract public function getDSN($v5d3813882f = null); abstract public function getVersion(); abstract public function connect(); abstract public function connectWithoutDB(); abstract public function close(); abstract public function setCharset($pbebc8cef = 'utf8'); abstract public function selectDB($pb67a2609); abstract public function error(); abstract public function errno(); abstract public function execute($v3c76382d93, $v5d3813882f = false); abstract public function query($v3c76382d93, $v5d3813882f = false); abstract public function freeResult($v9ad1385268); abstract public function numRows($v9ad1385268); abstract public function numFields($v9ad1385268); abstract public function fetchArray($v9ad1385268, $v8966764c3b = false); abstract public function fetchField($v9ad1385268, $pac65f06f); abstract public function isResultValid($v9ad1385268); abstract public function listTables($pb67a2609 = false, $v5d3813882f = false); abstract public function listTableFields($pc661dc6b, $v5d3813882f = false); abstract public function getInsertedId($v5d3813882f = false); public function disconnect() { return $this->close(); } public function isConnected() { return $this->link ? true : false; } public function isDBSelected() { return $this->db_selected; } public function getConnectionLink() { return $this->link; } public function getConnectionPHPExtensionType() { return $this->default_php_extension_type; } public function getOptions() { return $this->options; } public function getOption($pe1d32923) { return $this->options[$pe1d32923]; } public function setOptions($v5d3813882f) { $this->options = $v5d3813882f; $this->options["persistent"] = !$this->options["persistent"] || $this->options["persistent"] == "false" || $this->options["persistent"] == "0" || $this->options["persistent"] == "null" ? false : true; $this->options["new_link"] = !$this->options["new_link"] || $this->options["new_link"] == "false" || $this->options["new_link"] == "0" || $this->options["new_link"] == "null" ? false : true; $this->options["port"] = is_numeric($this->options["port"]) ? $this->options["port"] : null; $this->options["encoding"] = $this->options["encoding"] ? $this->options["encoding"] : "utf8"; if (!$this->options["data_source"] && (!$this->options["host"] || !$this->options["username"])) { launch_exception(new SQLException(18, null, $this->options)); return false; } return true; } public function getFunction($v9d33ecaf56, $v9367d5be85 = false, $v5d3813882f = false) { $v7959970a41 = method_exists($this, $v9d33ecaf56); if (!$v7959970a41) { $pe3b24b6a = strtolower($v9d33ecaf56); $pb2bb35e9 = get_class_methods($this); if ($pb2bb35e9) foreach ($pb2bb35e9 as $v603bd47baf) if (strtolower($v603bd47baf) == $pe3b24b6a) { $v9d33ecaf56 = $v603bd47baf; $v7959970a41 = true; break; } } if ($v7959970a41) { $pc0481df4 = is_array($v9367d5be85) ? $v9367d5be85 : ($v9367d5be85 ? array($v9367d5be85) : array()); $v9ad1385268 = call_user_func_array(array($this, $v9d33ecaf56), $pc0481df4); if ($v9d33ecaf56 == "getOptions") $v9ad1385268["password"] = ""; else if ($v9d33ecaf56 == "getOption" && $pc0481df4 == "password") $v9ad1385268 = ""; return $v9ad1385268; } return null; } public function fetchRow($v9ad1385268) { try { return $this->fetchArray($v9ad1385268, DB::FETCH_NUM); }catch(Exception $paec2c009) { return launch_exception(new SQLException(9, $paec2c009, array($v9ad1385268))); } } public function fetchAssoc($v9ad1385268) { try { return $this->fetchArray($v9ad1385268, DB::FETCH_ASSOC); }catch(Exception $paec2c009) { return launch_exception(new SQLException(10, $paec2c009, array($v9ad1385268))); } } public function fetchObject($v9ad1385268) { try { return $this->fetchArray($v9ad1385268, DB::FETCH_OBJECT); }catch(Exception $paec2c009) { return launch_exception(new SQLException(11, $paec2c009, array($v9ad1385268))); } } public function getData($v3c76382d93, $v5d3813882f = false) { $v5d3813882f = $v5d3813882f ? $v5d3813882f : array(); $v539082ff30 = array("fields" => array(), "result" => array()); try { $v1612a5ddce = $v5d3813882f["split_sql"] ? self::splitSQL($v3c76382d93, $v5d3813882f) : array(( $v5d3813882f["remove_comments"] ? self::removeSQLComments($v3c76382d93, $v5d3813882f) : ( $v5d3813882f["remove_repeated_semicolons"] ? self::removeSQLRepeatedDelimiters($v3c76382d93, $v5d3813882f) : $v3c76382d93 ) )); $pc37695cb = count($v1612a5ddce); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v9d1744e29c = trim($v1612a5ddce[$v43dd7d0051]); if($v9d1744e29c) { $v9ad1385268 = $this->query($v9d1744e29c, $v5d3813882f); if ($v9ad1385268) { if ($this->isResultValid($v9ad1385268)) { $v1b4a3ee8a6 = !$v5d3813882f["return_type"] || $v5d3813882f["return_type"] != "result"; if ($v1b4a3ee8a6) { $v15f3268002 = $this->numFields($v9ad1385268); $v7fa3524cb7 = false; for ($v43dd7d0051 = 0; $v43dd7d0051 < $v15f3268002; $v43dd7d0051++) { $v5d170b1de6 = $this->fetchField($v9ad1385268, $v43dd7d0051); $v539082ff30["fields"][] = $v5d170b1de6; if (!$v5d170b1de6) $v7fa3524cb7 = true; } } $v96cdb07da9 = !$v5d3813882f["return_type"] || $v5d3813882f["return_type"] != "fields"; if ($v96cdb07da9) while ($pff59654a = $this->fetchAssoc($v9ad1385268)) $v539082ff30["result"][] = $pff59654a; if ($v1b4a3ee8a6 && $v7fa3524cb7 && $v539082ff30["result"][0]) { $v43dd7d0051 = 0; foreach ($v539082ff30["result"][0] as $pe5c5e2fe => $v956913c90f) if (!is_numeric($pe5c5e2fe)) { $v972f1a5c2b = new stdClass(); $v972f1a5c2b->name = $pe5c5e2fe; $v539082ff30["fields"][$v43dd7d0051] = $v972f1a5c2b; $v43dd7d0051++; } } $this->freeResult($v9ad1385268); } else if ($v9ad1385268 === true) $v539082ff30["result"] = $v9ad1385268; else launch_exception(new SQLException(21, null, array($v9d1744e29c))); } else { launch_exception(new SQLException(6, null, array($v9d1744e29c))); } } } } catch(Exception $paec2c009) { $v0f9512fda4 = $this->error(); if ($v0f9512fda4) { $v0f9512fda4 = " NATIVE ERROR on query #" . ($v43dd7d0051 + 1) . ":" . PHP_EOL . $v0f9512fda4 . PHP_EOL . "Completed SQL: " . $v3c76382d93; $paec2c009 = new SQLException(5, $paec2c009, array($v0f9512fda4)); } launch_exception($paec2c009); } if ($v5d3813882f["return_type"]) switch (strtolower($v5d3813882f["return_type"])) { case "fields": return $v539082ff30["fields"]; case "result": return $v539082ff30["result"]; } return $v539082ff30; } public function setData($v3c76382d93, $v5d3813882f = false) { $v5c1c342594 = true; try { $v5d3813882f = $v5d3813882f ? $v5d3813882f : array(); $v1612a5ddce = $v5d3813882f["split_sql"] ? self::splitSQL($v3c76382d93, $v5d3813882f) : array(( $v5d3813882f["remove_comments"] ? self::removeSQLComments($v3c76382d93, $v5d3813882f) : ( $v5d3813882f["remove_repeated_semicolons"] ? self::removeSQLRepeatedDelimiters($v3c76382d93, $v5d3813882f) : $v3c76382d93 ) )); $pc37695cb = count($v1612a5ddce); for($v43dd7d0051 = 0; $v43dd7d0051 < $pc37695cb; $v43dd7d0051++) { $v9d1744e29c = trim($v1612a5ddce[$v43dd7d0051]); if($v9d1744e29c) { $v9ad1385268 = $this->execute($v9d1744e29c, $v5d3813882f); if ($v9ad1385268 === false) $v5c1c342594 = false; else if ($v9ad1385268 && $this->isResultValid($v9ad1385268)) $this->freeResult($v9ad1385268); } } } catch(Exception $paec2c009) { $v5c1c342594 = false; $v0f9512fda4 = $this->error(); if ($v0f9512fda4) { $v0f9512fda4 = " NATIVE ERROR on query #" . ($v43dd7d0051 + 1) . ":" . PHP_EOL . $v0f9512fda4 . PHP_EOL . "Completed SQL: " . $v3c76382d93; $paec2c009 = new SQLException(5, $paec2c009, array($v0f9512fda4)); } launch_exception($paec2c009); return $v5c1c342594; } if (!$v5c1c342594 && $this->error()) { $v0f9512fda4 = " NATIVE ERROR on query #" . ($v43dd7d0051 + 1) . ":" . PHP_EOL . $this->error() . PHP_EOL . "Completed SQL: " . $v3c76382d93; $v91593b52ef = new SQLException(5, null, array($v0f9512fda4)); launch_exception($v91593b52ef); } return $v5c1c342594; } public function getSQL($v3c76382d93, $v5d3813882f = false) { $v5d3813882f = $v5d3813882f ? $v5d3813882f : array(); $v5d3813882f["return_type"] = "result"; return $this->getData($v3c76382d93, $v5d3813882f); } public function setSQL($v3c76382d93, $v5d3813882f = false) { return $this->setData($v3c76382d93, $v5d3813882f) === true; } public function createDB($pb67a2609, $v5d3813882f = false) { $v5c1c342594 = false; if ($pb67a2609) { if (!$this->link) $this->connectWithoutDB(); if ($this->link) { $pf9dc8837 = $this->listDBs($v5d3813882f); if ($pf9dc8837 && !in_array($pb67a2609, $pf9dc8837)) { $v3c76382d93 = static::getCreateDBStatement($pb67a2609, $this->options); $v5c1c342594 = $this->setData($v3c76382d93, $v5d3813882f); sleep(1); } if (!$this->db_selected) { $this->options["db_name"] = $pb67a2609; $this->db_selected = $this->selectDB($pb67a2609); } } if (!$this->link || !$this->db_selected) launch_exception(new SQLException(1, null, $this->options)); } return $v5c1c342594; } public function getSelectedDB($v5d3813882f = false) { $v5d3813882f = $v5d3813882f ? $v5d3813882f : array(); $v5d3813882f["return_type"] = "result"; $v3c76382d93 = static::getSelectedDBStatement(); $v9ad1385268 = $this->getData($v3c76382d93, $v5d3813882f); return $v9ad1385268 ? $v9ad1385268[0]["db"] : null; } public function listDBs($v5d3813882f = false, $pf49225a7 = "name") { $pf9dc8837 = array(); $v5d3813882f = $v5d3813882f ? $v5d3813882f : array(); $v5d3813882f["return_type"] = "result"; $v3c76382d93 = static::getDBsStatement(); $v9ad1385268 = $this->getData($v3c76382d93, $v5d3813882f); if($v9ad1385268) foreach ($v9ad1385268 as $pff59654a) $pf9dc8837[] = $pff59654a[$pf49225a7]; return $pf9dc8837; } public function listForeignKeys($pc661dc6b, $v5d3813882f = false) { $v3dd67d635b = array(); $pb67a2609 = !$this->isDBSelected() && $this->options["db_name"] ? $this->options["db_name"] : null; $v3c76382d93 = static::getForeignKeysStatement($pc661dc6b, $pb67a2609, $this->options); if (!$this->options["db_name"]) return launch_exception(new SQLException(19, null, $v3c76382d93)); $v5d3813882f = $v5d3813882f ? $v5d3813882f : array(); $v5d3813882f["return_type"] = "result"; $v9ad1385268 = $this->getData($v3c76382d93, $v5d3813882f); if($v9ad1385268) foreach ($v9ad1385268 as $v5d170b1de6) $v3dd67d635b[] = $v5d170b1de6; return $v3dd67d635b; } public function convertObjectToSQL($v539082ff30, $v5d3813882f = false) { return self::convertObjectToDefaultSQL($v539082ff30, $v5d3813882f); } public function convertSQLToObject($v3c76382d93, $v5d3813882f = false) { return self::convertDefaultSQLToObject($v3c76382d93, $v5d3813882f); } public function buildTableInsertSQL($v8c5df8072b, $pfdbbc383, $v5d3813882f = false) { return self::buildDefaultTableInsertSQL($v8c5df8072b, $pfdbbc383, $v5d3813882f); } public function buildTableUpdateSQL($v8c5df8072b, $pfdbbc383, $paf1bc6f6 = false, $v5d3813882f = false) { return self::buildDefaultTableUpdateSQL($v8c5df8072b, $pfdbbc383, $paf1bc6f6, $v5d3813882f); } public function buildTableDeleteSQL($v8c5df8072b, $paf1bc6f6 = false, $v5d3813882f = false) { return self::buildDefaultTableDeleteSQL($v8c5df8072b, $paf1bc6f6, $v5d3813882f); } public function buildTableFindSQL($v8c5df8072b, $pfdbbc383 = false, $paf1bc6f6 = false, $v5d3813882f = false) { return self::buildDefaultTableFindSQL($v8c5df8072b, $pfdbbc383, $paf1bc6f6, $v5d3813882f); } public function buildTableCountSQL($v8c5df8072b, $paf1bc6f6 = false, $v5d3813882f = false) { return self::buildDefaultTableCountSQL($v8c5df8072b, $paf1bc6f6, $v5d3813882f); } public function buildTableFindRelationshipSQL($v8c5df8072b, $v10c59e20bd, $v4ec0135323 = false, $v5d3813882f = false) { return self::buildDefaultTableFindRelationshipSQL($v8c5df8072b, $v10c59e20bd, $v4ec0135323, $v5d3813882f); } public function buildTableCountRelationshipSQL($v8c5df8072b, $v10c59e20bd, $v4ec0135323 = false, $v5d3813882f = false) { return self::buildDefaultTableCountRelationshipSQL($v8c5df8072b, $v10c59e20bd, $v4ec0135323, $v5d3813882f); } public function buildTableFindColumnMaxSQL($v8c5df8072b, $v7162e23723, $v5d3813882f = false) { return self::buildDefaultTableFindColumnMaxSQL($v8c5df8072b, $v7162e23723, $v5d3813882f); } public function isTheSameTableName($v6f92ade39f, $v0f014e538c) { $v5d3813882f = $this->getOptions(); if (!$v5d3813882f["schema"]) $v5d3813882f["schema"] = static::getDefaultSchema(); return self::isTheSameStaticTableName($v6f92ade39f, $v0f014e538c, $v5d3813882f); } public function isTableInNamesList($v6bf1a193b2, $pdbef745e) { $pc661dc6b = $this->getTableInNamesList($v6bf1a193b2, $pdbef745e); return !empty($pc661dc6b); } public function getTableInNamesList($v6bf1a193b2, $pdbef745e) { $v5d3813882f = $this->getOptions(); if (!$v5d3813882f["schema"]) $v5d3813882f["schema"] = static::getDefaultSchema(); return self::getStaticTableInNamesList($v6bf1a193b2, $pdbef745e, $v5d3813882f); } protected function init() { return $this->link ? true : $this->connect(); } protected static function convertFetchTypeToPDOAndODBCExtensions($v14b79b193e, $pea108151) { switch ($v14b79b193e) { case "pdo": switch ($pea108151) { case DB::FETCH_ASSOC: return PDO::FETCH_ASSOC; case DB::FETCH_NUM: return PDO::FETCH_NUM; case DB::FETCH_BOTH: return PDO::FETCH_BOTH; } break; case "odbc": return $pea108151; } return null; } } ?>
