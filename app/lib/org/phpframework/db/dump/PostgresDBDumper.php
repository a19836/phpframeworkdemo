<?php
/*
 * Copyright (c) 2007 PHPMyFrameWork - Joao Pinto
 * AUTHOR: Joao Paulo Lopes Pinto -- http://jplpinto.com
 * 
 * The use of this code must be allowed first by the creator Joao Pinto, since this is a private and proprietary code.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER 
 * IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. IN NO EVENT SHALL 
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN 
 * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE 
 * OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

 include_once get_lib("org.phpframework.db.dump.DBDumper"); class PostgresDBDumper extends DBDumper { public $types_without_length = array(); public function __construct($v834e515e94) { $this->DBDumperHandler = $v834e515e94; $this->types_without_length = array(); $v72e5423991 = $this->DBDumperHandler->getDBDriver()->getDBColumnTypesIgnoredProps(); if (is_array($v72e5423991)) foreach ($v72e5423991 as $v3fb9f41470 => $v9073377656) if (is_array($v9073377656) && in_array("length", $v9073377656)) $this->types_without_length[] = $v3fb9f41470; } public function databases($pb67a2609) { $v50890f6f30 = "CREATE DATABASE /*!32312 IF NOT EXISTS*/ \"{$pb67a2609}\"" . PHP_EOL . PHP_EOL . "\\c \"{$pb67a2609}\";" . PHP_EOL . PHP_EOL; return $v50890f6f30; } public function createTable($pba23d78c, $v8c5df8072b, $v11f9d89738 = false) { $v813853251a = ""; $v5faa4b8a01 = str_replace("\t", "", "SELECT 
			    table_name, 
			    column_name, 
			    column_default, 
			    pg_get_serial_sequence(table_name, column_name) as sequence_name
			FROM information_schema.columns 
			WHERE table_name='$v8c5df8072b'"); $pd0046305 = $this->DBDumperHandler->getDBDriver()->getSQL($v5faa4b8a01); foreach ($pd0046305 as $v7a1b9c07b3) if (!empty($v7a1b9c07b3["sequence_name"])) { $v475bdb0eff = $this->DBDumperHandler->getDBDriver()->getSQL("SELECT last_value FROM " . $v7a1b9c07b3["sequence_name"]); $v5121fa0145 = isset($v475bdb0eff[0]["last_value"]) ? $v475bdb0eff[0]["last_value"] : null; $v5121fa0145 = is_numeric($v5121fa0145) ? $v5121fa0145 + 1 : 0; $v813853251a .= "CREATE SEQUENCE IF NOT EXISTS " . $v7a1b9c07b3["sequence_name"] . " START $v5121fa0145;" . PHP_EOL; } $v5faa4b8a01 = $this->getShowTableColumnsStmt($v8c5df8072b); $pba23d78c = array(); $v3dd67d635b = $this->DBDumperHandler->getDBDriver()->getSQL($v5faa4b8a01); foreach ($v3dd67d635b as $v7a1b9c07b3) $pba23d78c[] = $v7a1b9c07b3; $v813853251a .= $this->f5c3f67d90e($pba23d78c, $v8c5df8072b) . ";"; $pb4eb2d6f = array(); $v9d1bf2c12a = array(); if ($v11f9d89738) foreach ($v11f9d89738 as $pa7c14731) if (isset($pa7c14731["constraint_name"])) $v9d1bf2c12a[ $pa7c14731["constraint_name"] ] = $pa7c14731; $v5faa4b8a01 = str_replace("\t", "", "SELECT 
			  conname AS constraint_name, 
			  contype AS constraint_type,
			  pg_get_constraintdef(oid) AS constraint_def
			FROM pg_constraint
			WHERE conrelid::regclass='$v8c5df8072b'::regclass
			ORDER BY conrelid::regclass::text, contype DESC"); $v3c76382d93 = ""; $v3dd67d635b = $this->DBDumperHandler->getDBDriver()->getSQL($v5faa4b8a01); foreach ($v3dd67d635b as $v7a1b9c07b3) { $pe04f136f = isset($v7a1b9c07b3["constraint_name"]) ? $v7a1b9c07b3["constraint_name"] : null; $v8ccbc1125e = isset($v7a1b9c07b3["constraint_def"]) ? $v7a1b9c07b3["constraint_def"] : null; $pa55e4f2d = "CONSTRAINT " . $pe04f136f . " " . $v8ccbc1125e; if (isset($v7a1b9c07b3["constraint_type"]) && strtolower($v7a1b9c07b3["constraint_type"]) == "f" && $v9d1bf2c12a[$pe04f136f]) { $pa7c14731 = $v9d1bf2c12a[$pe04f136f]; $pc456a9c4 = isset($pa7c14731["parent_table"]) ? $pa7c14731["parent_table"] : null; $this->DBDumperHandler->setTableExtraSql($pc456a9c4, "ALTER TABLE \"$v8c5df8072b\" ADD $pa55e4f2d;" . PHP_EOL); } else $v3c76382d93 .= "," . PHP_EOL . "  " . $pa55e4f2d; $pb4eb2d6f[] = $pe04f136f; } if ($v3c76382d93) { $pbd1bc7b0 = strrpos($v813853251a, ")"); $v813853251a = trim(substr($v813853251a, 0, $pbd1bc7b0)) . $v3c76382d93 . PHP_EOL . substr($v813853251a, $pbd1bc7b0); } $v5faa4b8a01 = str_replace("\t", "", "SELECT 
			  indexname AS index_name,
			  indexdef AS index_def
			FROM pg_indexes
			WHERE tablename='$v8c5df8072b'
			ORDER BY tablename DESC"); $v3dd67d635b = $this->DBDumperHandler->getDBDriver()->getSQL($v5faa4b8a01); foreach ($v3dd67d635b as $v7a1b9c07b3) { $v5eeb1c51a4 = isset($v7a1b9c07b3["index_name"]) ? $v7a1b9c07b3["index_name"] : null; if (!in_array($v5eeb1c51a4, $pb4eb2d6f) && !empty($v7a1b9c07b3["index_def"])) { $v813853251a .= PHP_EOL . $v7a1b9c07b3["index_def"] . ";"; $pb4eb2d6f[] = $v5eeb1c51a4; } } foreach ($pd0046305 as $v7a1b9c07b3) if (!empty($v7a1b9c07b3["sequence_name"]) && isset($v7a1b9c07b3["table_name"]) && isset($v7a1b9c07b3["column_name"])) $v813853251a .= PHP_EOL . "ALTER SEQUENCE " . $v7a1b9c07b3["sequence_name"] . " OWNED BY \"" . $v7a1b9c07b3["table_name"] . "\".\"" . $v7a1b9c07b3["column_name"] . "\";"; if (!$v813853251a) { return "/* Error getting table code, unknown output. */" . PHP_EOL . PHP_EOL; } $v50890f6f30 = $v813853251a . PHP_EOL . PHP_EOL; return $v50890f6f30; } private function f5c3f67d90e($pba23d78c, $v8c5df8072b) { $v3c76382d93 = "CREATE TABLE \"$v8c5df8072b\" (" . PHP_EOL; if ($pba23d78c) { foreach ($pba23d78c as $pff59654a) { $v5e813b295b = isset($pff59654a["column_name"]) ? $pff59654a["column_name"] : null; $v3fb9f41470 = isset($pff59654a["data_type"]) ? $pff59654a["data_type"] : null; $v0911c6122e = isset($pff59654a["character_maximum_length"]) ? $pff59654a["character_maximum_length"] : (isset($pff59654a["numeric_precision"]) ? $pff59654a["numeric_precision"] : null); $pff59654a["is_primary"] = isset($pff59654a["is_primary"]) ? explode(",", str_replace(array("{", "}"), "", strtolower(trim($pff59654a["is_primary"])))) : array(); $pff59654a["is_unique"] = isset($pff59654a["is_unique"]) ? explode(",", str_replace(array("{", "}"), "", strtolower(trim($pff59654a["is_unique"])))) : array(); $v597dd8d456 = in_array("t", $pff59654a["is_primary"]) || in_array(true, $pff59654a["is_primary"], true); $v30e4e7933f = isset($pff59654a["is_nullable"]) && strtolower(trim($pff59654a["is_nullable"])) == "no" ? false : true; $v4bfe0500a2 = isset($pff59654a["column_default"]) && strlen($pff59654a["column_default"]) ? $pff59654a["column_default"] : null; $pf6d213c3 = isset($pff59654a["collation_name"]) ? $pff59654a["collation_name"] : null; $v0911c6122e = !in_array($v3fb9f41470, $this->types_without_length) && is_numeric($v0911c6122e) && $v0911c6122e > 0 ? "($v0911c6122e)" : ""; $v30e4e7933f = $v30e4e7933f ? "NULL" : "NOT NULL"; $v4bfe0500a2 = isset($v4bfe0500a2) ? "DEFAULT " . $v4bfe0500a2 : ""; $pf6d213c3 = !empty($pf6d213c3) ? "COLLATE '$pf6d213c3'" : ""; $v3c76382d93 .= "  " . trim("\"$v5e813b295b\" $v3fb9f41470{$v0911c6122e} $v06442abb83 $v30e4e7933f $pbebc8cef $pf6d213c3 $v4bfe0500a2 $v31199c28eb $v020036c951 $v485386d9ba") . "," . PHP_EOL; } $v3c76382d93 = substr($v3c76382d93, 0, strlen($v3c76382d93) - 2) . PHP_EOL; } $v3c76382d93 .= ")"; return $v3c76382d93; } public function createRecordsInsertStmt($v8c5df8072b, $v3dd67d635b) { $pc5a23cfc = $this->DBDumperHandler->getDBDumperSettings(); $v8c9fa8af2d = $this->DBDumperHandler->getFileCompressionHandler(); if (!empty($pc5a23cfc['complete-insert'])) $v57c3cf2d15 = $this->DBDumperHandler->getTableAttributesNames($v8c5df8072b); $v2cc816973e = 0; $pc50aa7ff = true; $v15f3268002 = 0; $pdda759f2 = !empty($pc5a23cfc['insert-ignore']) ? ' ON CONFLICT DO NOTHING' : ''; $pa76f5849 = isset($pc5a23cfc['net_buffer_length']) ? $pc5a23cfc['net_buffer_length'] : null; foreach ($v3dd67d635b as $pff59654a) { $v15f3268002++; $v073724e2a6 = $this->DBDumperHandler->prepareTableRowAttributes($v8c5df8072b, $pff59654a); if ($pc50aa7ff || empty($pc5a23cfc['extended-insert'])) { if (!empty($pc5a23cfc['complete-insert'])) $v327f72fb62 = "INSERT INTO " . $this->escapeTable($v8c5df8072b) . " (" . implode(", ", $v57c3cf2d15) . ") VALUES (" . implode(",", $v073724e2a6) . ")"; else $v327f72fb62 = "INSERT INTO " . $this->escapeTable($v8c5df8072b) . " VALUES (" . implode(",", $v073724e2a6) . ")"; $pc50aa7ff = false; } else $v327f72fb62 = ",(" . implode(",", $v073724e2a6) . ")"; $v2cc816973e += $v8c9fa8af2d->write($v327f72fb62); if (empty($pc5a23cfc['extended-insert']) || $v2cc816973e > $pa76f5849) { $pc50aa7ff = true; $v2cc816973e = $v8c9fa8af2d->write("$pdda759f2;" . PHP_EOL); } } if (!$pc50aa7ff) $v8c9fa8af2d->write("$pdda759f2;" . PHP_EOL); return $v15f3268002; } public function getSqlStmtWithLimit($v3c76382d93, $v552b831ecd) { return $v3c76382d93 . " LIMIT {$v552b831ecd}"; } public function createStandInTableForView($v03205f9bb8, $v6bc5012fff) { return "CREATE TABLE IF NOT EXISTS " . $this->escapeTable($v03205f9bb8) . " (". PHP_EOL . $pa2b29664 . PHP_EOL . ");" . PHP_EOL; } public function getTableAttributeProperties($v670a5790dd) { $v26ddf2909a = $this->DBDumperHandler->getDBDriver()->getDBColumnNumericTypes(); $v7ee1284650 = $this->DBDumperHandler->getDBDriver()->getDBColumnBlobTypes(); $v415a32ad4d = $this->DBDumperHandler->getDBDriver()->getDBColumnBooleanTypes(); $pd152184b = array(); $pd152184b['field'] = isset($v670a5790dd['column_name']) ? $v670a5790dd['column_name'] : null; $pd152184b['type_sql'] = isset($v670a5790dd['data_type']) ? $v670a5790dd['data_type'] : null; $v9cd205cadb = explode(" ", $pd152184b['type_sql']); if ($pbd1bc7b0 = strpos($v9cd205cadb[0], "(")) { $pd152184b['type'] = substr($v9cd205cadb[0], 0, $pbd1bc7b0); $pd152184b['length'] = str_replace(")", "", substr($v9cd205cadb[0], $pbd1bc7b0 + 1)); $pd152184b['attributes'] = isset($v9cd205cadb[1]) ? $v9cd205cadb[1] : null; } else { $pd152184b['type'] = $v9cd205cadb[0]; $pd152184b['length'] = !empty($v670a5790dd["character_maximum_length"]) ? $v670a5790dd["character_maximum_length"] : (isset($v670a5790dd["numeric_precision"]) ? $v670a5790dd["numeric_precision"] : null); } $pd152184b['is_nullable'] = !isset($v670a5790dd['is_nullable']) || strtolower($v670a5790dd['is_nullable']) != "no" ? false : true; $pd152184b['is_numeric'] = is_array($v26ddf2909a) && in_array($pd152184b['type'], $v26ddf2909a); $pd152184b['is_blob'] = is_array($v7ee1284650) && in_array($pd152184b['type'], $v7ee1284650); $pd152184b['is_boolean'] = is_array($v415a32ad4d) && in_array($pd152184b['type'], $v415a32ad4d); return $pd152184b; } public function getTableAttributesPropertiesBitHexFunc($v5e45ec9bb9) { return $v5e45ec9bb9; } public function getTableAttributesPropertiesBlobHexFunc($v5e45ec9bb9) { return $v5e45ec9bb9; } public function createView($pff59654a) { $v50890f6f30 = ""; if (!isset($pff59654a['Create View'])) { return "/* Error getting view structure, unknown output */" . PHP_EOL . PHP_EOL; } $v50890f6f30 .= "/* DROP VIEW IF EXISTS ".(isset($pff59654a['View']) ? $pff59654a['View'] : "")." */;" . PHP_EOL . $pff59654a['Create View'].(substr($pff59654a['Create View'], -1) == ";" ? "" : ";") . PHP_EOL . PHP_EOL; return $v50890f6f30; } public function createTrigger($pff59654a) { $v50890f6f30 = ""; if (!isset($pff59654a['SQL Original Statement'])) { return "/* Error getting trigger code, unknown output */" . PHP_EOL . PHP_EOL; } $v50890f6f30 .= "/* DROP TRIGGER IF EXISTS ".(isset($pff59654a['Trigger']) ? $pff59654a['Trigger'] : "")." */;" . PHP_EOL . $pff59654a['SQL Original Statement'].(substr($pff59654a['SQL Original Statement'], -1) == ";" ? "" : ";") . PHP_EOL . PHP_EOL; return $v50890f6f30; } public function createProcedure($pff59654a) { $v50890f6f30 = ""; if (!isset($pff59654a['Create Procedure'])) { return "/* Error getting procedure code, unknown output. */" . PHP_EOL . PHP_EOL; } $v50890f6f30 .= "/* DROP PROCEDURE IF EXISTS ".(isset($pff59654a['Procedure']) ? $pff59654a['Procedure'] : "")." */;" . PHP_EOL . $pff59654a['Create Procedure'] . (substr($pff59654a['Create Procedure'], -1) == ";" ? "" : ";") . PHP_EOL . PHP_EOL; return $v50890f6f30; } public function createFunction($pff59654a) { $v50890f6f30 = ""; if (!isset($pff59654a['Create Function'])) { return "/* Error getting function code, unknown output. */" . PHP_EOL . PHP_EOL; } $v50890f6f30 .= "/* DROP FUNCTION IF EXISTS ".(isset($pff59654a['Function']) ? $pff59654a['Function'] : "")." */;" . PHP_EOL . $pff59654a['Create Function'].(substr($pff59654a['Create Function'], -1) == ";" ? "" : ";") . PHP_EOL . PHP_EOL; return $v50890f6f30; } public function createEvent($pff59654a) { $v50890f6f30 = ""; if (!isset($pff59654a['Create Event'])) { return "/* Error getting event code, unknown output. */" . PHP_EOL . PHP_EOL; } $v50890f6f30 .= "/* DROP EVENT IF EXISTS ".(isset($pff59654a['Event']) ? $pff59654a['Event'] : "")." */;" . PHP_EOL . $pff59654a['Create Event'] . (substr($pff59654a['Create Event'], -1) == ";" ? "" : ";") . PHP_EOL . PHP_EOL; return $v50890f6f30; } public function backupParameters() { return PHP_EOL; } public function restoreParameters() { return PHP_EOL; } public function startDisableConstraintsAndTriggersStmt($pac4bc40a) { $v3c76382d93 = "-- Needs root permission
--SET session_replication_role = replica;" . PHP_EOL; $pc5a23cfc = $this->DBDumperHandler->getDBDumperSettings(); if ($pac4bc40a) { $pac4bc40a = is_array($pac4bc40a) ? $pac4bc40a : array($pac4bc40a); $v3c76382d93 .= PHP_EOL; foreach ($pac4bc40a as $pc37695cb) if ($pc37695cb) $v3c76382d93 .= "--ALTER TABLE IF EXISTS \"$pc37695cb\" DISABLE TRIGGER ALL;" . PHP_EOL; if (!empty($pc5a23cfc['add-drop-table'])) $v3c76382d93 .= PHP_EOL . "-- Does NOT need root permission.
DO $$
DECLARE myvar varchar = '';
DECLARE t_row record;
BEGIN
	FOR t_row in 
		SELECT tc.table_name, tc.constraint_name 
		FROM information_schema.table_constraints tc
		INNER JOIN pg_namespace nsp on nsp.nspname = tc.constraint_schema
		INNER JOIN pg_constraint pgc on pgc.conname = tc.constraint_name and pgc.connamespace = nsp.oid and pgc.contype = 'f'
		INNER JOIN information_schema.columns col on col.table_schema = tc.table_schema and col.table_name = tc.table_name and col.ordinal_position=ANY(pgc.conkey)
		WHERE tc.constraint_schema NOT LIKE 'pg%' AND tc.constraint_schema <> 'information_schema' AND tc.table_name in ('" . implode("', '", $pac4bc40a) . "') AND tc.constraint_type = 'FOREIGN KEY'
	LOOP
		myvar = '';
		
		SELECT concat('ALTER TABLE IF EXISTS \"', t_row.table_name, '\" DROP CONSTRAINT \"', t_row.constraint_name, '\";') INTO myvar;
		
		IF myvar != '' AND myvar IS NOT NULL THEN
			EXECUTE myvar;
	   	END IF;
	END LOOP;
END $$;" . PHP_EOL; else if (!empty($pc5a23cfc['no-create-info']) && empty($pc5a23cfc['no-data'])) { $v5faa4b8a01 = str_replace("\t", "", "SELECT 
		  		   tc.table_name, 
		  		   tc.constraint_name
				FROM information_schema.table_constraints tc
				INNER JOIN pg_namespace nsp on nsp.nspname = tc.constraint_schema
				INNER JOIN pg_constraint pgc on pgc.conname = tc.constraint_name and pgc.connamespace = nsp.oid and pgc.contype = 'f'
				INNER JOIN information_schema.columns col on col.table_schema = tc.table_schema and col.table_name = tc.table_name and col.ordinal_position=ANY(pgc.conkey)
				WHERE tc.constraint_schema NOT LIKE 'pg%' AND tc.constraint_schema <> 'information_schema' AND tc.table_name in ('" . implode("', '", $pac4bc40a) . "') AND tc.constraint_type = 'FOREIGN KEY'"); $v3c76382d93 .= PHP_EOL . "--set foreign keys to deferred"; $v3dd67d635b = $this->DBDumperHandler->getDBDriver()->getSQL($v5faa4b8a01); foreach ($v3dd67d635b as $v7a1b9c07b3) if (!empty($v7a1b9c07b3["table_name"]) && isset(r["constraint_name"])) $v3c76382d93 .= PHP_EOL . "ALTER TABLE " . $v7a1b9c07b3["table_name"] . " ALTER CONSTRAINT " . $v7a1b9c07b3["constraint_name"] . " DEFERRABLE INITIALLY DEFERRED;"; $v3c76382d93 .= PHP_EOL; } } return $v3c76382d93; } public function endDisableConstraintsAndTriggersStmt($pac4bc40a) { $v3c76382d93 = "-- Needs root permission
--SET session_replication_role = DEFAULT;" . PHP_EOL; $pc5a23cfc = $this->DBDumperHandler->getDBDumperSettings(); if ($pac4bc40a) { $pac4bc40a = is_array($pac4bc40a) ? $pac4bc40a : array($pac4bc40a); $v3c76382d93 .= PHP_EOL; foreach ($pac4bc40a as $pc37695cb) if ($pc37695cb) $v3c76382d93 .= "--ALTER TABLE IF EXISTS \"$pc37695cb\" ENABLE TRIGGER ALL;" . PHP_EOL; if (empty($pc5a23cfc['add-drop-table']) && !empty($pc5a23cfc['no-create-info']) && empty($pc5a23cfc['no-data'])) { $v5faa4b8a01 = str_replace("\t", "", "SELECT tc.table_name, tc.constraint_name, tc.is_deferrable, tc.initially_deferred, pgc.condeferrable, pgc.condeferred
		FROM information_schema.table_constraints tc
		INNER JOIN pg_namespace nsp on nsp.nspname = tc.constraint_schema
		INNER JOIN pg_constraint pgc on pgc.conname = tc.constraint_name and pgc.connamespace = nsp.oid and pgc.contype = 'f'
		INNER JOIN information_schema.columns col on col.table_schema = tc.table_schema and col.table_name = tc.table_name and col.ordinal_position=ANY(pgc.conkey)
		WHERE tc.constraint_schema NOT LIKE 'pg%' AND tc.constraint_schema <> 'information_schema' AND tc.table_name in ('" . implode("', '", $pac4bc40a) . "') AND tc.constraint_type = 'FOREIGN KEY'"); $v3c76382d93 .= PHP_EOL . "--set foreign keys to initial deferred state"; $v3c76382d93 .= PHP_EOL . "COMMIT;"; $v3dd67d635b = $this->DBDumperHandler->getDBDriver()->getSQL($v5faa4b8a01); foreach ($v3dd67d635b as $v7a1b9c07b3) if (!empty($v7a1b9c07b3["table_name"]) && isset($v7a1b9c07b3["constraint_name"])) { $v3cbae14615 = isset($v7a1b9c07b3["is_deferrable"]) && strtolower($v7a1b9c07b3["is_deferrable"]) == "no" ? "NOT DEFERRABLE" : "DEFERRABLE"; $v387d47eb56 = isset($v7a1b9c07b3["initially_deferred"]) && strtolower($v7a1b9c07b3["initially_deferred"]) == "no" ? "INITIALLY IMMEDIATE" : "INITIALLY DEFERRED"; $v3c76382d93 .= PHP_EOL . "ALTER TABLE " . $v7a1b9c07b3["table_name"] . " ALTER CONSTRAINT " . $v7a1b9c07b3["constraint_name"] . " $v3cbae14615 $v387d47eb56;"; } $v3c76382d93 .= PHP_EOL; } } return $v3c76382d93; } } ?>
