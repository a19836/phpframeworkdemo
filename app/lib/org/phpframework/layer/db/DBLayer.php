<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.layer.Layer"); class DBLayer extends Layer { public function __construct($v30857f7eca = array()) { parent::__construct($v30857f7eca); } public function getLayerPathSetting() { if (empty($this->settings["dbl_path"])) launch_exception(new Exception("'DBLayer->settings[dbl_path]' variable cannot be empty!")); return $this->settings["dbl_path"]; } public function getDBDriversName() { $v9994512d98 = $this->getBrokers(); return is_array($v9994512d98) ? array_keys($v9994512d98) : array(); } public function getFunction($v9d33ecaf56, $v9367d5be85 = false, $v5d3813882f = false) { debug_log_function("DBLayer->getFunction", array($v9d33ecaf56, $v9367d5be85, $v5d3813882f)); $v57d84eb5b6 = strtolower($v9d33ecaf56); $v18521bca9a = $this->isCacheActive(); if ($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid(1, $v57d84eb5b6, $v9367d5be85, $v5d3813882f)) return $this->getCacheLayer()->get(1, $v57d84eb5b6, $v9367d5be85, $v5d3813882f); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->getFunction($v9d33ecaf56, $v9367d5be85, $v5d3813882f); if ($v18521bca9a) $this->getCacheLayer()->check(1, $v57d84eb5b6, $v9367d5be85, $v9ad1385268, $v5d3813882f); return $v9ad1385268; } public function getData($v3c76382d93, $v5d3813882f = false) { debug_log_function("DBLayer->getData", array($v3c76382d93, $v5d3813882f)); $v18521bca9a = $this->isCacheActive(); if ($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid(1, "getData", $v3c76382d93, $v5d3813882f)) return $this->getCacheLayer()->get(1, "getData", $v3c76382d93, $v5d3813882f); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->getData($v3c76382d93, $v5d3813882f); if ($v18521bca9a) $this->getCacheLayer()->check(1, "getData", $v3c76382d93, $v9ad1385268, $v5d3813882f); return $v9ad1385268; } public function setData($v3c76382d93, $v5d3813882f = false) { debug_log_function("DBLayer->setData", array($v3c76382d93, $v5d3813882f)); $v18521bca9a = $this->isCacheActive(); if ($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid(1, "setData", $v3c76382d93, $v5d3813882f)) return $this->getCacheLayer()->get(1, "setData", $v3c76382d93, $v5d3813882f); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->setData($v3c76382d93, $v5d3813882f); if ($v18521bca9a) $this->getCacheLayer()->check(1, "setData", $v3c76382d93, $v9ad1385268, $v5d3813882f); return $v9ad1385268; } public function getSQL($v3c76382d93, $v5d3813882f = false) { debug_log_function("DBLayer->getSQL", array($v3c76382d93, $v5d3813882f)); $v18521bca9a = $this->isCacheActive(); if ($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid(1, "getSQL", $v3c76382d93, $v5d3813882f)) return $this->getCacheLayer()->get(1, "getSQL", $v3c76382d93, $v5d3813882f); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->getSQL($v3c76382d93, $v5d3813882f); if ($v18521bca9a) $this->getCacheLayer()->check(1, "getSQL", $v3c76382d93, $v9ad1385268, $v5d3813882f); return $v9ad1385268; } public function setSQL($v3c76382d93, $v5d3813882f = false) { debug_log_function("DBLayer->setSQL", array($v3c76382d93, $v5d3813882f)); $v18521bca9a = $this->isCacheActive(); if ($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid(1, "setSQL", $v3c76382d93, $v5d3813882f)) return $this->getCacheLayer()->get(1, "setSQL", $v3c76382d93, $v5d3813882f); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->setSQL($v3c76382d93, $v5d3813882f); if ($v18521bca9a) $this->getCacheLayer()->check(1, "setSQL", $v3c76382d93, $v9ad1385268, $v5d3813882f); return $v9ad1385268; } public function getInsertedId($v5d3813882f = false) { debug_log_function("DBLayer->getInsertedId", array($v5d3813882f)); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->getInsertedId($v5d3813882f); return $v9ad1385268; } public function insertObject($v8c5df8072b, $pfdbbc383, $v5d3813882f = false) { debug_log_function("DBLayer->insertObject", array($v8c5df8072b, $pfdbbc383, $v5d3813882f)); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; return $this->getBroker($pf00752d4)->insertObject($v8c5df8072b, $pfdbbc383, $v5d3813882f); } public function updateObject($v8c5df8072b, $pfdbbc383, $paf1bc6f6 = false, $v5d3813882f = false) { debug_log_function("DBLayer->updateObject", array($v8c5df8072b, $pfdbbc383, $paf1bc6f6, $v5d3813882f)); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; return $this->getBroker($pf00752d4)->updateObject($v8c5df8072b, $pfdbbc383, $paf1bc6f6, $v5d3813882f); } public function deleteObject($v8c5df8072b, $paf1bc6f6 = false, $v5d3813882f = false) { debug_log_function("DBLayer->deleteObject", array($v8c5df8072b, $paf1bc6f6, $v5d3813882f)); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; return $this->getBroker($pf00752d4)->deleteObject($v8c5df8072b, $paf1bc6f6, $v5d3813882f); } public function findObjects($v8c5df8072b, $pfdbbc383 = false, $paf1bc6f6 = false, $v5d3813882f = false) { debug_log_function("DBLayer->findObjects", array($v8c5df8072b, $pfdbbc383, $paf1bc6f6, $v5d3813882f)); $v18521bca9a = $this->isCacheActive(); if ($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid(1, "findObjects", null, $v5d3813882f)) return $this->getCacheLayer()->get(1, "findObjects", null, $v5d3813882f); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->findObjects($v8c5df8072b, $pfdbbc383, $paf1bc6f6, $v5d3813882f); if ($v18521bca9a) $this->getCacheLayer()->check(1, "findObjects", null, $v9ad1385268, $v5d3813882f); return $v9ad1385268; } public function countObjects($v8c5df8072b, $paf1bc6f6 = false, $v5d3813882f = false) { debug_log_function("DBLayer->countObjects", array($v8c5df8072b, $paf1bc6f6, $v5d3813882f)); $v18521bca9a = $this->isCacheActive(); if ($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid(1, "countObjects", null, $v5d3813882f)) return $this->getCacheLayer()->get(1, "countObjects", null, $v5d3813882f); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->countObjects($v8c5df8072b, $paf1bc6f6, $v5d3813882f); if ($v18521bca9a) $this->getCacheLayer()->check(1, "countObjects", null, $v9ad1385268, $v5d3813882f); return $v9ad1385268; } public function findRelationshipObjects($v8c5df8072b, $v10c59e20bd, $v4ec0135323 = false, $v5d3813882f = false) { debug_log_function("DBLayer->findRelationshipObjects", array($v8c5df8072b, $v10c59e20bd, $v4ec0135323, $v5d3813882f)); $v18521bca9a = $this->isCacheActive(); if ($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid(1, "findRelationshipObjects", null, $v5d3813882f)) return $this->getCacheLayer()->get(1, "findRelationshipObjects", null, $v5d3813882f); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->findRelationshipObjects($v8c5df8072b, $v10c59e20bd, $v4ec0135323, $v5d3813882f); if ($v18521bca9a) $this->getCacheLayer()->check(1, "findRelationshipObjects", null, $v9ad1385268, $v5d3813882f); return $v9ad1385268; } public function countRelationshipObjects($v8c5df8072b, $v10c59e20bd, $v4ec0135323 = false, $v5d3813882f = false) { debug_log_function("DBLayer->countRelationshipObjects", array($v8c5df8072b, $v10c59e20bd, $v4ec0135323, $v5d3813882f)); $v18521bca9a = $this->isCacheActive(); if ($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid(1, "countRelationshipObjects", null, $v5d3813882f)) return $this->getCacheLayer()->get(1, "countRelationshipObjects", null, $v5d3813882f); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->countRelationshipObjects($v8c5df8072b, $v10c59e20bd, $v4ec0135323, $v5d3813882f); if ($v18521bca9a) $this->getCacheLayer()->check(1, "countRelationshipObjects", null, $v9ad1385268, $v5d3813882f); return $v9ad1385268; } public function findObjectsColumnMax($v8c5df8072b, $v7162e23723, $v5d3813882f = false) { debug_log_function("DBLayer->findObjectsColumnMax", array($v8c5df8072b, $v7162e23723, $v5d3813882f)); $v18521bca9a = $this->isCacheActive(); if ($v18521bca9a && empty($v5d3813882f["no_cache"]) && $this->getCacheLayer()->isValid(1, "findObjectsColumnMax", null, $v5d3813882f)) return $this->getCacheLayer()->get(1, "findObjectsColumnMax", null, $v5d3813882f); $pf00752d4 = isset($v5d3813882f["db_driver"]) ? $v5d3813882f["db_driver"] : null; $v9ad1385268 = $this->getBroker($pf00752d4)->findObjectsColumnMax($v8c5df8072b, $v7162e23723, $v5d3813882f); if ($v18521bca9a) $this->getCacheLayer()->check(1, "findObjectsColumnMax", null, $v9ad1385268, $v5d3813882f); return $v9ad1385268; } } ?>
