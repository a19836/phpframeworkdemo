<?php
/*
 * Copyright (c) 2024 Bloxtor - http://bloxtor.com
 * 
 * Please note that this code belongs to the Bloxtor framework and must comply with the Bloxtor license.
 * If you do not accept these provisions, or if the Bloxtor License is not present or cannot be found, you are not entitled to use this code and must stop and delete it immediately.
 */
include_once get_lib("org.phpframework.layer.presentation.cms.module.ICMSTemplateInstallationHandler"); include_once get_lib("org.phpframework.layer.presentation.cms.module.CMSModuleUtil"); include_once get_lib("org.phpframework.compression.ZipHandler"); class CMSTemplateInstallationHandler implements ICMSTemplateInstallationHandler { protected $template_folder_path; protected $webroot_folder_path; protected $unzipped_folder_path; protected $reserved_files; public function __construct($padb329c5, $ped275ca3, $pd3e94e4f = "") { $this->template_folder_path = $padb329c5; $this->webroot_folder_path = $ped275ca3; $this->unzipped_folder_path = $pd3e94e4f; $this->reserved_files = array(); } public static function unzipTemplateFile($v39d1337f82, $pd3e94e4f = null) { if (!$pd3e94e4f) { $pd3e94e4f = self::getTmpFolderPath(); if (!$pd3e94e4f) return false; } if (ZipHandler::unzip($v39d1337f82, $pd3e94e4f)) return $pd3e94e4f; return null; } public static function getUnzippedTemplateInfo($v4cef51aa24) { $pa3f93bf0 = $v4cef51aa24 . "/template.xml"; $v872c4849e0 = null; if (file_exists($pa3f93bf0)) { $pfb662071 = XMLFileParser::parseXMLFileToArray($pa3f93bf0); $pfb662071 = MyXML::complexArrayToBasicArray($pfb662071, array("lower_case_keys" => true, "trim" => true)); $v872c4849e0 = isset($pfb662071["template"]) ? $pfb662071["template"] : null; } return $v872c4849e0; } public function install() { if ($this->unzipped_folder_path && is_dir($this->unzipped_folder_path)) { $v5c1c342594 = true; if (CMSModuleUtil::copyFolder($this->unzipped_folder_path, $this->template_folder_path)) { if (is_dir($this->unzipped_folder_path . "/webroot")) { if (!CMSModuleUtil::deleteFolder($this->template_folder_path . "/webroot")) $v5c1c342594 = false; if (!CMSModuleUtil::copyFolder($this->unzipped_folder_path . "/webroot", $this->webroot_folder_path)) $v5c1c342594 = false; } } else $v5c1c342594 = false; if (file_exists($this->template_folder_path . "/modules_sub_templates.ser")) @unlink($this->template_folder_path . "/modules_sub_templates.ser"); return $v5c1c342594; } } public function uninstall() { $pae9f0543 = $this->getReservedFiles(); return CMSModuleUtil::deleteFolder($this->template_folder_path, $pae9f0543) && CMSModuleUtil::deleteFolder($this->webroot_folder_path, $pae9f0543); } public function addLayoutToTemplateXml($v3293e678d1, $pa953c86a = false) { $pa3f93bf0 = $this->template_folder_path . "template.xml"; if (file_exists($pa3f93bf0)) { $pfb662071 = XMLFileParser::parseXMLFileToArray($pa3f93bf0); $pfb662071 = MyXML::complexArrayToBasicArray($pfb662071, array("lower_case_keys" => true, "trim" => true)); if (!isset($pfb662071["template"]["layouts"]["layout"])) $pfb662071["template"]["layouts"]["layout"] = $v3293e678d1; else if (is_array($pfb662071["template"]["layouts"]["layout"])) { if (!in_array($v3293e678d1, $pfb662071["template"]["layouts"]["layout"])) $pfb662071["template"]["layouts"]["layout"][] = $v3293e678d1; } else if ($pfb662071["template"]["layouts"]["layout"] != $v3293e678d1) $pfb662071["template"]["layouts"]["layout"] = array($pfb662071["template"]["layouts"]["layout"], $v3293e678d1); $pfb662071 = MyXML::basicArrayToComplexArray($pfb662071, array("lower_case_keys" => true, "trim" => true)); $pa694ba99 = new MyXMLArray($pfb662071); $v241205aec6 = $pa694ba99->toXML(array("lower_case_keys" => true)); $v241205aec6 = '<?xml version="1.0" encoding="UTF-8"?>' . str_replace("&amp;", "&", $v241205aec6); return file_put_contents($pa3f93bf0, $v241205aec6) !== false; } return $pa953c86a; } public function removeLayoutFromTemplateXml($v3293e678d1, $pa953c86a = false) { $pa3f93bf0 = $this->template_folder_path . "template.xml"; if (file_exists($pa3f93bf0)) { $pfb662071 = XMLFileParser::parseXMLFileToArray($pa3f93bf0); $pfb662071 = MyXML::complexArrayToBasicArray($pfb662071, array("lower_case_keys" => true, "trim" => true)); if (!isset($pfb662071["template"]["layouts"]["layout"])) return true; else if (is_array($pfb662071["template"]["layouts"]["layout"])) { if (in_array($v3293e678d1, $pfb662071["template"]["layouts"]["layout"])) { $pbfa01ed1 = array_search($v3293e678d1, $pfb662071["template"]["layouts"]["layout"]); array_splice($pfb662071["template"]["layouts"]["layout"], $pbfa01ed1, 1); if (count($pfb662071["template"]["layouts"]["layout"]) == 0) unset($pfb662071["template"]["layouts"]["layout"]); } else return true; } else if ($pfb662071["template"]["layouts"]["layout"] == $v3293e678d1) unset($pfb662071["template"]["layouts"]["layout"]); $pfb662071 = MyXML::basicArrayToComplexArray($pfb662071, array("lower_case_keys" => true, "trim" => true)); $pa694ba99 = new MyXMLArray($pfb662071); $v241205aec6 = $pa694ba99->toXML(array("lower_case_keys" => true)); $v241205aec6 = '<?xml version="1.0" encoding="UTF-8"?>' . str_replace("&amp;", "&", $v241205aec6); return file_put_contents($pa3f93bf0, $v241205aec6) !== false; } return $pa953c86a; } public function prepareInstalledCommonTemplate() { return self::prepareInstalledCommonTemplateFolder($this->template_folder_path); } public static function getTmpRootFolderPath() { return (defined("TMP_PATH") ? TMP_PATH : sys_get_temp_dir()) . "/template/"; } public static function getTmpFolderPath($pc5cbb00b = null) { $v4ab372da3a = self::getTmpRootFolderPath(); $v6f181849e4 = $pc5cbb00b ? $v4ab372da3a . $pc5cbb00b : tempnam($v4ab372da3a, ""); if (file_exists($v6f181849e4)) unlink($v6f181849e4); @mkdir($v6f181849e4, 0755); if (is_dir($v6f181849e4)) return $v6f181849e4 . "/"; } protected static function prepareInstalledCommonTemplateFolder($pa32be502) { $v5c1c342594 = true; $v6ee393d9fb = array_diff(scandir($pa32be502), array('..', '.')); foreach ($v6ee393d9fb as $v7dffdb5a5b) { $v1b08a89324 = "$pa32be502/$v7dffdb5a5b"; if (is_dir($v1b08a89324)) { if (!self::prepareInstalledCommonTemplateFolder($v1b08a89324)) $v5c1c342594 = false; } else if (strtolower(pathinfo($v7dffdb5a5b, PATHINFO_EXTENSION)) == "php") { $v067674f4e4 = file_get_contents($v1b08a89324); $v067674f4e4 = str_replace('$original_project_url_prefix', '$project_common_url_prefix', $v067674f4e4); if (file_put_contents($v1b08a89324, $v067674f4e4) === false) $v5c1c342594 = false; } } return $v5c1c342594; } protected function getReservedFiles() { $pae9f0543 = array(); if ($this->reserved_files) foreach ($this->reserved_files as $v7dffdb5a5b) $pae9f0543[] = file_exists($v7dffdb5a5b) ? realpath($v7dffdb5a5b) : $v7dffdb5a5b; return $pae9f0543; } } ?>
