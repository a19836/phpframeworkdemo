a:1:{s:5:"Layer";a:2:{s:7:"methods";a:17:{s:13:"setCacheLayer";a:15:{s:4:"name";s:13:"setCacheLayer";s:16:"start_line_index";i:30;s:17:"start_token_index";i:171;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:176;s:20:"end_args_token_index";i:178;s:9:"arguments";a:1:{s:11:"$CacheLayer";N;}s:25:"start_brackets_line_index";i:30;s:26:"start_brackets_token_index";i:180;s:23:"end_brackets_line_index";i:30;s:24:"end_brackets_token_index";i:189;s:14:"end_line_index";i:30;s:15:"end_token_index";i:189;}s:13:"getCacheLayer";a:14:{s:4:"name";s:13:"getCacheLayer";s:16:"start_line_index";i:31;s:17:"start_token_index";i:191;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:196;s:20:"end_args_token_index";i:197;s:25:"start_brackets_line_index";i:31;s:26:"start_brackets_token_index";i:199;s:23:"end_brackets_line_index";i:31;s:24:"end_brackets_token_index";i:206;s:14:"end_line_index";i:31;s:15:"end_token_index";i:206;}s:13:"isCacheActive";a:14:{s:4:"name";s:13:"isCacheActive";s:16:"start_line_index";i:32;s:17:"start_token_index";i:208;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:213;s:20:"end_args_token_index";i:214;s:25:"start_brackets_line_index";i:32;s:26:"start_brackets_token_index";i:216;s:23:"end_brackets_line_index";i:32;s:24:"end_brackets_token_index";i:231;s:14:"end_line_index";i:32;s:15:"end_token_index";i:231;}s:27:"getModuleCachedLayerDirPath";a:14:{s:4:"name";s:27:"getModuleCachedLayerDirPath";s:16:"start_line_index";i:33;s:17:"start_token_index";i:233;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:238;s:20:"end_args_token_index";i:239;s:25:"start_brackets_line_index";i:33;s:26:"start_brackets_token_index";i:241;s:23:"end_brackets_line_index";i:33;s:24:"end_brackets_token_index";i:268;s:14:"end_line_index";i:33;s:15:"end_token_index";i:268;}s:19:"getModuleCacheLayer";a:14:{s:4:"name";s:19:"getModuleCacheLayer";s:16:"start_line_index";i:35;s:17:"start_token_index";i:270;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:275;s:20:"end_args_token_index";i:276;s:25:"start_brackets_line_index";i:35;s:26:"start_brackets_token_index";i:278;s:23:"end_brackets_line_index";i:35;s:24:"end_brackets_token_index";i:285;s:14:"end_line_index";i:35;s:15:"end_token_index";i:285;}s:15:"getErrorHandler";a:14:{s:4:"name";s:15:"getErrorHandler";s:16:"start_line_index";i:37;s:17:"start_token_index";i:287;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:292;s:20:"end_args_token_index";i:293;s:25:"start_brackets_line_index";i:37;s:26:"start_brackets_token_index";i:295;s:23:"end_brackets_line_index";i:41;s:24:"end_brackets_token_index";i:307;s:14:"end_line_index";i:41;s:15:"end_token_index";i:307;}s:15:"setPHPFrameWork";a:15:{s:4:"name";s:15:"setPHPFrameWork";s:16:"start_line_index";i:43;s:17:"start_token_index";i:309;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:314;s:20:"end_args_token_index";i:316;s:9:"arguments";a:1:{s:13:"$PHPFrameWork";N;}s:25:"start_brackets_line_index";i:43;s:26:"start_brackets_token_index";i:318;s:23:"end_brackets_line_index";i:43;s:24:"end_brackets_token_index";i:330;s:14:"end_line_index";i:43;s:15:"end_token_index";i:330;}s:15:"getPHPFrameWork";a:14:{s:4:"name";s:15:"getPHPFrameWork";s:16:"start_line_index";i:44;s:17:"start_token_index";i:332;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:337;s:20:"end_args_token_index";i:338;s:25:"start_brackets_line_index";i:44;s:26:"start_brackets_token_index";i:340;s:23:"end_brackets_line_index";i:44;s:24:"end_brackets_token_index";i:351;s:14:"end_line_index";i:44;s:15:"end_token_index";i:351;}s:22:"setPHPFrameWorkObjName";a:15:{s:4:"name";s:22:"setPHPFrameWorkObjName";s:16:"start_line_index";i:46;s:17:"start_token_index";i:353;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:358;s:20:"end_args_token_index";i:360;s:9:"arguments";a:1:{s:22:"$phpframework_obj_name";N;}s:25:"start_brackets_line_index";i:46;s:26:"start_brackets_token_index";i:362;s:23:"end_brackets_line_index";i:46;s:24:"end_brackets_token_index";i:372;s:14:"end_line_index";i:46;s:15:"end_token_index";i:372;}s:22:"getPHPFrameWorkObjName";a:14:{s:4:"name";s:22:"getPHPFrameWorkObjName";s:16:"start_line_index";i:47;s:17:"start_token_index";i:374;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:379;s:20:"end_args_token_index";i:380;s:25:"start_brackets_line_index";i:47;s:26:"start_brackets_token_index";i:382;s:23:"end_brackets_line_index";i:47;s:24:"end_brackets_token_index";i:393;s:14:"end_line_index";i:47;s:15:"end_token_index";i:393;}s:20:"getModulePathGeneric";a:15:{s:4:"name";s:20:"getModulePathGeneric";s:16:"start_line_index";i:49;s:17:"start_token_index";i:395;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:400;s:20:"end_args_token_index";i:408;s:9:"arguments";a:3:{s:10:"$module_id";N;s:18:"$modules_file_path";N;s:11:"$layer_path";N;}s:25:"start_brackets_line_index";i:49;s:26:"start_brackets_token_index";i:410;s:23:"end_brackets_line_index";i:51;s:24:"end_brackets_token_index";i:445;s:14:"end_line_index";i:51;s:15:"end_token_index";i:445;}s:15:"getModulesAlias";a:20:{s:4:"name";s:15:"getModulesAlias";s:16:"start_line_index";i:54;s:17:"start_token_index";i:449;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:1;s:8:"comments";a:1:{i:0;s:36:"/********* MODULES ALIASES ********/";}s:25:"start_comments_line_index";i:53;s:26:"start_comments_token_index";i:447;s:23:"end_comments_line_index";i:53;s:24:"end_comments_token_index";i:447;s:22:"start_args_token_index";i:456;s:20:"end_args_token_index";i:458;s:9:"arguments";a:1:{s:18:"$modules_file_path";N;}s:25:"start_brackets_line_index";i:54;s:26:"start_brackets_token_index";i:460;s:23:"end_brackets_line_index";i:74;s:24:"end_brackets_token_index";i:739;s:14:"end_line_index";i:74;s:15:"end_token_index";i:739;}s:9:"addBroker";a:20:{s:4:"name";s:9:"addBroker";s:16:"start_line_index";i:77;s:17:"start_token_index";i:743;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:8:"comments";a:1:{i:0;s:27:"/********* BROKER ********/";}s:25:"start_comments_line_index";i:76;s:26:"start_comments_token_index";i:741;s:23:"end_comments_line_index";i:76;s:24:"end_comments_token_index";i:741;s:22:"start_args_token_index";i:748;s:20:"end_args_token_index";i:757;s:9:"arguments";a:2:{s:7:"$broker";N;s:12:"$broker_name";s:5:"false";}s:25:"start_brackets_line_index";i:77;s:26:"start_brackets_token_index";i:759;s:23:"end_brackets_line_index";i:82;s:24:"end_brackets_token_index";i:802;s:14:"end_line_index";i:82;s:15:"end_token_index";i:802;}s:9:"getBroker";a:20:{s:4:"name";s:9:"getBroker";s:16:"start_line_index";i:88;s:17:"start_token_index";i:812;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:8:"comments";a:4:{i:0;s:74:"//If $broker_name is empty, the $broker_name = $this->default_broker_name.";i:1;s:84:"//If $this->default_broker_name is empty too, get the first elm from $this->brokers.";i:2;s:87:"//If $broker_name is numeric, get the correspondent key, based in the array_keys index.";i:3;s:112:"//If $broker_name is numeric, gets $this->brokers[ $broker_name -1 ], which means the $broker_name should be +1.";}s:25:"start_comments_line_index";i:84;s:26:"start_comments_token_index";i:804;s:23:"end_comments_line_index";i:88;s:24:"end_comments_token_index";i:810;s:22:"start_args_token_index";i:817;s:20:"end_args_token_index";i:830;s:9:"arguments";a:2:{s:12:"$broker_name";s:5:"false";s:13:"$return_false";s:5:"false";}s:25:"start_brackets_line_index";i:88;s:26:"start_brackets_token_index";i:832;s:23:"end_brackets_line_index";i:108;s:24:"end_brackets_token_index";i:1012;s:14:"end_line_index";i:108;s:15:"end_token_index";i:1012;}s:10:"getBrokers";a:14:{s:4:"name";s:10:"getBrokers";s:16:"start_line_index";i:110;s:17:"start_token_index";i:1014;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:1019;s:20:"end_args_token_index";i:1020;s:25:"start_brackets_line_index";i:110;s:26:"start_brackets_token_index";i:1022;s:23:"end_brackets_line_index";i:112;s:24:"end_brackets_token_index";i:1031;s:14:"end_line_index";i:112;s:15:"end_token_index";i:1031;}s:20:"setDefaultBrokerName";a:20:{s:4:"name";s:20:"setDefaultBrokerName";s:16:"start_line_index";i:115;s:17:"start_token_index";i:1035;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:8:"comments";a:1:{i:0;s:338:"//only set default_broker_name if exists, otherwise ignore it. $return_false must be true otherwise if we have multiple DBData Layers with different DBDrivers and the $default_broker_name is == to $GLOBALS[default_db_driver], it will give an exception. So by default the $return_false should be true, in order to don't give any exception.";}s:25:"start_comments_line_index";i:114;s:26:"start_comments_token_index";i:1033;s:23:"end_comments_line_index";i:115;s:24:"end_comments_token_index";i:1033;s:22:"start_args_token_index";i:1040;s:20:"end_args_token_index";i:1049;s:9:"arguments";a:2:{s:20:"$default_broker_name";N;s:13:"$return_false";s:4:"true";}s:25:"start_brackets_line_index";i:115;s:26:"start_brackets_token_index";i:1051;s:23:"end_brackets_line_index";i:132;s:24:"end_brackets_token_index";i:1149;s:14:"end_line_index";i:132;s:15:"end_token_index";i:1149;}s:20:"getDefaultBrokerName";a:14:{s:4:"name";s:20:"getDefaultBrokerName";s:16:"start_line_index";i:134;s:17:"start_token_index";i:1151;s:4:"type";s:6:"public";s:8:"abstract";b:0;s:6:"static";b:0;s:22:"start_args_token_index";i:1156;s:20:"end_args_token_index";i:1157;s:25:"start_brackets_line_index";i:134;s:26:"start_brackets_token_index";i:1159;s:23:"end_brackets_line_index";i:136;s:24:"end_brackets_token_index";i:1168;s:14:"end_line_index";i:136;s:15:"end_token_index";i:1168;}}s:5:"props";a:2:{s:8:"settings";a:11:{s:4:"name";s:8:"settings";s:4:"type";s:6:"public";s:5:"value";s:0:"";s:8:"var_type";s:0:"";s:6:"static";b:0;s:8:"abstract";b:0;s:5:"const";b:0;s:16:"start_line_index";i:17;s:17:"start_token_index";i:86;s:14:"end_line_index";i:17;s:15:"end_token_index";i:89;}s:12:"modules_path";a:11:{s:4:"name";s:12:"modules_path";s:4:"type";s:6:"public";s:5:"value";s:7:"array()";s:8:"var_type";s:0:"";s:6:"static";b:0;s:8:"abstract";b:0;s:5:"const";b:0;s:16:"start_line_index";i:18;s:17:"start_token_index";i:91;s:14:"end_line_index";i:18;s:15:"end_token_index";i:100;}}}}